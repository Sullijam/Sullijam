from .graph import Graph

data = [dict() for _ in range(42)]
# Graph consisting of 2 nodes
data[0]["graph"] = Graph(is_directed=False)
data[0]["graph"].add_edge("a", "b", 1663)
data[0]["graph"].add_edge("a", "c", 765)
data[0]["graph"].add_edge("b", "c", 582)
data[0]["mst"] = Graph(is_directed=False)
data[0]["mst"].add_edge("a", "c", weight=765)
data[0]["mst"].add_edge("b", "c", weight=582)
data[0]["solutions"] = [
    { "edge": ("a", "b"), "weight": 1664, "expected": [('a', 'c'), ('b', 'c')] },
    { "edge": ("a", "b"), "weight": 764, "expected": [('a', 'b'), ('b', 'c')] },
    { "edge": ("b", "c"), "weight": 581, "expected": [('a', 'c'), ('b', 'c')] },
    { "edge": ("a", "c"), "weight": 766, "expected": [('a', 'c'), ('b', 'c')] }
]
# Graph consisting of 3 nodes
data[1]["graph"] = Graph(is_directed=False)
data[1]["graph"].add_edge("a", "b", 1051)
data[1]["graph"].add_edge("a", "c", 1379)
data[1]["graph"].add_edge("a", "d", 437)
data[1]["graph"].add_edge("b", "c", 1416)
data[1]["graph"].add_edge("b", "d", 237)
data[1]["graph"].add_edge("c", "d", 1106)
data[1]["mst"] = Graph(is_directed=False)
data[1]["mst"].add_edge("a", "d", weight=437)
data[1]["mst"].add_edge("b", "d", weight=237)
data[1]["mst"].add_edge("c", "d", weight=1106)
data[1]["solutions"] = [
    { "edge": ("a", "c"), "weight": 1380, "expected": [('a', 'd'), ('b', 'd'), ('c', 'd')] },
    { "edge": ("a", "c"), "weight": 436, "expected": [('a', 'c'), ('a', 'd'), ('b', 'd')] },
    { "edge": ("a", "d"), "weight": 436, "expected": [('a', 'd'), ('b', 'd'), ('c', 'd')] },
    { "edge": ("c", "d"), "weight": 1380, "expected": [('a', 'd'), ('a', 'c'), ('b', 'd')] }
]
# Graph consisting of 4 nodes
data[2]["graph"] = Graph(is_directed=False)
data[2]["graph"].add_edge("a", "b", 1128)
data[2]["graph"].add_edge("a", "c", 1161)
data[2]["graph"].add_edge("a", "e", 932)
data[2]["graph"].add_edge("b", "d", 1366)
data[2]["graph"].add_edge("b", "e", 651)
data[2]["graph"].add_edge("c", "d", 873)
data[2]["graph"].add_edge("c", "e", 1294)
data[2]["mst"] = Graph(is_directed=False)
data[2]["mst"].add_edge("a", "c", weight=1161)
data[2]["mst"].add_edge("a", "e", weight=932)
data[2]["mst"].add_edge("b", "e", weight=651)
data[2]["mst"].add_edge("c", "d", weight=873)
data[2]["solutions"] = [
    { "edge": ("a", "b"), "weight": 1129, "expected": [('a', 'e'), ('a', 'c'), ('b', 'e'), ('c', 'd')] },
    { "edge": ("c", "e"), "weight": 872, "expected": [('a', 'e'), ('b', 'e'), ('c', 'e'), ('c', 'd')] },
    { "edge": ("c", "d"), "weight": 872, "expected": [('a', 'e'), ('a', 'c'), ('b', 'e'), ('c', 'd')] },
    { "edge": ("a", "e"), "weight": 933, "expected": [('a', 'e'), ('a', 'c'), ('b', 'e'), ('c', 'd')] }
]
# Graph consisting of 5 nodes
data[3]["graph"] = Graph(is_directed=False)
data[3]["graph"].add_edge("a", "b", 26)
data[3]["graph"].add_edge("a", "e", 810)
data[3]["graph"].add_edge("a", "f", 190)
data[3]["graph"].add_edge("b", "d", 402)
data[3]["graph"].add_edge("b", "f", 1341)
data[3]["graph"].add_edge("d", "c", 769)
data[3]["graph"].add_edge("e", "c", 242)
data[3]["graph"].add_edge("e", "d", 1514)
data[3]["graph"].add_edge("f", "c", 1331)
data[3]["mst"] = Graph(is_directed=False)
data[3]["mst"].add_edge("a", "b", weight=26)
data[3]["mst"].add_edge("a", "f", weight=190)
data[3]["mst"].add_edge("b", "d", weight=402)
data[3]["mst"].add_edge("d", "c", weight=769)
data[3]["mst"].add_edge("e", "c", weight=242)
data[3]["solutions"] = [
    { "edge": ("a", "e"), "weight": 811, "expected": [('a', 'b'), ('a', 'f'), ('b', 'd'), ('e', 'c'), ('d', 'c')] },
    { "edge": ("a", "e"), "weight": 401, "expected": [('a', 'b'), ('a', 'f'), ('a', 'e'), ('b', 'd'), ('e', 'c')] },
    { "edge": ("a", "f"), "weight": 189, "expected": [('a', 'b'), ('a', 'f'), ('b', 'd'), ('e', 'c'), ('d', 'c')] },
    { "edge": ("a", "b"), "weight": 27, "expected": [('a', 'b'), ('a', 'f'), ('b', 'd'), ('e', 'c'), ('d', 'c')] }
]
# Graph consisting of 6 nodes
data[4]["graph"] = Graph(is_directed=False)
data[4]["graph"].add_edge("a", "b", 1173)
data[4]["graph"].add_edge("a", "e", 152)
data[4]["graph"].add_edge("a", "f", 1480)
data[4]["graph"].add_edge("b", "f", 185)
data[4]["graph"].add_edge("b", "g", 737)
data[4]["graph"].add_edge("c", "d", 1439)
data[4]["graph"].add_edge("e", "c", 1354)
data[4]["graph"].add_edge("e", "d", 1651)
data[4]["graph"].add_edge("f", "c", 367)
data[4]["graph"].add_edge("g", "d", 340)
data[4]["mst"] = Graph(is_directed=False)
data[4]["mst"].add_edge("a", "b", weight=1173)
data[4]["mst"].add_edge("a", "e", weight=152)
data[4]["mst"].add_edge("b", "f", weight=185)
data[4]["mst"].add_edge("b", "g", weight=737)
data[4]["mst"].add_edge("f", "c", weight=367)
data[4]["mst"].add_edge("g", "d", weight=340)
data[4]["solutions"] = [
    { "edge": ("e", "d"), "weight": 1652, "expected": [('a', 'e'), ('a', 'b'), ('b', 'f'), ('b', 'g'), ('f', 'c'), ('g', 'd')] },
    { "edge": ("a", "f"), "weight": 736, "expected": [('a', 'e'), ('a', 'f'), ('b', 'f'), ('b', 'g'), ('f', 'c'), ('g', 'd')] },
    { "edge": ("a", "b"), "weight": 1172, "expected": [('a', 'e'), ('a', 'b'), ('b', 'f'), ('b', 'g'), ('f', 'c'), ('g', 'd')] },
    { "edge": ("b", "g"), "weight": 1440, "expected": [('a', 'e'), ('a', 'b'), ('b', 'f'), ('f', 'c'), ('g', 'd'), ('c', 'd')] }
]
# Graph consisting of 7 nodes
data[5]["graph"] = Graph(is_directed=False)
data[5]["graph"].add_edge("a", "c", 106)
data[5]["graph"].add_edge("a", "f", 673)
data[5]["graph"].add_edge("a", "h", 1134)
data[5]["graph"].add_edge("b", "e", 576)
data[5]["graph"].add_edge("b", "g", 401)
data[5]["graph"].add_edge("c", "e", 1270)
data[5]["graph"].add_edge("c", "g", 349)
data[5]["graph"].add_edge("e", "d", 724)
data[5]["graph"].add_edge("g", "d", 850)
data[5]["graph"].add_edge("h", "b", 477)
data[5]["graph"].add_edge("h", "d", 919)
data[5]["mst"] = Graph(is_directed=False)
data[5]["mst"].add_edge("a", "c", weight=106)
data[5]["mst"].add_edge("a", "f", weight=673)
data[5]["mst"].add_edge("b", "e", weight=576)
data[5]["mst"].add_edge("b", "g", weight=401)
data[5]["mst"].add_edge("c", "g", weight=349)
data[5]["mst"].add_edge("e", "d", weight=724)
data[5]["mst"].add_edge("h", "b", weight=477)
data[5]["solutions"] = [
    { "edge": ("c", "e"), "weight": 1271, "expected": [('a', 'c'), ('a', 'f'), ('c', 'g'), ('h', 'b'), ('b', 'g'), ('b', 'e'), ('e', 'd')] },
    { "edge": ("g", "d"), "weight": 348, "expected": [('a', 'c'), ('a', 'f'), ('c', 'g'), ('h', 'b'), ('b', 'g'), ('b', 'e'), ('g', 'd')] },
    { "edge": ("c", "g"), "weight": 348, "expected": [('a', 'c'), ('a', 'f'), ('c', 'g'), ('h', 'b'), ('b', 'g'), ('b', 'e'), ('e', 'd')] },
    { "edge": ("b", "e"), "weight": 1271, "expected": [('a', 'c'), ('a', 'f'), ('c', 'g'), ('h', 'b'), ('b', 'g'), ('e', 'd'), ('g', 'd')] }
]
# Graph consisting of 8 nodes
data[6]["graph"] = Graph(is_directed=False)
data[6]["graph"].add_edge("a", "e", 915)
data[6]["graph"].add_edge("a", "f", 500)
data[6]["graph"].add_edge("a", "i", 317)
data[6]["graph"].add_edge("b", "c", 571)
data[6]["graph"].add_edge("b", "g", 396)
data[6]["graph"].add_edge("c", "g", 555)
data[6]["graph"].add_edge("c", "h", 1204)
data[6]["graph"].add_edge("e", "h", 1519)
data[6]["graph"].add_edge("f", "b", 377)
data[6]["graph"].add_edge("f", "d", 470)
data[6]["graph"].add_edge("h", "d", 725)
data[6]["graph"].add_edge("i", "d", 1028)
data[6]["graph"].add_edge("i", "e", 157)
data[6]["mst"] = Graph(is_directed=False)
data[6]["mst"].add_edge("a", "f", weight=500)
data[6]["mst"].add_edge("a", "i", weight=317)
data[6]["mst"].add_edge("b", "g", weight=396)
data[6]["mst"].add_edge("c", "g", weight=555)
data[6]["mst"].add_edge("f", "b", weight=377)
data[6]["mst"].add_edge("f", "d", weight=470)
data[6]["mst"].add_edge("h", "d", weight=725)
data[6]["mst"].add_edge("i", "e", weight=157)
data[6]["solutions"] = [
    { "edge": ("c", "h"), "weight": 1205, "expected": [('a', 'i'), ('a', 'f'), ('i', 'e'), ('f', 'b'), ('f', 'd'), ('b', 'g'), ('c', 'g'), ('h', 'd')] },
    { "edge": ("e", "h"), "weight": 724, "expected": [('a', 'i'), ('a', 'f'), ('i', 'e'), ('e', 'h'), ('f', 'b'), ('f', 'd'), ('b', 'g'), ('c', 'g')] },
    { "edge": ("a", "f"), "weight": 499, "expected": [('a', 'i'), ('a', 'f'), ('i', 'e'), ('f', 'b'), ('f', 'd'), ('b', 'g'), ('c', 'g'), ('h', 'd')] },
    { "edge": ("b", "g"), "weight": 572, "expected": [('a', 'i'), ('a', 'f'), ('i', 'e'), ('f', 'b'), ('f', 'd'), ('b', 'c'), ('c', 'g'), ('h', 'd')] }
]
# Graph consisting of 9 nodes
data[7]["graph"] = Graph(is_directed=False)
data[7]["graph"].add_edge("a", "b", 612)
data[7]["graph"].add_edge("a", "c", 1555)
data[7]["graph"].add_edge("a", "g", 726)
data[7]["graph"].add_edge("b", "c", 1465)
data[7]["graph"].add_edge("b", "i", 925)
data[7]["graph"].add_edge("c", "j", 1624)
data[7]["graph"].add_edge("d", "e", 424)
data[7]["graph"].add_edge("d", "h", 41)
data[7]["graph"].add_edge("e", "f", 722)
data[7]["graph"].add_edge("g", "f", 1234)
data[7]["graph"].add_edge("g", "i", 734)
data[7]["graph"].add_edge("i", "f", 1292)
data[7]["graph"].add_edge("j", "d", 437)
data[7]["graph"].add_edge("j", "e", 337)
data[7]["mst"] = Graph(is_directed=False)
data[7]["mst"].add_edge("a", "b", weight=612)
data[7]["mst"].add_edge("a", "g", weight=726)
data[7]["mst"].add_edge("b", "c", weight=1465)
data[7]["mst"].add_edge("d", "e", weight=424)
data[7]["mst"].add_edge("d", "h", weight=41)
data[7]["mst"].add_edge("e", "f", weight=722)
data[7]["mst"].add_edge("g", "f", weight=1234)
data[7]["mst"].add_edge("g", "i", weight=734)
data[7]["mst"].add_edge("j", "e", weight=337)
data[7]["solutions"] = [
    { "edge": ("b", "i"), "weight": 926, "expected": [('a', 'b'), ('a', 'g'), ('b', 'c'), ('g', 'i'), ('g', 'f'), ('j', 'e'), ('d', 'h'), ('d', 'e'), ('e', 'f')] },
    { "edge": ("c", "j"), "weight": 336, "expected": [('a', 'b'), ('a', 'g'), ('c', 'j'), ('g', 'i'), ('g', 'f'), ('j', 'e'), ('d', 'h'), ('d', 'e'), ('e', 'f')] },
    { "edge": ("j", "e"), "weight": 336, "expected": [('a', 'b'), ('a', 'g'), ('b', 'c'), ('g', 'i'), ('g', 'f'), ('j', 'e'), ('d', 'h'), ('d', 'e'), ('e', 'f')] },
    { "edge": ("g", "i"), "weight": 735, "expected": [('a', 'b'), ('a', 'g'), ('b', 'c'), ('g', 'i'), ('g', 'f'), ('j', 'e'), ('d', 'h'), ('d', 'e'), ('e', 'f')] }
]
# Graph consisting of 10 nodes
data[8]["graph"] = Graph(is_directed=False)
data[8]["graph"].add_edge("a", "f", 1647)
data[8]["graph"].add_edge("a", "h", 311)
data[8]["graph"].add_edge("a", "j", 297)
data[8]["graph"].add_edge("b", "d", 1092)
data[8]["graph"].add_edge("b", "g", 1220)
data[8]["graph"].add_edge("b", "i", 1016)
data[8]["graph"].add_edge("c", "e", 1462)
data[8]["graph"].add_edge("d", "c", 1451)
data[8]["graph"].add_edge("f", "h", 75)
data[8]["graph"].add_edge("f", "i", 1349)
data[8]["graph"].add_edge("g", "c", 1032)
data[8]["graph"].add_edge("g", "e", 1235)
data[8]["graph"].add_edge("h", "d", 1027)
data[8]["graph"].add_edge("i", "e", 830)
data[8]["graph"].add_edge("j", "k", 973)
data[8]["mst"] = Graph(is_directed=False)
data[8]["mst"].add_edge("a", "h", weight=311)
data[8]["mst"].add_edge("a", "j", weight=297)
data[8]["mst"].add_edge("b", "d", weight=1092)
data[8]["mst"].add_edge("b", "g", weight=1220)
data[8]["mst"].add_edge("b", "i", weight=1016)
data[8]["mst"].add_edge("f", "h", weight=75)
data[8]["mst"].add_edge("g", "c", weight=1032)
data[8]["mst"].add_edge("h", "d", weight=1027)
data[8]["mst"].add_edge("i", "e", weight=830)
data[8]["mst"].add_edge("j", "k", weight=973)
data[8]["solutions"] = [
    { "edge": ("f", "i"), "weight": 1350, "expected": [('a', 'j'), ('a', 'h'), ('j', 'k'), ('f', 'h'), ('h', 'd'), ('b', 'i'), ('b', 'd'), ('b', 'g'), ('i', 'e'), ('g', 'c')] },
    { "edge": ("a", "f"), "weight": 1219, "expected": [('a', 'j'), ('a', 'h'), ('j', 'k'), ('f', 'h'), ('h', 'd'), ('b', 'i'), ('b', 'd'), ('b', 'g'), ('i', 'e'), ('g', 'c')] },
    { "edge": ("j", "k"), "weight": 972, "expected": [('a', 'j'), ('a', 'h'), ('j', 'k'), ('f', 'h'), ('h', 'd'), ('b', 'i'), ('b', 'd'), ('b', 'g'), ('i', 'e'), ('g', 'c')] },
    { "edge": ("a", "h"), "weight": 312, "expected": [('a', 'j'), ('a', 'h'), ('j', 'k'), ('f', 'h'), ('h', 'd'), ('b', 'i'), ('b', 'd'), ('b', 'g'), ('i', 'e'), ('g', 'c')] }
]
# Graph consisting of 11 nodes
data[9]["graph"] = Graph(is_directed=False)
data[9]["graph"].add_edge("a", "b", 1197)
data[9]["graph"].add_edge("a", "h", 601)
data[9]["graph"].add_edge("a", "k", 1025)
data[9]["graph"].add_edge("b", "i", 490)
data[9]["graph"].add_edge("b", "k", 270)
data[9]["graph"].add_edge("c", "d", 316)
data[9]["graph"].add_edge("c", "e", 286)
data[9]["graph"].add_edge("c", "g", 47)
data[9]["graph"].add_edge("d", "l", 1385)
data[9]["graph"].add_edge("f", "j", 142)
data[9]["graph"].add_edge("g", "f", 466)
data[9]["graph"].add_edge("h", "d", 550)
data[9]["graph"].add_edge("h", "e", 1502)
data[9]["graph"].add_edge("i", "e", 688)
data[9]["graph"].add_edge("i", "g", 1511)
data[9]["graph"].add_edge("k", "f", 272)
data[9]["graph"].add_edge("l", "j", 709)
data[9]["mst"] = Graph(is_directed=False)
data[9]["mst"].add_edge("a", "h", weight=601)
data[9]["mst"].add_edge("b", "i", weight=490)
data[9]["mst"].add_edge("b", "k", weight=270)
data[9]["mst"].add_edge("c", "d", weight=316)
data[9]["mst"].add_edge("c", "e", weight=286)
data[9]["mst"].add_edge("c", "g", weight=47)
data[9]["mst"].add_edge("f", "j", weight=142)
data[9]["mst"].add_edge("g", "f", weight=466)
data[9]["mst"].add_edge("h", "d", weight=550)
data[9]["mst"].add_edge("k", "f", weight=272)
data[9]["mst"].add_edge("l", "j", weight=709)
data[9]["solutions"] = [
    { "edge": ("h", "e"), "weight": 1503, "expected": [('a', 'h'), ('b', 'k'), ('b', 'i'), ('k', 'f'), ('h', 'd'), ('c', 'g'), ('c', 'e'), ('c', 'd'), ('g', 'f'), ('l', 'j'), ('f', 'j')] },
    { "edge": ("h", "e"), "weight": 269, "expected": [('a', 'h'), ('b', 'k'), ('b', 'i'), ('k', 'f'), ('h', 'e'), ('c', 'g'), ('c', 'e'), ('c', 'd'), ('g', 'f'), ('l', 'j'), ('f', 'j')] },
    { "edge": ("b", "k"), "weight": 269, "expected": [('a', 'h'), ('b', 'k'), ('b', 'i'), ('k', 'f'), ('h', 'd'), ('c', 'g'), ('c', 'e'), ('c', 'd'), ('g', 'f'), ('l', 'j'), ('f', 'j')] },
    { "edge": ("g", "f"), "weight": 1512, "expected": [('a', 'h'), ('b', 'k'), ('b', 'i'), ('k', 'f'), ('h', 'd'), ('i', 'e'), ('c', 'g'), ('c', 'e'), ('c', 'd'), ('l', 'j'), ('f', 'j')] }
]
# Graph consisting of 12 nodes
data[10]["graph"] = Graph(is_directed=False)
data[10]["graph"].add_edge("a", "i", 346)
data[10]["graph"].add_edge("a", "j", 1679)
data[10]["graph"].add_edge("a", "k", 97)
data[10]["graph"].add_edge("b", "c", 864)
data[10]["graph"].add_edge("b", "d", 40)
data[10]["graph"].add_edge("b", "e", 1123)
data[10]["graph"].add_edge("c", "d", 1018)
data[10]["graph"].add_edge("e", "f", 1416)
data[10]["graph"].add_edge("e", "m", 1330)
data[10]["graph"].add_edge("g", "l", 295)
data[10]["graph"].add_edge("i", "c", 649)
data[10]["graph"].add_edge("i", "f", 1380)
data[10]["graph"].add_edge("j", "d", 96)
data[10]["graph"].add_edge("j", "g", 304)
data[10]["graph"].add_edge("k", "f", 180)
data[10]["graph"].add_edge("k", "g", 368)
data[10]["graph"].add_edge("l", "h", 1605)
data[10]["graph"].add_edge("m", "h", 400)
data[10]["mst"] = Graph(is_directed=False)
data[10]["mst"].add_edge("a", "i", weight=346)
data[10]["mst"].add_edge("a", "k", weight=97)
data[10]["mst"].add_edge("b", "d", weight=40)
data[10]["mst"].add_edge("b", "e", weight=1123)
data[10]["mst"].add_edge("e", "m", weight=1330)
data[10]["mst"].add_edge("g", "l", weight=295)
data[10]["mst"].add_edge("i", "c", weight=649)
data[10]["mst"].add_edge("j", "d", weight=96)
data[10]["mst"].add_edge("j", "g", weight=304)
data[10]["mst"].add_edge("k", "f", weight=180)
data[10]["mst"].add_edge("k", "g", weight=368)
data[10]["mst"].add_edge("m", "h", weight=400)
data[10]["solutions"] = [
    { "edge": ("c", "d"), "weight": 1019, "expected": [('a', 'k'), ('a', 'i'), ('i', 'c'), ('j', 'd'), ('j', 'g'), ('k', 'f'), ('k', 'g'), ('b', 'd'), ('b', 'e'), ('e', 'm'), ('m', 'h'), ('g', 'l')] },
    { "edge": ("a", "j"), "weight": 95, "expected": [('a', 'j'), ('a', 'k'), ('a', 'i'), ('i', 'c'), ('j', 'd'), ('j', 'g'), ('k', 'f'), ('b', 'd'), ('b', 'e'), ('e', 'm'), ('m', 'h'), ('g', 'l')] },
    { "edge": ("m", "h"), "weight": 399, "expected": [('a', 'k'), ('a', 'i'), ('i', 'c'), ('j', 'd'), ('j', 'g'), ('k', 'f'), ('k', 'g'), ('b', 'd'), ('b', 'e'), ('e', 'm'), ('m', 'h'), ('g', 'l')] },
    { "edge": ("e", "m"), "weight": 1606, "expected": [('a', 'k'), ('a', 'i'), ('i', 'c'), ('j', 'd'), ('j', 'g'), ('k', 'f'), ('k', 'g'), ('b', 'd'), ('b', 'e'), ('m', 'h'), ('g', 'l'), ('l', 'h')] }
]
# Graph consisting of 13 nodes
data[11]["graph"] = Graph(is_directed=False)
data[11]["graph"].add_edge("a", "d", 1132)
data[11]["graph"].add_edge("a", "i", 264)
data[11]["graph"].add_edge("a", "l", 79)
data[11]["graph"].add_edge("b", "g", 577)
data[11]["graph"].add_edge("b", "m", 1221)
data[11]["graph"].add_edge("b", "n", 1020)
data[11]["graph"].add_edge("c", "k", 170)
data[11]["graph"].add_edge("d", "c", 1259)
data[11]["graph"].add_edge("d", "h", 143)
data[11]["graph"].add_edge("f", "j", 1414)
data[11]["graph"].add_edge("g", "f", 1660)
data[11]["graph"].add_edge("h", "e", 1076)
data[11]["graph"].add_edge("h", "f", 665)
data[11]["graph"].add_edge("i", "l", 997)
data[11]["graph"].add_edge("i", "n", 1333)
data[11]["graph"].add_edge("k", "e", 1401)
data[11]["graph"].add_edge("k", "j", 124)
data[11]["graph"].add_edge("l", "j", 494)
data[11]["graph"].add_edge("m", "c", 777)
data[11]["graph"].add_edge("m", "e", 967)
data[11]["graph"].add_edge("n", "g", 1304)
data[11]["mst"] = Graph(is_directed=False)
data[11]["mst"].add_edge("a", "i", weight=264)
data[11]["mst"].add_edge("a", "l", weight=79)
data[11]["mst"].add_edge("b", "g", weight=577)
data[11]["mst"].add_edge("b", "m", weight=1221)
data[11]["mst"].add_edge("b", "n", weight=1020)
data[11]["mst"].add_edge("c", "k", weight=170)
data[11]["mst"].add_edge("d", "h", weight=143)
data[11]["mst"].add_edge("h", "e", weight=1076)
data[11]["mst"].add_edge("h", "f", weight=665)
data[11]["mst"].add_edge("k", "j", weight=124)
data[11]["mst"].add_edge("l", "j", weight=494)
data[11]["mst"].add_edge("m", "c", weight=777)
data[11]["mst"].add_edge("m", "e", weight=967)
data[11]["solutions"] = [
    { "edge": ("g", "f"), "weight": 1661, "expected": [('a', 'l'), ('a', 'i'), ('l', 'j'), ('d', 'h'), ('b', 'g'), ('b', 'n'), ('b', 'm'), ('m', 'c'), ('m', 'e'), ('c', 'k'), ('k', 'j'), ('h', 'f'), ('h', 'e')] },
    { "edge": ("f", "j"), "weight": 123, "expected": [('a', 'l'), ('a', 'i'), ('l', 'j'), ('d', 'h'), ('b', 'g'), ('b', 'n'), ('b', 'm'), ('m', 'c'), ('m', 'e'), ('c', 'k'), ('k', 'j'), ('h', 'f'), ('f', 'j')] },
    { "edge": ("l", "j"), "weight": 493, "expected": [('a', 'l'), ('a', 'i'), ('l', 'j'), ('d', 'h'), ('b', 'g'), ('b', 'n'), ('b', 'm'), ('m', 'c'), ('m', 'e'), ('c', 'k'), ('k', 'j'), ('h', 'f'), ('h', 'e')] },
    { "edge": ("m", "c"), "weight": 778, "expected": [('a', 'l'), ('a', 'i'), ('l', 'j'), ('d', 'h'), ('b', 'g'), ('b', 'n'), ('b', 'm'), ('m', 'c'), ('m', 'e'), ('c', 'k'), ('k', 'j'), ('h', 'f'), ('h', 'e')] }
]
# Graph consisting of 14 nodes
data[12]["graph"] = Graph(is_directed=False)
data[12]["graph"].add_edge("a", "f", 985)
data[12]["graph"].add_edge("a", "g", 1323)
data[12]["graph"].add_edge("a", "n", 379)
data[12]["graph"].add_edge("b", "c", 1284)
data[12]["graph"].add_edge("b", "e", 1657)
data[12]["graph"].add_edge("c", "i", 863)
data[12]["graph"].add_edge("d", "j", 381)
data[12]["graph"].add_edge("e", "h", 1192)
data[12]["graph"].add_edge("e", "l", 1549)
data[12]["graph"].add_edge("f", "c", 171)
data[12]["graph"].add_edge("f", "d", 1593)
data[12]["graph"].add_edge("g", "i", 316)
data[12]["graph"].add_edge("g", "m", 1324)
data[12]["graph"].add_edge("i", "h", 1484)
data[12]["graph"].add_edge("j", "k", 1197)
data[12]["graph"].add_edge("j", "l", 1023)
data[12]["graph"].add_edge("k", "o", 451)
data[12]["graph"].add_edge("l", "h", 1638)
data[12]["graph"].add_edge("m", "k", 1436)
data[12]["graph"].add_edge("m", "o", 259)
data[12]["graph"].add_edge("n", "b", 638)
data[12]["graph"].add_edge("n", "d", 282)
data[12]["mst"] = Graph(is_directed=False)
data[12]["mst"].add_edge("a", "f", weight=985)
data[12]["mst"].add_edge("a", "n", weight=379)
data[12]["mst"].add_edge("c", "i", weight=863)
data[12]["mst"].add_edge("d", "j", weight=381)
data[12]["mst"].add_edge("e", "h", weight=1192)
data[12]["mst"].add_edge("f", "c", weight=171)
data[12]["mst"].add_edge("g", "i", weight=316)
data[12]["mst"].add_edge("i", "h", weight=1484)
data[12]["mst"].add_edge("j", "k", weight=1197)
data[12]["mst"].add_edge("j", "l", weight=1023)
data[12]["mst"].add_edge("k", "o", weight=451)
data[12]["mst"].add_edge("m", "o", weight=259)
data[12]["mst"].add_edge("n", "b", weight=638)
data[12]["mst"].add_edge("n", "d", weight=282)
data[12]["solutions"] = [
    { "edge": ("b", "e"), "weight": 1658, "expected": [('a', 'n'), ('a', 'f'), ('n', 'd'), ('n', 'b'), ('f', 'c'), ('g', 'i'), ('c', 'i'), ('e', 'h'), ('i', 'h'), ('d', 'j'), ('j', 'l'), ('j', 'k'), ('m', 'o'), ('k', 'o')] },
    { "edge": ("e", "l"), "weight": 1022, "expected": [('a', 'n'), ('a', 'f'), ('n', 'd'), ('n', 'b'), ('f', 'c'), ('g', 'i'), ('c', 'i'), ('e', 'l'), ('e', 'h'), ('d', 'j'), ('j', 'l'), ('j', 'k'), ('m', 'o'), ('k', 'o')] },
    { "edge": ("c", "i"), "weight": 862, "expected": [('a', 'n'), ('a', 'f'), ('n', 'd'), ('n', 'b'), ('f', 'c'), ('g', 'i'), ('c', 'i'), ('e', 'h'), ('i', 'h'), ('d', 'j'), ('j', 'l'), ('j', 'k'), ('m', 'o'), ('k', 'o')] },
    { "edge": ("j", "l"), "weight": 1024, "expected": [('a', 'n'), ('a', 'f'), ('n', 'd'), ('n', 'b'), ('f', 'c'), ('g', 'i'), ('c', 'i'), ('e', 'h'), ('i', 'h'), ('d', 'j'), ('j', 'l'), ('j', 'k'), ('m', 'o'), ('k', 'o')] }
]
# Graph consisting of 15 nodes
data[13]["graph"] = Graph(is_directed=False)
data[13]["graph"].add_edge("a", "d", 834)
data[13]["graph"].add_edge("a", "j", 12)
data[13]["graph"].add_edge("a", "p", 755)
data[13]["graph"].add_edge("b", "i", 31)
data[13]["graph"].add_edge("b", "l", 112)
data[13]["graph"].add_edge("c", "m", 1290)
data[13]["graph"].add_edge("c", "o", 214)
data[13]["graph"].add_edge("d", "e", 758)
data[13]["graph"].add_edge("d", "g", 247)
data[13]["graph"].add_edge("g", "f", 559)
data[13]["graph"].add_edge("h", "k", 1378)
data[13]["graph"].add_edge("i", "g", 366)
data[13]["graph"].add_edge("i", "h", 655)
data[13]["graph"].add_edge("j", "b", 1409)
data[13]["graph"].add_edge("j", "c", 428)
data[13]["graph"].add_edge("l", "e", 1428)
data[13]["graph"].add_edge("l", "f", 899)
data[13]["graph"].add_edge("m", "k", 424)
data[13]["graph"].add_edge("m", "n", 777)
data[13]["graph"].add_edge("o", "e", 1331)
data[13]["graph"].add_edge("o", "f", 1530)
data[13]["graph"].add_edge("p", "h", 688)
data[13]["graph"].add_edge("p", "k", 799)
data[13]["mst"] = Graph(is_directed=False)
data[13]["mst"].add_edge("a", "j", weight=12)
data[13]["mst"].add_edge("a", "p", weight=755)
data[13]["mst"].add_edge("b", "i", weight=31)
data[13]["mst"].add_edge("b", "l", weight=112)
data[13]["mst"].add_edge("c", "o", weight=214)
data[13]["mst"].add_edge("d", "e", weight=758)
data[13]["mst"].add_edge("d", "g", weight=247)
data[13]["mst"].add_edge("g", "f", weight=559)
data[13]["mst"].add_edge("i", "g", weight=366)
data[13]["mst"].add_edge("i", "h", weight=655)
data[13]["mst"].add_edge("j", "c", weight=428)
data[13]["mst"].add_edge("m", "k", weight=424)
data[13]["mst"].add_edge("m", "n", weight=777)
data[13]["mst"].add_edge("p", "h", weight=688)
data[13]["mst"].add_edge("p", "k", weight=799)
data[13]["solutions"] = [
    { "edge": ("c", "m"), "weight": 1291, "expected": [('a', 'j'), ('a', 'p'), ('j', 'c'), ('d', 'g'), ('d', 'e'), ('p', 'h'), ('p', 'k'), ('b', 'i'), ('b', 'l'), ('i', 'g'), ('i', 'h'), ('c', 'o'), ('m', 'k'), ('m', 'n'), ('g', 'f')] },
    { "edge": ("a", "d"), "weight": 654, "expected": [('a', 'j'), ('a', 'd'), ('j', 'c'), ('d', 'g'), ('d', 'e'), ('p', 'h'), ('p', 'k'), ('b', 'i'), ('b', 'l'), ('i', 'g'), ('i', 'h'), ('c', 'o'), ('m', 'k'), ('m', 'n'), ('g', 'f')] },
    { "edge": ("i", "g"), "weight": 365, "expected": [('a', 'j'), ('a', 'p'), ('j', 'c'), ('d', 'g'), ('d', 'e'), ('p', 'h'), ('p', 'k'), ('b', 'i'), ('b', 'l'), ('i', 'g'), ('i', 'h'), ('c', 'o'), ('m', 'k'), ('m', 'n'), ('g', 'f')] },
    { "edge": ("i", "g"), "weight": 1531, "expected": [('a', 'j'), ('a', 'p'), ('a', 'd'), ('j', 'c'), ('d', 'g'), ('d', 'e'), ('p', 'h'), ('p', 'k'), ('b', 'i'), ('b', 'l'), ('i', 'h'), ('c', 'o'), ('m', 'k'), ('m', 'n'), ('g', 'f')] }
]
# Graph consisting of 15 nodes
data[14]["graph"] = Graph(is_directed=False)
data[14]["graph"].add_edge("a", "b", 166)
data[14]["graph"].add_edge("a", "e", 89)
data[14]["graph"].add_edge("a", "n", 51)
data[14]["graph"].add_edge("b", "d", 80)
data[14]["graph"].add_edge("b", "i", 144)
data[14]["graph"].add_edge("c", "k", 96)
data[14]["graph"].add_edge("c", "p", 186)
data[14]["graph"].add_edge("d", "l", 39)
data[14]["graph"].add_edge("e", "g", 92)
data[14]["graph"].add_edge("e", "l", 240)
data[14]["graph"].add_edge("g", "j", 183)
data[14]["graph"].add_edge("g", "m", 9)
data[14]["graph"].add_edge("i", "m", 232)
data[14]["graph"].add_edge("i", "o", 191)
data[14]["graph"].add_edge("j", "o", 40)
data[14]["graph"].add_edge("k", "f", 128)
data[14]["graph"].add_edge("k", "h", 200)
data[14]["graph"].add_edge("l", "f", 12)
data[14]["graph"].add_edge("m", "h", 82)
data[14]["graph"].add_edge("n", "c", 57)
data[14]["graph"].add_edge("n", "d", 143)
data[14]["graph"].add_edge("p", "f", 26)
data[14]["graph"].add_edge("p", "h", 78)
data[14]["mst"] = Graph(is_directed=False)
data[14]["mst"].add_edge("a", "e", weight=89)
data[14]["mst"].add_edge("a", "n", weight=51)
data[14]["mst"].add_edge("b", "d", weight=80)
data[14]["mst"].add_edge("b", "i", weight=144)
data[14]["mst"].add_edge("c", "k", weight=96)
data[14]["mst"].add_edge("d", "l", weight=39)
data[14]["mst"].add_edge("e", "g", weight=92)
data[14]["mst"].add_edge("g", "j", weight=183)
data[14]["mst"].add_edge("g", "m", weight=9)
data[14]["mst"].add_edge("j", "o", weight=40)
data[14]["mst"].add_edge("l", "f", weight=12)
data[14]["mst"].add_edge("m", "h", weight=82)
data[14]["mst"].add_edge("n", "c", weight=57)
data[14]["mst"].add_edge("p", "f", weight=26)
data[14]["mst"].add_edge("p", "h", weight=78)
data[14]["solutions"] = [
    { "edge": ("i", "o"), "weight": 192, "expected": [('a', 'n'), ('a', 'e'), ('b', 'd'), ('b', 'i'), ('e', 'g'), ('n', 'c'), ('d', 'l'), ('c', 'k'), ('p', 'f'), ('p', 'h'), ('l', 'f'), ('g', 'm'), ('g', 'j'), ('j', 'o'), ('m', 'h')] },
    { "edge": ("i", "m"), "weight": 8, "expected": [('a', 'n'), ('a', 'e'), ('b', 'd'), ('e', 'g'), ('n', 'c'), ('i', 'm'), ('d', 'l'), ('c', 'k'), ('p', 'f'), ('p', 'h'), ('l', 'f'), ('g', 'm'), ('g', 'j'), ('j', 'o'), ('m', 'h')] },
    { "edge": ("a", "n"), "weight": 50, "expected": [('a', 'n'), ('a', 'e'), ('b', 'd'), ('b', 'i'), ('e', 'g'), ('n', 'c'), ('d', 'l'), ('c', 'k'), ('p', 'f'), ('p', 'h'), ('l', 'f'), ('g', 'm'), ('g', 'j'), ('j', 'o'), ('m', 'h')] },
    { "edge": ("l", "f"), "weight": 13, "expected": [('a', 'n'), ('a', 'e'), ('b', 'd'), ('b', 'i'), ('e', 'g'), ('n', 'c'), ('d', 'l'), ('c', 'k'), ('p', 'f'), ('p', 'h'), ('l', 'f'), ('g', 'm'), ('g', 'j'), ('j', 'o'), ('m', 'h')] }
]
# Graph consisting of 16 nodes
data[15]["graph"] = Graph(is_directed=False)
data[15]["graph"].add_edge("a", "c", 1660)
data[15]["graph"].add_edge("a", "p", 828)
data[15]["graph"].add_edge("a", "q", 1450)
data[15]["graph"].add_edge("b", "i", 1209)
data[15]["graph"].add_edge("b", "k", 1024)
data[15]["graph"].add_edge("b", "m", 470)
data[15]["graph"].add_edge("c", "j", 1248)
data[15]["graph"].add_edge("c", "p", 878)
data[15]["graph"].add_edge("d", "f", 1532)
data[15]["graph"].add_edge("d", "h", 600)
data[15]["graph"].add_edge("f", "g", 1320)
data[15]["graph"].add_edge("f", "l", 253)
data[15]["graph"].add_edge("h", "e", 364)
data[15]["graph"].add_edge("h", "g", 554)
data[15]["graph"].add_edge("i", "e", 1351)
data[15]["graph"].add_edge("i", "n", 1511)
data[15]["graph"].add_edge("j", "e", 742)
data[15]["graph"].add_edge("j", "g", 1609)
data[15]["graph"].add_edge("k", "d", 1570)
data[15]["graph"].add_edge("l", "o", 1074)
data[15]["graph"].add_edge("m", "l", 864)
data[15]["graph"].add_edge("n", "o", 1176)
data[15]["graph"].add_edge("p", "n", 52)
data[15]["graph"].add_edge("q", "k", 1434)
data[15]["graph"].add_edge("q", "m", 22)
data[15]["mst"] = Graph(is_directed=False)
data[15]["mst"].add_edge("a", "p", weight=828)
data[15]["mst"].add_edge("b", "i", weight=1209)
data[15]["mst"].add_edge("b", "k", weight=1024)
data[15]["mst"].add_edge("b", "m", weight=470)
data[15]["mst"].add_edge("c", "j", weight=1248)
data[15]["mst"].add_edge("c", "p", weight=878)
data[15]["mst"].add_edge("d", "h", weight=600)
data[15]["mst"].add_edge("f", "l", weight=253)
data[15]["mst"].add_edge("h", "e", weight=364)
data[15]["mst"].add_edge("h", "g", weight=554)
data[15]["mst"].add_edge("j", "e", weight=742)
data[15]["mst"].add_edge("l", "o", weight=1074)
data[15]["mst"].add_edge("m", "l", weight=864)
data[15]["mst"].add_edge("n", "o", weight=1176)
data[15]["mst"].add_edge("p", "n", weight=52)
data[15]["mst"].add_edge("q", "m", weight=22)
data[15]["solutions"] = [
    { "edge": ("a", "q"), "weight": 1451, "expected": [('a', 'p'), ('q', 'm'), ('c', 'p'), ('c', 'j'), ('p', 'n'), ('b', 'm'), ('b', 'k'), ('b', 'i'), ('m', 'l'), ('j', 'e'), ('d', 'h'), ('f', 'l'), ('h', 'e'), ('h', 'g'), ('l', 'o'), ('n', 'o')] },
    { "edge": ("a", "q"), "weight": 1208, "expected": [('a', 'p'), ('q', 'm'), ('c', 'p'), ('c', 'j'), ('p', 'n'), ('b', 'm'), ('b', 'k'), ('b', 'i'), ('m', 'l'), ('j', 'e'), ('d', 'h'), ('f', 'l'), ('h', 'e'), ('h', 'g'), ('l', 'o'), ('n', 'o')] },
    { "edge": ("b", "k"), "weight": 1023, "expected": [('a', 'p'), ('q', 'm'), ('c', 'p'), ('c', 'j'), ('p', 'n'), ('b', 'm'), ('b', 'k'), ('b', 'i'), ('m', 'l'), ('j', 'e'), ('d', 'h'), ('f', 'l'), ('h', 'e'), ('h', 'g'), ('l', 'o'), ('n', 'o')] },
    { "edge": ("b", "k"), "weight": 1025, "expected": [('a', 'p'), ('q', 'm'), ('c', 'p'), ('c', 'j'), ('p', 'n'), ('b', 'm'), ('b', 'k'), ('b', 'i'), ('m', 'l'), ('j', 'e'), ('d', 'h'), ('f', 'l'), ('h', 'e'), ('h', 'g'), ('l', 'o'), ('n', 'o')] }
]
# Graph consisting of 17 nodes
data[16]["graph"] = Graph(is_directed=False)
data[16]["graph"].add_edge("a", "g", 1398)
data[16]["graph"].add_edge("a", "o", 958)
data[16]["graph"].add_edge("a", "r", 507)
data[16]["graph"].add_edge("b", "i", 1172)
data[16]["graph"].add_edge("b", "l", 1079)
data[16]["graph"].add_edge("b", "p", 1402)
data[16]["graph"].add_edge("c", "q", 447)
data[16]["graph"].add_edge("d", "m", 647)
data[16]["graph"].add_edge("e", "j", 1563)
data[16]["graph"].add_edge("g", "d", 743)
data[16]["graph"].add_edge("g", "h", 387)
data[16]["graph"].add_edge("i", "c", 1511)
data[16]["graph"].add_edge("i", "e", 1529)
data[16]["graph"].add_edge("j", "f", 1579)
data[16]["graph"].add_edge("j", "h", 1538)
data[16]["graph"].add_edge("l", "c", 899)
data[16]["graph"].add_edge("l", "f", 1596)
data[16]["graph"].add_edge("m", "e", 1365)
data[16]["graph"].add_edge("m", "k", 1551)
data[16]["graph"].add_edge("o", "k", 1644)
data[16]["graph"].add_edge("o", "n", 979)
data[16]["graph"].add_edge("p", "h", 1062)
data[16]["graph"].add_edge("p", "n", 1514)
data[16]["graph"].add_edge("q", "d", 492)
data[16]["graph"].add_edge("q", "f", 1586)
data[16]["graph"].add_edge("r", "k", 352)
data[16]["graph"].add_edge("r", "n", 326)
data[16]["mst"] = Graph(is_directed=False)
data[16]["mst"].add_edge("a", "g", weight=1398)
data[16]["mst"].add_edge("a", "o", weight=958)
data[16]["mst"].add_edge("a", "r", weight=507)
data[16]["mst"].add_edge("b", "i", weight=1172)
data[16]["mst"].add_edge("b", "l", weight=1079)
data[16]["mst"].add_edge("c", "q", weight=447)
data[16]["mst"].add_edge("d", "m", weight=647)
data[16]["mst"].add_edge("g", "d", weight=743)
data[16]["mst"].add_edge("g", "h", weight=387)
data[16]["mst"].add_edge("j", "f", weight=1579)
data[16]["mst"].add_edge("j", "h", weight=1538)
data[16]["mst"].add_edge("l", "c", weight=899)
data[16]["mst"].add_edge("m", "e", weight=1365)
data[16]["mst"].add_edge("p", "h", weight=1062)
data[16]["mst"].add_edge("q", "d", weight=492)
data[16]["mst"].add_edge("r", "k", weight=352)
data[16]["mst"].add_edge("r", "n", weight=326)
data[16]["solutions"] = [
    { "edge": ("i", "e"), "weight": 1530, "expected": [('a', 'r'), ('a', 'o'), ('a', 'g'), ('r', 'n'), ('r', 'k'), ('g', 'h'), ('g', 'd'), ('b', 'l'), ('b', 'i'), ('l', 'c'), ('p', 'h'), ('c', 'q'), ('q', 'd'), ('d', 'm'), ('m', 'e'), ('j', 'h'), ('j', 'f')] },
    { "edge": ("q", "f"), "weight": 1061, "expected": [('a', 'r'), ('a', 'o'), ('a', 'g'), ('r', 'n'), ('r', 'k'), ('g', 'h'), ('g', 'd'), ('b', 'l'), ('b', 'i'), ('l', 'c'), ('p', 'h'), ('c', 'q'), ('q', 'd'), ('q', 'f'), ('d', 'm'), ('m', 'e'), ('j', 'h')] },
    { "edge": ("r", "n"), "weight": 325, "expected": [('a', 'r'), ('a', 'o'), ('a', 'g'), ('r', 'n'), ('r', 'k'), ('g', 'h'), ('g', 'd'), ('b', 'l'), ('b', 'i'), ('l', 'c'), ('p', 'h'), ('c', 'q'), ('q', 'd'), ('d', 'm'), ('m', 'e'), ('j', 'h'), ('j', 'f')] },
    { "edge": ("a", "r"), "weight": 1515, "expected": [('a', 'o'), ('a', 'g'), ('r', 'n'), ('r', 'k'), ('g', 'h'), ('g', 'd'), ('o', 'n'), ('b', 'l'), ('b', 'i'), ('l', 'c'), ('p', 'h'), ('c', 'q'), ('q', 'd'), ('d', 'm'), ('m', 'e'), ('j', 'h'), ('j', 'f')] }
]
# Graph consisting of 18 nodes
data[17]["graph"] = Graph(is_directed=False)
data[17]["graph"].add_edge("a", "k", 1426)
data[17]["graph"].add_edge("a", "m", 458)
data[17]["graph"].add_edge("a", "o", 1002)
data[17]["graph"].add_edge("b", "f", 522)
data[17]["graph"].add_edge("b", "g", 233)
data[17]["graph"].add_edge("b", "q", 787)
data[17]["graph"].add_edge("c", "i", 1640)
data[17]["graph"].add_edge("d", "p", 277)
data[17]["graph"].add_edge("e", "r", 166)
data[17]["graph"].add_edge("e", "s", 901)
data[17]["graph"].add_edge("f", "j", 763)
data[17]["graph"].add_edge("f", "p", 48)
data[17]["graph"].add_edge("g", "c", 177)
data[17]["graph"].add_edge("g", "j", 209)
data[17]["graph"].add_edge("i", "l", 89)
data[17]["graph"].add_edge("i", "p", 1093)
data[17]["graph"].add_edge("j", "h", 946)
data[17]["graph"].add_edge("k", "c", 506)
data[17]["graph"].add_edge("k", "d", 352)
data[17]["graph"].add_edge("l", "n", 592)
data[17]["graph"].add_edge("m", "d", 521)
data[17]["graph"].add_edge("m", "s", 794)
data[17]["graph"].add_edge("o", "n", 629)
data[17]["graph"].add_edge("q", "e", 833)
data[17]["graph"].add_edge("q", "h", 22)
data[17]["graph"].add_edge("r", "l", 383)
data[17]["graph"].add_edge("r", "n", 559)
data[17]["graph"].add_edge("s", "h", 1384)
data[17]["mst"] = Graph(is_directed=False)
data[17]["mst"].add_edge("a", "m", weight=458)
data[17]["mst"].add_edge("b", "g", weight=233)
data[17]["mst"].add_edge("b", "q", weight=787)
data[17]["mst"].add_edge("d", "p", weight=277)
data[17]["mst"].add_edge("e", "r", weight=166)
data[17]["mst"].add_edge("f", "p", weight=48)
data[17]["mst"].add_edge("g", "c", weight=177)
data[17]["mst"].add_edge("g", "j", weight=209)
data[17]["mst"].add_edge("i", "l", weight=89)
data[17]["mst"].add_edge("k", "c", weight=506)
data[17]["mst"].add_edge("k", "d", weight=352)
data[17]["mst"].add_edge("m", "d", weight=521)
data[17]["mst"].add_edge("m", "s", weight=794)
data[17]["mst"].add_edge("o", "n", weight=629)
data[17]["mst"].add_edge("q", "e", weight=833)
data[17]["mst"].add_edge("q", "h", weight=22)
data[17]["mst"].add_edge("r", "l", weight=383)
data[17]["mst"].add_edge("r", "n", weight=559)
data[17]["solutions"] = [
    { "edge": ("c", "i"), "weight": 1641, "expected": [('a', 'm'), ('k', 'd'), ('k', 'c'), ('m', 'd'), ('m', 's'), ('o', 'n'), ('b', 'g'), ('b', 'q'), ('q', 'h'), ('q', 'e'), ('f', 'p'), ('g', 'c'), ('g', 'j'), ('i', 'l'), ('d', 'p'), ('e', 'r'), ('r', 'l'), ('r', 'n')] },
    { "edge": ("e", "s"), "weight": 786, "expected": [('a', 'm'), ('k', 'd'), ('k', 'c'), ('m', 'd'), ('m', 's'), ('o', 'n'), ('b', 'g'), ('b', 'q'), ('q', 'h'), ('f', 'p'), ('g', 'c'), ('g', 'j'), ('i', 'l'), ('d', 'p'), ('e', 'r'), ('e', 's'), ('r', 'l'), ('r', 'n')] },
    { "edge": ("q", "h"), "weight": 21, "expected": [('a', 'm'), ('k', 'd'), ('k', 'c'), ('m', 'd'), ('m', 's'), ('o', 'n'), ('b', 'g'), ('b', 'q'), ('q', 'h'), ('q', 'e'), ('f', 'p'), ('g', 'c'), ('g', 'j'), ('i', 'l'), ('d', 'p'), ('e', 'r'), ('r', 'l'), ('r', 'n')] },
    { "edge": ("i", "l"), "weight": 1641, "expected": [('a', 'm'), ('k', 'd'), ('k', 'c'), ('m', 'd'), ('m', 's'), ('o', 'n'), ('b', 'g'), ('b', 'q'), ('q', 'h'), ('q', 'e'), ('f', 'p'), ('g', 'c'), ('g', 'j'), ('i', 'p'), ('d', 'p'), ('e', 'r'), ('r', 'l'), ('r', 'n')] }
]
# Graph consisting of 18 nodes
data[18]["graph"] = Graph(is_directed=False)
data[18]["graph"].add_edge("a", "c", 207)
data[18]["graph"].add_edge("a", "l", 39)
data[18]["graph"].add_edge("a", "q", 45)
data[18]["graph"].add_edge("b", "d", 274)
data[18]["graph"].add_edge("b", "h", 253)
data[18]["graph"].add_edge("b", "n", 279)
data[18]["graph"].add_edge("c", "l", 204)
data[18]["graph"].add_edge("c", "s", 92)
data[18]["graph"].add_edge("d", "n", 222)
data[18]["graph"].add_edge("e", "r", 349)
data[18]["graph"].add_edge("f", "i", 197)
data[18]["graph"].add_edge("f", "k", 284)
data[18]["graph"].add_edge("g", "m", 119)
data[18]["graph"].add_edge("g", "o", 26)
data[18]["graph"].add_edge("h", "e", 130)
data[18]["graph"].add_edge("h", "k", 350)
data[18]["graph"].add_edge("i", "k", 156)
data[18]["graph"].add_edge("j", "p", 245)
data[18]["graph"].add_edge("l", "d", 341)
data[18]["graph"].add_edge("m", "p", 252)
data[18]["graph"].add_edge("n", "j", 140)
data[18]["graph"].add_edge("o", "j", 226)
data[18]["graph"].add_edge("o", "p", 193)
data[18]["graph"].add_edge("q", "e", 46)
data[18]["graph"].add_edge("q", "f", 36)
data[18]["graph"].add_edge("r", "g", 41)
data[18]["graph"].add_edge("r", "i", 302)
data[18]["graph"].add_edge("s", "m", 297)
data[18]["mst"] = Graph(is_directed=False)
data[18]["mst"].add_edge("a", "l", weight=39)
data[18]["mst"].add_edge("a", "q", weight=45)
data[18]["mst"].add_edge("b", "d", weight=274)
data[18]["mst"].add_edge("b", "h", weight=253)
data[18]["mst"].add_edge("c", "l", weight=204)
data[18]["mst"].add_edge("c", "s", weight=92)
data[18]["mst"].add_edge("d", "n", weight=222)
data[18]["mst"].add_edge("f", "i", weight=197)
data[18]["mst"].add_edge("g", "m", weight=119)
data[18]["mst"].add_edge("g", "o", weight=26)
data[18]["mst"].add_edge("h", "e", weight=130)
data[18]["mst"].add_edge("i", "k", weight=156)
data[18]["mst"].add_edge("n", "j", weight=140)
data[18]["mst"].add_edge("o", "j", weight=226)
data[18]["mst"].add_edge("o", "p", weight=193)
data[18]["mst"].add_edge("q", "e", weight=46)
data[18]["mst"].add_edge("q", "f", weight=36)
data[18]["mst"].add_edge("r", "g", weight=41)
data[18]["solutions"] = [
    { "edge": ("r", "i"), "weight": 303, "expected": [('a', 'l'), ('a', 'q'), ('q', 'f'), ('q', 'e'), ('c', 's'), ('c', 'l'), ('b', 'h'), ('b', 'd'), ('d', 'n'), ('n', 'j'), ('h', 'e'), ('r', 'g'), ('f', 'i'), ('i', 'k'), ('g', 'o'), ('g', 'm'), ('o', 'p'), ('o', 'j')] },
    { "edge": ("b", "n"), "weight": 91, "expected": [('a', 'l'), ('a', 'q'), ('q', 'f'), ('q', 'e'), ('c', 's'), ('c', 'l'), ('b', 'n'), ('b', 'h'), ('d', 'n'), ('n', 'j'), ('h', 'e'), ('r', 'g'), ('f', 'i'), ('i', 'k'), ('g', 'o'), ('g', 'm'), ('o', 'p'), ('o', 'j')] },
    { "edge": ("g", "m"), "weight": 118, "expected": [('a', 'l'), ('a', 'q'), ('q', 'f'), ('q', 'e'), ('c', 's'), ('c', 'l'), ('b', 'h'), ('b', 'd'), ('d', 'n'), ('n', 'j'), ('h', 'e'), ('r', 'g'), ('f', 'i'), ('i', 'k'), ('g', 'o'), ('g', 'm'), ('o', 'p'), ('o', 'j')] },
    { "edge": ("o", "j"), "weight": 227, "expected": [('a', 'l'), ('a', 'q'), ('q', 'f'), ('q', 'e'), ('c', 's'), ('c', 'l'), ('b', 'h'), ('b', 'd'), ('d', 'n'), ('n', 'j'), ('h', 'e'), ('r', 'g'), ('f', 'i'), ('i', 'k'), ('g', 'o'), ('g', 'm'), ('o', 'p'), ('o', 'j')] }
]
# Graph consisting of 19 nodes
data[19]["graph"] = Graph(is_directed=False)
data[19]["graph"].add_edge("a", "j", 1433)
data[19]["graph"].add_edge("a", "o", 1432)
data[19]["graph"].add_edge("a", "p", 138)
data[19]["graph"].add_edge("b", "c", 1016)
data[19]["graph"].add_edge("b", "h", 1333)
data[19]["graph"].add_edge("b", "n", 375)
data[19]["graph"].add_edge("c", "g", 454)
data[19]["graph"].add_edge("d", "l", 773)
data[19]["graph"].add_edge("d", "q", 1178)
data[19]["graph"].add_edge("d", "s", 1546)
data[19]["graph"].add_edge("e", "f", 1386)
data[19]["graph"].add_edge("g", "m", 389)
data[19]["graph"].add_edge("h", "e", 1127)
data[19]["graph"].add_edge("h", "g", 1188)
data[19]["graph"].add_edge("j", "k", 746)
data[19]["graph"].add_edge("j", "o", 1035)
data[19]["graph"].add_edge("k", "t", 136)
data[19]["graph"].add_edge("l", "i", 1397)
data[19]["graph"].add_edge("l", "r", 11)
data[19]["graph"].add_edge("m", "t", 1430)
data[19]["graph"].add_edge("n", "k", 979)
data[19]["graph"].add_edge("n", "r", 1097)
data[19]["graph"].add_edge("o", "f", 404)
data[19]["graph"].add_edge("p", "c", 1345)
data[19]["graph"].add_edge("p", "f", 394)
data[19]["graph"].add_edge("q", "e", 806)
data[19]["graph"].add_edge("q", "i", 602)
data[19]["graph"].add_edge("s", "i", 692)
data[19]["graph"].add_edge("s", "m", 1515)
data[19]["graph"].add_edge("t", "r", 1098)
data[19]["mst"] = Graph(is_directed=False)
data[19]["mst"].add_edge("a", "p", weight=138)
data[19]["mst"].add_edge("b", "c", weight=1016)
data[19]["mst"].add_edge("b", "n", weight=375)
data[19]["mst"].add_edge("c", "g", weight=454)
data[19]["mst"].add_edge("d", "l", weight=773)
data[19]["mst"].add_edge("d", "q", weight=1178)
data[19]["mst"].add_edge("g", "m", weight=389)
data[19]["mst"].add_edge("h", "e", weight=1127)
data[19]["mst"].add_edge("j", "k", weight=746)
data[19]["mst"].add_edge("j", "o", weight=1035)
data[19]["mst"].add_edge("k", "t", weight=136)
data[19]["mst"].add_edge("l", "r", weight=11)
data[19]["mst"].add_edge("n", "k", weight=979)
data[19]["mst"].add_edge("n", "r", weight=1097)
data[19]["mst"].add_edge("o", "f", weight=404)
data[19]["mst"].add_edge("p", "f", weight=394)
data[19]["mst"].add_edge("q", "e", weight=806)
data[19]["mst"].add_edge("q", "i", weight=602)
data[19]["mst"].add_edge("s", "i", weight=692)
data[19]["solutions"] = [
    { "edge": ("d", "s"), "weight": 1547, "expected": [('a', 'p'), ('j', 'k'), ('j', 'o'), ('o', 'f'), ('p', 'f'), ('b', 'n'), ('b', 'c'), ('c', 'g'), ('n', 'k'), ('n', 'r'), ('h', 'e'), ('g', 'm'), ('d', 'l'), ('d', 'q'), ('q', 'i'), ('q', 'e'), ('s', 'i'), ('l', 'r'), ('k', 't')] },
    { "edge": ("e", "f"), "weight": 388, "expected": [('a', 'p'), ('j', 'k'), ('j', 'o'), ('o', 'f'), ('p', 'f'), ('b', 'n'), ('b', 'c'), ('c', 'g'), ('n', 'k'), ('n', 'r'), ('h', 'e'), ('g', 'm'), ('d', 'l'), ('q', 'i'), ('q', 'e'), ('s', 'i'), ('l', 'r'), ('e', 'f'), ('k', 't')] },
    { "edge": ("d", "l"), "weight": 772, "expected": [('a', 'p'), ('j', 'k'), ('j', 'o'), ('o', 'f'), ('p', 'f'), ('b', 'n'), ('b', 'c'), ('c', 'g'), ('n', 'k'), ('n', 'r'), ('h', 'e'), ('g', 'm'), ('d', 'l'), ('d', 'q'), ('q', 'i'), ('q', 'e'), ('s', 'i'), ('l', 'r'), ('k', 't')] },
    { "edge": ("d", "l"), "weight": 1516, "expected": [('a', 'p'), ('j', 'k'), ('j', 'o'), ('o', 'f'), ('p', 'f'), ('b', 'n'), ('b', 'c'), ('c', 'g'), ('n', 'k'), ('n', 'r'), ('h', 'e'), ('h', 'g'), ('g', 'm'), ('d', 'q'), ('q', 'i'), ('q', 'e'), ('s', 'i'), ('l', 'r'), ('k', 't')] }
]
# Graph consisting of 20 nodes
data[20]["graph"] = Graph(is_directed=False)
data[20]["graph"].add_edge("a", "b", 337)
data[20]["graph"].add_edge("a", "j", 944)
data[20]["graph"].add_edge("a", "s", 126)
data[20]["graph"].add_edge("b", "j", 1330)
data[20]["graph"].add_edge("b", "s", 382)
data[20]["graph"].add_edge("c", "l", 1418)
data[20]["graph"].add_edge("c", "m", 762)
data[20]["graph"].add_edge("d", "r", 360)
data[20]["graph"].add_edge("d", "t", 655)
data[20]["graph"].add_edge("e", "f", 1013)
data[20]["graph"].add_edge("e", "h", 1584)
data[20]["graph"].add_edge("f", "p", 125)
data[20]["graph"].add_edge("g", "k", 1116)
data[20]["graph"].add_edge("g", "q", 660)
data[20]["graph"].add_edge("g", "u", 1222)
data[20]["graph"].add_edge("h", "k", 889)
data[20]["graph"].add_edge("h", "n", 1037)
data[20]["graph"].add_edge("j", "e", 1248)
data[20]["graph"].add_edge("l", "q", 1669)
data[20]["graph"].add_edge("l", "u", 45)
data[20]["graph"].add_edge("m", "d", 749)
data[20]["graph"].add_edge("m", "u", 1105)
data[20]["graph"].add_edge("n", "o", 821)
data[20]["graph"].add_edge("p", "k", 1307)
data[20]["graph"].add_edge("p", "o", 737)
data[20]["graph"].add_edge("q", "i", 976)
data[20]["graph"].add_edge("r", "i", 984)
data[20]["graph"].add_edge("r", "n", 431)
data[20]["graph"].add_edge("s", "c", 581)
data[20]["graph"].add_edge("t", "f", 420)
data[20]["graph"].add_edge("t", "i", 1282)
data[20]["mst"] = Graph(is_directed=False)
data[20]["mst"].add_edge("a", "b", weight=337)
data[20]["mst"].add_edge("a", "j", weight=944)
data[20]["mst"].add_edge("a", "s", weight=126)
data[20]["mst"].add_edge("c", "m", weight=762)
data[20]["mst"].add_edge("d", "r", weight=360)
data[20]["mst"].add_edge("d", "t", weight=655)
data[20]["mst"].add_edge("e", "f", weight=1013)
data[20]["mst"].add_edge("f", "p", weight=125)
data[20]["mst"].add_edge("g", "q", weight=660)
data[20]["mst"].add_edge("h", "k", weight=889)
data[20]["mst"].add_edge("h", "n", weight=1037)
data[20]["mst"].add_edge("l", "u", weight=45)
data[20]["mst"].add_edge("m", "d", weight=749)
data[20]["mst"].add_edge("m", "u", weight=1105)
data[20]["mst"].add_edge("p", "o", weight=737)
data[20]["mst"].add_edge("q", "i", weight=976)
data[20]["mst"].add_edge("r", "i", weight=984)
data[20]["mst"].add_edge("r", "n", weight=431)
data[20]["mst"].add_edge("s", "c", weight=581)
data[20]["mst"].add_edge("t", "f", weight=420)
data[20]["solutions"] = [
    { "edge": ("b", "j"), "weight": 1331, "expected": [('a', 's'), ('a', 'b'), ('a', 'j'), ('s', 'c'), ('c', 'm'), ('l', 'u'), ('m', 'd'), ('m', 'u'), ('d', 'r'), ('d', 't'), ('r', 'n'), ('r', 'i'), ('t', 'f'), ('e', 'f'), ('f', 'p'), ('h', 'k'), ('h', 'n'), ('p', 'o'), ('g', 'q'), ('q', 'i')] },
    { "edge": ("p", "k"), "weight": 736, "expected": [('a', 's'), ('a', 'b'), ('a', 'j'), ('s', 'c'), ('c', 'm'), ('l', 'u'), ('m', 'd'), ('m', 'u'), ('d', 'r'), ('d', 't'), ('r', 'n'), ('r', 'i'), ('t', 'f'), ('e', 'f'), ('f', 'p'), ('h', 'k'), ('p', 'k'), ('p', 'o'), ('g', 'q'), ('q', 'i')] },
    { "edge": ("h", "k"), "weight": 888, "expected": [('a', 's'), ('a', 'b'), ('a', 'j'), ('s', 'c'), ('c', 'm'), ('l', 'u'), ('m', 'd'), ('m', 'u'), ('d', 'r'), ('d', 't'), ('r', 'n'), ('r', 'i'), ('t', 'f'), ('e', 'f'), ('f', 'p'), ('h', 'k'), ('h', 'n'), ('p', 'o'), ('g', 'q'), ('q', 'i')] },
    { "edge": ("m", "d"), "weight": 1670, "expected": [('a', 's'), ('a', 'b'), ('a', 'j'), ('s', 'c'), ('c', 'm'), ('l', 'u'), ('m', 'u'), ('d', 'r'), ('d', 't'), ('r', 'n'), ('r', 'i'), ('t', 'f'), ('e', 'f'), ('f', 'p'), ('h', 'k'), ('h', 'n'), ('p', 'o'), ('g', 'q'), ('g', 'u'), ('q', 'i')] }
]
# Graph consisting of 20 nodes
data[21]["graph"] = Graph(is_directed=False)
data[21]["graph"].add_edge("a", "c", 141)
data[21]["graph"].add_edge("a", "e", 227)
data[21]["graph"].add_edge("a", "t", 187)
data[21]["graph"].add_edge("b", "i", 294)
data[21]["graph"].add_edge("b", "q", 383)
data[21]["graph"].add_edge("c", "b", 316)
data[21]["graph"].add_edge("c", "e", 97)
data[21]["graph"].add_edge("d", "j", 373)
data[21]["graph"].add_edge("d", "m", 22)
data[21]["graph"].add_edge("e", "d", 342)
data[21]["graph"].add_edge("f", "n", 165)
data[21]["graph"].add_edge("f", "s", 250)
data[21]["graph"].add_edge("g", "h", 86)
data[21]["graph"].add_edge("g", "o", 425)
data[21]["graph"].add_edge("g", "r", 166)
data[21]["graph"].add_edge("i", "k", 329)
data[21]["graph"].add_edge("i", "o", 351)
data[21]["graph"].add_edge("j", "h", 362)
data[21]["graph"].add_edge("j", "s", 417)
data[21]["graph"].add_edge("k", "l", 76)
data[21]["graph"].add_edge("k", "p", 361)
data[21]["graph"].add_edge("m", "n", 376)
data[21]["graph"].add_edge("m", "u", 150)
data[21]["graph"].add_edge("n", "o", 8)
data[21]["graph"].add_edge("p", "u", 71)
data[21]["graph"].add_edge("q", "f", 277)
data[21]["graph"].add_edge("q", "l", 297)
data[21]["graph"].add_edge("r", "u", 136)
data[21]["graph"].add_edge("s", "p", 378)
data[21]["graph"].add_edge("t", "h", 75)
data[21]["graph"].add_edge("t", "l", 389)
data[21]["mst"] = Graph(is_directed=False)
data[21]["mst"].add_edge("a", "c", weight=141)
data[21]["mst"].add_edge("a", "t", weight=187)
data[21]["mst"].add_edge("b", "i", weight=294)
data[21]["mst"].add_edge("c", "b", weight=316)
data[21]["mst"].add_edge("c", "e", weight=97)
data[21]["mst"].add_edge("d", "m", weight=22)
data[21]["mst"].add_edge("f", "n", weight=165)
data[21]["mst"].add_edge("f", "s", weight=250)
data[21]["mst"].add_edge("g", "h", weight=86)
data[21]["mst"].add_edge("g", "r", weight=166)
data[21]["mst"].add_edge("i", "k", weight=329)
data[21]["mst"].add_edge("j", "h", weight=362)
data[21]["mst"].add_edge("k", "l", weight=76)
data[21]["mst"].add_edge("m", "u", weight=150)
data[21]["mst"].add_edge("n", "o", weight=8)
data[21]["mst"].add_edge("p", "u", weight=71)
data[21]["mst"].add_edge("q", "f", weight=277)
data[21]["mst"].add_edge("q", "l", weight=297)
data[21]["mst"].add_edge("r", "u", weight=136)
data[21]["mst"].add_edge("t", "h", weight=75)
data[21]["solutions"] = [
    { "edge": ("j", "s"), "weight": 418, "expected": [('a', 'c'), ('a', 't'), ('c', 'e'), ('c', 'b'), ('t', 'h'), ('b', 'i'), ('i', 'k'), ('q', 'f'), ('q', 'l'), ('d', 'm'), ('j', 'h'), ('m', 'u'), ('f', 'n'), ('f', 's'), ('n', 'o'), ('g', 'h'), ('g', 'r'), ('r', 'u'), ('k', 'l'), ('p', 'u')] },
    { "edge": ("t", "l"), "weight": 96, "expected": [('a', 'c'), ('a', 't'), ('c', 'e'), ('c', 'b'), ('t', 'h'), ('t', 'l'), ('b', 'i'), ('q', 'f'), ('q', 'l'), ('d', 'm'), ('j', 'h'), ('m', 'u'), ('f', 'n'), ('f', 's'), ('n', 'o'), ('g', 'h'), ('g', 'r'), ('r', 'u'), ('k', 'l'), ('p', 'u')] },
    { "edge": ("c", "e"), "weight": 96, "expected": [('a', 'c'), ('a', 't'), ('c', 'e'), ('c', 'b'), ('t', 'h'), ('b', 'i'), ('i', 'k'), ('q', 'f'), ('q', 'l'), ('d', 'm'), ('j', 'h'), ('m', 'u'), ('f', 'n'), ('f', 's'), ('n', 'o'), ('g', 'h'), ('g', 'r'), ('r', 'u'), ('k', 'l'), ('p', 'u')] },
    { "edge": ("m", "u"), "weight": 151, "expected": [('a', 'c'), ('a', 't'), ('c', 'e'), ('c', 'b'), ('t', 'h'), ('b', 'i'), ('i', 'k'), ('q', 'f'), ('q', 'l'), ('d', 'm'), ('j', 'h'), ('m', 'u'), ('f', 'n'), ('f', 's'), ('n', 'o'), ('g', 'h'), ('g', 'r'), ('r', 'u'), ('k', 'l'), ('p', 'u')] }
]
# Graph consisting of 21 nodes
data[22]["graph"] = Graph(is_directed=False)
data[22]["graph"].add_edge("a", "c", 1129)
data[22]["graph"].add_edge("a", "m", 728)
data[22]["graph"].add_edge("a", "p", 1283)
data[22]["graph"].add_edge("b", "i", 1026)
data[22]["graph"].add_edge("b", "j", 176)
data[22]["graph"].add_edge("b", "s", 1377)
data[22]["graph"].add_edge("c", "d", 1500)
data[22]["graph"].add_edge("c", "l", 724)
data[22]["graph"].add_edge("d", "k", 1633)
data[22]["graph"].add_edge("d", "r", 1318)
data[22]["graph"].add_edge("e", "o", 553)
data[22]["graph"].add_edge("e", "q", 1438)
data[22]["graph"].add_edge("f", "g", 1509)
data[22]["graph"].add_edge("g", "u", 1146)
data[22]["graph"].add_edge("i", "h", 982)
data[22]["graph"].add_edge("i", "t", 1492)
data[22]["graph"].add_edge("j", "s", 1546)
data[22]["graph"].add_edge("j", "v", 1173)
data[22]["graph"].add_edge("k", "e", 322)
data[22]["graph"].add_edge("k", "h", 1506)
data[22]["graph"].add_edge("l", "q", 1285)
data[22]["graph"].add_edge("l", "v", 1653)
data[22]["graph"].add_edge("m", "n", 585)
data[22]["graph"].add_edge("m", "r", 1109)
data[22]["graph"].add_edge("o", "u", 1326)
data[22]["graph"].add_edge("p", "f", 191)
data[22]["graph"].add_edge("p", "g", 462)
data[22]["graph"].add_edge("q", "h", 1383)
data[22]["graph"].add_edge("r", "o", 1487)
data[22]["graph"].add_edge("s", "f", 1047)
data[22]["graph"].add_edge("u", "n", 32)
data[22]["graph"].add_edge("v", "n", 1132)
data[22]["mst"] = Graph(is_directed=False)
data[22]["mst"].add_edge("a", "c", weight=1129)
data[22]["mst"].add_edge("a", "m", weight=728)
data[22]["mst"].add_edge("b", "i", weight=1026)
data[22]["mst"].add_edge("b", "j", weight=176)
data[22]["mst"].add_edge("c", "l", weight=724)
data[22]["mst"].add_edge("d", "r", weight=1318)
data[22]["mst"].add_edge("e", "o", weight=553)
data[22]["mst"].add_edge("g", "u", weight=1146)
data[22]["mst"].add_edge("i", "h", weight=982)
data[22]["mst"].add_edge("i", "t", weight=1492)
data[22]["mst"].add_edge("j", "v", weight=1173)
data[22]["mst"].add_edge("k", "e", weight=322)
data[22]["mst"].add_edge("l", "q", weight=1285)
data[22]["mst"].add_edge("m", "n", weight=585)
data[22]["mst"].add_edge("m", "r", weight=1109)
data[22]["mst"].add_edge("o", "u", weight=1326)
data[22]["mst"].add_edge("p", "f", weight=191)
data[22]["mst"].add_edge("p", "g", weight=462)
data[22]["mst"].add_edge("s", "f", weight=1047)
data[22]["mst"].add_edge("u", "n", weight=32)
data[22]["mst"].add_edge("v", "n", weight=1132)
data[22]["solutions"] = [
    { "edge": ("c", "d"), "weight": 1501, "expected": [('a', 'm'), ('a', 'c'), ('c', 'l'), ('m', 'n'), ('m', 'r'), ('p', 'f'), ('p', 'g'), ('b', 'j'), ('b', 'i'), ('i', 'h'), ('i', 't'), ('j', 'v'), ('s', 'f'), ('l', 'q'), ('d', 'r'), ('k', 'e'), ('e', 'o'), ('o', 'u'), ('g', 'u'), ('u', 'n'), ('v', 'n')] },
    { "edge": ("l", "v"), "weight": 1284, "expected": [('a', 'm'), ('a', 'c'), ('c', 'l'), ('m', 'n'), ('m', 'r'), ('p', 'f'), ('p', 'g'), ('b', 'j'), ('b', 'i'), ('i', 'h'), ('i', 't'), ('j', 'v'), ('s', 'f'), ('l', 'q'), ('d', 'r'), ('k', 'e'), ('e', 'o'), ('o', 'u'), ('g', 'u'), ('u', 'n'), ('v', 'n')] },
    { "edge": ("j", "v"), "weight": 1172, "expected": [('a', 'm'), ('a', 'c'), ('c', 'l'), ('m', 'n'), ('m', 'r'), ('p', 'f'), ('p', 'g'), ('b', 'j'), ('b', 'i'), ('i', 'h'), ('i', 't'), ('j', 'v'), ('s', 'f'), ('l', 'q'), ('d', 'r'), ('k', 'e'), ('e', 'o'), ('o', 'u'), ('g', 'u'), ('u', 'n'), ('v', 'n')] },
    { "edge": ("g", "u"), "weight": 1547, "expected": [('a', 'm'), ('a', 'c'), ('a', 'p'), ('c', 'l'), ('m', 'n'), ('m', 'r'), ('p', 'f'), ('p', 'g'), ('b', 'j'), ('b', 'i'), ('i', 'h'), ('i', 't'), ('j', 'v'), ('s', 'f'), ('l', 'q'), ('d', 'r'), ('k', 'e'), ('e', 'o'), ('o', 'u'), ('u', 'n'), ('v', 'n')] }
]
# Graph consisting of 22 nodes
data[23]["graph"] = Graph(is_directed=False)
data[23]["graph"].add_edge("a", "e", 57)
data[23]["graph"].add_edge("a", "l", 638)
data[23]["graph"].add_edge("a", "t", 1449)
data[23]["graph"].add_edge("b", "j", 311)
data[23]["graph"].add_edge("b", "p", 239)
data[23]["graph"].add_edge("b", "v", 941)
data[23]["graph"].add_edge("c", "f", 1388)
data[23]["graph"].add_edge("c", "m", 858)
data[23]["graph"].add_edge("c", "q", 1174)
data[23]["graph"].add_edge("d", "g", 888)
data[23]["graph"].add_edge("e", "o", 1196)
data[23]["graph"].add_edge("e", "s", 400)
data[23]["graph"].add_edge("f", "g", 710)
data[23]["graph"].add_edge("f", "s", 986)
data[23]["graph"].add_edge("g", "s", 23)
data[23]["graph"].add_edge("h", "r", 647)
data[23]["graph"].add_edge("i", "w", 811)
data[23]["graph"].add_edge("j", "r", 554)
data[23]["graph"].add_edge("k", "n", 1265)
data[23]["graph"].add_edge("l", "d", 1308)
data[23]["graph"].add_edge("l", "j", 924)
data[23]["graph"].add_edge("m", "u", 1219)
data[23]["graph"].add_edge("o", "n", 532)
data[23]["graph"].add_edge("o", "w", 1362)
data[23]["graph"].add_edge("p", "h", 138)
data[23]["graph"].add_edge("p", "i", 1313)
data[23]["graph"].add_edge("q", "m", 786)
data[23]["graph"].add_edge("q", "u", 678)
data[23]["graph"].add_edge("r", "k", 1385)
data[23]["graph"].add_edge("t", "h", 240)
data[23]["graph"].add_edge("t", "n", 1554)
data[23]["graph"].add_edge("v", "d", 726)
data[23]["graph"].add_edge("v", "i", 141)
data[23]["graph"].add_edge("w", "k", 670)
data[23]["mst"] = Graph(is_directed=False)
data[23]["mst"].add_edge("a", "e", weight=57)
data[23]["mst"].add_edge("a", "l", weight=638)
data[23]["mst"].add_edge("b", "j", weight=311)
data[23]["mst"].add_edge("b", "p", weight=239)
data[23]["mst"].add_edge("c", "f", weight=1388)
data[23]["mst"].add_edge("c", "m", weight=858)
data[23]["mst"].add_edge("d", "g", weight=888)
data[23]["mst"].add_edge("e", "o", weight=1196)
data[23]["mst"].add_edge("e", "s", weight=400)
data[23]["mst"].add_edge("f", "g", weight=710)
data[23]["mst"].add_edge("g", "s", weight=23)
data[23]["mst"].add_edge("i", "w", weight=811)
data[23]["mst"].add_edge("j", "r", weight=554)
data[23]["mst"].add_edge("l", "j", weight=924)
data[23]["mst"].add_edge("o", "n", weight=532)
data[23]["mst"].add_edge("p", "h", weight=138)
data[23]["mst"].add_edge("q", "m", weight=786)
data[23]["mst"].add_edge("q", "u", weight=678)
data[23]["mst"].add_edge("t", "h", weight=240)
data[23]["mst"].add_edge("v", "d", weight=726)
data[23]["mst"].add_edge("v", "i", weight=141)
data[23]["mst"].add_edge("w", "k", weight=670)
data[23]["solutions"] = [
    { "edge": ("o", "w"), "weight": 1363, "expected": [('a', 'e'), ('a', 'l'), ('t', 'h'), ('l', 'j'), ('e', 's'), ('e', 'o'), ('b', 'p'), ('b', 'j'), ('j', 'r'), ('v', 'i'), ('v', 'd'), ('p', 'h'), ('c', 'm'), ('c', 'f'), ('q', 'u'), ('q', 'm'), ('f', 'g'), ('d', 'g'), ('g', 's'), ('o', 'n'), ('i', 'w'), ('w', 'k')] },
    { "edge": ("t", "n"), "weight": 923, "expected": [('a', 'e'), ('a', 'l'), ('t', 'h'), ('t', 'n'), ('l', 'j'), ('e', 's'), ('b', 'p'), ('b', 'j'), ('j', 'r'), ('v', 'i'), ('v', 'd'), ('p', 'h'), ('c', 'm'), ('c', 'f'), ('q', 'u'), ('q', 'm'), ('f', 'g'), ('d', 'g'), ('g', 's'), ('o', 'n'), ('i', 'w'), ('w', 'k')] },
    { "edge": ("f", "g"), "weight": 709, "expected": [('a', 'e'), ('a', 'l'), ('t', 'h'), ('l', 'j'), ('e', 's'), ('e', 'o'), ('b', 'p'), ('b', 'j'), ('j', 'r'), ('v', 'i'), ('v', 'd'), ('p', 'h'), ('c', 'm'), ('c', 'f'), ('q', 'u'), ('q', 'm'), ('f', 'g'), ('d', 'g'), ('g', 's'), ('o', 'n'), ('i', 'w'), ('w', 'k')] },
    { "edge": ("w", "k"), "weight": 1386, "expected": [('a', 'e'), ('a', 'l'), ('t', 'h'), ('l', 'j'), ('e', 's'), ('e', 'o'), ('b', 'p'), ('b', 'j'), ('j', 'r'), ('v', 'i'), ('v', 'd'), ('p', 'h'), ('c', 'm'), ('c', 'f'), ('q', 'u'), ('q', 'm'), ('f', 'g'), ('d', 'g'), ('g', 's'), ('o', 'n'), ('i', 'w'), ('k', 'n')] }
]
# Graph consisting of 23 nodes
data[24]["graph"] = Graph(is_directed=False)
data[24]["graph"].add_edge("a", "b", 1431)
data[24]["graph"].add_edge("a", "g", 1681)
data[24]["graph"].add_edge("a", "j", 684)
data[24]["graph"].add_edge("b", "p", 116)
data[24]["graph"].add_edge("b", "w", 1599)
data[24]["graph"].add_edge("c", "f", 415)
data[24]["graph"].add_edge("c", "l", 287)
data[24]["graph"].add_edge("d", "e", 88)
data[24]["graph"].add_edge("e", "o", 1477)
data[24]["graph"].add_edge("e", "u", 1464)
data[24]["graph"].add_edge("f", "n", 1369)
data[24]["graph"].add_edge("f", "v", 69)
data[24]["graph"].add_edge("g", "c", 159)
data[24]["graph"].add_edge("g", "d", 136)
data[24]["graph"].add_edge("h", "t", 472)
data[24]["graph"].add_edge("h", "x", 1420)
data[24]["graph"].add_edge("i", "q", 234)
data[24]["graph"].add_edge("j", "h", 563)
data[24]["graph"].add_edge("j", "s", 555)
data[24]["graph"].add_edge("k", "r", 1403)
data[24]["graph"].add_edge("l", "i", 661)
data[24]["graph"].add_edge("l", "k", 1285)
data[24]["graph"].add_edge("n", "i", 325)
data[24]["graph"].add_edge("o", "k", 245)
data[24]["graph"].add_edge("o", "n", 726)
data[24]["graph"].add_edge("p", "d", 1321)
data[24]["graph"].add_edge("p", "x", 984)
data[24]["graph"].add_edge("s", "m", 688)
data[24]["graph"].add_edge("t", "m", 838)
data[24]["graph"].add_edge("t", "r", 537)
data[24]["graph"].add_edge("u", "q", 1669)
data[24]["graph"].add_edge("u", "r", 1267)
data[24]["graph"].add_edge("w", "q", 812)
data[24]["graph"].add_edge("w", "s", 635)
data[24]["graph"].add_edge("x", "m", 411)
data[24]["mst"] = Graph(is_directed=False)
data[24]["mst"].add_edge("a", "j", weight=684)
data[24]["mst"].add_edge("b", "p", weight=116)
data[24]["mst"].add_edge("c", "f", weight=415)
data[24]["mst"].add_edge("c", "l", weight=287)
data[24]["mst"].add_edge("d", "e", weight=88)
data[24]["mst"].add_edge("f", "v", weight=69)
data[24]["mst"].add_edge("g", "c", weight=159)
data[24]["mst"].add_edge("g", "d", weight=136)
data[24]["mst"].add_edge("h", "t", weight=472)
data[24]["mst"].add_edge("i", "q", weight=234)
data[24]["mst"].add_edge("j", "h", weight=563)
data[24]["mst"].add_edge("j", "s", weight=555)
data[24]["mst"].add_edge("l", "i", weight=661)
data[24]["mst"].add_edge("n", "i", weight=325)
data[24]["mst"].add_edge("o", "k", weight=245)
data[24]["mst"].add_edge("o", "n", weight=726)
data[24]["mst"].add_edge("p", "x", weight=984)
data[24]["mst"].add_edge("s", "m", weight=688)
data[24]["mst"].add_edge("t", "r", weight=537)
data[24]["mst"].add_edge("u", "r", weight=1267)
data[24]["mst"].add_edge("w", "q", weight=812)
data[24]["mst"].add_edge("w", "s", weight=635)
data[24]["mst"].add_edge("x", "m", weight=411)
data[24]["solutions"] = [
    { "edge": ("u", "q"), "weight": 1670, "expected": [('a', 'j'), ('b', 'p'), ('g', 'd'), ('g', 'c'), ('j', 's'), ('j', 'h'), ('w', 's'), ('w', 'q'), ('p', 'x'), ('c', 'l'), ('c', 'f'), ('l', 'i'), ('f', 'v'), ('d', 'e'), ('u', 'r'), ('o', 'k'), ('o', 'n'), ('n', 'i'), ('h', 't'), ('t', 'r'), ('x', 'm'), ('i', 'q'), ('s', 'm')] },
    { "edge": ("p", "d"), "weight": 68, "expected": [('a', 'j'), ('b', 'p'), ('g', 'd'), ('g', 'c'), ('j', 's'), ('j', 'h'), ('w', 's'), ('w', 'q'), ('p', 'd'), ('c', 'l'), ('c', 'f'), ('l', 'i'), ('f', 'v'), ('d', 'e'), ('u', 'r'), ('o', 'k'), ('o', 'n'), ('n', 'i'), ('h', 't'), ('t', 'r'), ('x', 'm'), ('i', 'q'), ('s', 'm')] },
    { "edge": ("g", "d"), "weight": 135, "expected": [('a', 'j'), ('b', 'p'), ('g', 'd'), ('g', 'c'), ('j', 's'), ('j', 'h'), ('w', 's'), ('w', 'q'), ('p', 'x'), ('c', 'l'), ('c', 'f'), ('l', 'i'), ('f', 'v'), ('d', 'e'), ('u', 'r'), ('o', 'k'), ('o', 'n'), ('n', 'i'), ('h', 't'), ('t', 'r'), ('x', 'm'), ('i', 'q'), ('s', 'm')] },
    { "edge": ("i", "q"), "weight": 235, "expected": [('a', 'j'), ('b', 'p'), ('g', 'd'), ('g', 'c'), ('j', 's'), ('j', 'h'), ('w', 's'), ('w', 'q'), ('p', 'x'), ('c', 'l'), ('c', 'f'), ('l', 'i'), ('f', 'v'), ('d', 'e'), ('u', 'r'), ('o', 'k'), ('o', 'n'), ('n', 'i'), ('h', 't'), ('t', 'r'), ('x', 'm'), ('i', 'q'), ('s', 'm')] }
]
# Graph consisting of 24 nodes
data[25]["graph"] = Graph(is_directed=False)
data[25]["graph"].add_edge("a", "h", 425)
data[25]["graph"].add_edge("a", "l", 86)
data[25]["graph"].add_edge("a", "y", 194)
data[25]["graph"].add_edge("b", "g", 1167)
data[25]["graph"].add_edge("b", "i", 492)
data[25]["graph"].add_edge("b", "u", 808)
data[25]["graph"].add_edge("c", "p", 1316)
data[25]["graph"].add_edge("d", "e", 542)
data[25]["graph"].add_edge("d", "o", 947)
data[25]["graph"].add_edge("d", "v", 675)
data[25]["graph"].add_edge("e", "w", 1053)
data[25]["graph"].add_edge("f", "s", 174)
data[25]["graph"].add_edge("g", "n", 499)
data[25]["graph"].add_edge("g", "v", 42)
data[25]["graph"].add_edge("h", "c", 1022)
data[25]["graph"].add_edge("h", "t", 1247)
data[25]["graph"].add_edge("i", "q", 1433)
data[25]["graph"].add_edge("i", "r", 615)
data[25]["graph"].add_edge("j", "x", 1283)
data[25]["graph"].add_edge("l", "e", 625)
data[25]["graph"].add_edge("l", "r", 242)
data[25]["graph"].add_edge("n", "x", 969)
data[25]["graph"].add_edge("o", "k", 476)
data[25]["graph"].add_edge("o", "m", 824)
data[25]["graph"].add_edge("p", "r", 109)
data[25]["graph"].add_edge("p", "s", 1570)
data[25]["graph"].add_edge("q", "k", 1324)
data[25]["graph"].add_edge("q", "m", 662)
data[25]["graph"].add_edge("t", "j", 1586)
data[25]["graph"].add_edge("t", "m", 1099)
data[25]["graph"].add_edge("u", "c", 491)
data[25]["graph"].add_edge("u", "f", 229)
data[25]["graph"].add_edge("v", "k", 1604)
data[25]["graph"].add_edge("w", "f", 861)
data[25]["graph"].add_edge("w", "j", 1177)
data[25]["graph"].add_edge("y", "n", 1443)
data[25]["graph"].add_edge("y", "s", 238)
data[25]["mst"] = Graph(is_directed=False)
data[25]["mst"].add_edge("a", "h", weight=425)
data[25]["mst"].add_edge("a", "l", weight=86)
data[25]["mst"].add_edge("a", "y", weight=194)
data[25]["mst"].add_edge("b", "i", weight=492)
data[25]["mst"].add_edge("d", "e", weight=542)
data[25]["mst"].add_edge("d", "o", weight=947)
data[25]["mst"].add_edge("d", "v", weight=675)
data[25]["mst"].add_edge("f", "s", weight=174)
data[25]["mst"].add_edge("g", "n", weight=499)
data[25]["mst"].add_edge("g", "v", weight=42)
data[25]["mst"].add_edge("i", "r", weight=615)
data[25]["mst"].add_edge("l", "e", weight=625)
data[25]["mst"].add_edge("l", "r", weight=242)
data[25]["mst"].add_edge("n", "x", weight=969)
data[25]["mst"].add_edge("o", "k", weight=476)
data[25]["mst"].add_edge("o", "m", weight=824)
data[25]["mst"].add_edge("p", "r", weight=109)
data[25]["mst"].add_edge("q", "m", weight=662)
data[25]["mst"].add_edge("t", "m", weight=1099)
data[25]["mst"].add_edge("u", "c", weight=491)
data[25]["mst"].add_edge("u", "f", weight=229)
data[25]["mst"].add_edge("w", "f", weight=861)
data[25]["mst"].add_edge("w", "j", weight=1177)
data[25]["mst"].add_edge("y", "s", weight=238)
data[25]["solutions"] = [
    { "edge": ("q", "k"), "weight": 1325, "expected": [('a', 'l'), ('a', 'y'), ('a', 'h'), ('y', 's'), ('l', 'r'), ('l', 'e'), ('b', 'i'), ('i', 'r'), ('u', 'f'), ('u', 'c'), ('g', 'v'), ('g', 'n'), ('p', 'r'), ('d', 'e'), ('d', 'v'), ('d', 'o'), ('o', 'k'), ('o', 'm'), ('w', 'f'), ('w', 'j'), ('f', 's'), ('n', 'x'), ('t', 'm'), ('q', 'm')] },
    { "edge": ("c", "p"), "weight": 228, "expected": [('a', 'l'), ('a', 'y'), ('a', 'h'), ('y', 's'), ('l', 'r'), ('l', 'e'), ('b', 'i'), ('i', 'r'), ('u', 'f'), ('g', 'v'), ('g', 'n'), ('c', 'p'), ('p', 'r'), ('d', 'e'), ('d', 'v'), ('d', 'o'), ('o', 'k'), ('o', 'm'), ('w', 'f'), ('w', 'j'), ('f', 's'), ('n', 'x'), ('t', 'm'), ('q', 'm')] },
    { "edge": ("a", "h"), "weight": 424, "expected": [('a', 'l'), ('a', 'y'), ('a', 'h'), ('y', 's'), ('l', 'r'), ('l', 'e'), ('b', 'i'), ('i', 'r'), ('u', 'f'), ('u', 'c'), ('g', 'v'), ('g', 'n'), ('p', 'r'), ('d', 'e'), ('d', 'v'), ('d', 'o'), ('o', 'k'), ('o', 'm'), ('w', 'f'), ('w', 'j'), ('f', 's'), ('n', 'x'), ('t', 'm'), ('q', 'm')] },
    { "edge": ("u", "c"), "weight": 493, "expected": [('a', 'l'), ('a', 'y'), ('a', 'h'), ('y', 's'), ('l', 'r'), ('l', 'e'), ('b', 'i'), ('i', 'r'), ('u', 'f'), ('u', 'c'), ('g', 'v'), ('g', 'n'), ('p', 'r'), ('d', 'e'), ('d', 'v'), ('d', 'o'), ('o', 'k'), ('o', 'm'), ('w', 'f'), ('w', 'j'), ('f', 's'), ('n', 'x'), ('t', 'm'), ('q', 'm')] }
]
# Graph consisting of 25 nodes
data[26]["graph"] = Graph(is_directed=False)
data[26]["graph"].add_edge("a", "w", 989)
data[26]["graph"].add_edge("a", "y", 128)
data[26]["graph"].add_edge("a", "z", 337)
data[26]["graph"].add_edge("b", "d", 671)
data[26]["graph"].add_edge("b", "e", 234)
data[26]["graph"].add_edge("b", "v", 186)
data[26]["graph"].add_edge("c", "f", 1418)
data[26]["graph"].add_edge("c", "k", 157)
data[26]["graph"].add_edge("c", "p", 658)
data[26]["graph"].add_edge("d", "p", 1302)
data[26]["graph"].add_edge("e", "h", 1145)
data[26]["graph"].add_edge("e", "r", 1681)
data[26]["graph"].add_edge("f", "g", 835)
data[26]["graph"].add_edge("f", "r", 534)
data[26]["graph"].add_edge("g", "n", 580)
data[26]["graph"].add_edge("h", "s", 547)
data[26]["graph"].add_edge("h", "x", 529)
data[26]["graph"].add_edge("i", "u", 938)
data[26]["graph"].add_edge("k", "i", 1347)
data[26]["graph"].add_edge("k", "m", 1581)
data[26]["graph"].add_edge("l", "t", 357)
data[26]["graph"].add_edge("n", "i", 691)
data[26]["graph"].add_edge("n", "m", 1345)
data[26]["graph"].add_edge("p", "q", 1291)
data[26]["graph"].add_edge("r", "l", 1192)
data[26]["graph"].add_edge("s", "o", 1564)
data[26]["graph"].add_edge("s", "q", 297)
data[26]["graph"].add_edge("t", "q", 886)
data[26]["graph"].add_edge("u", "j", 971)
data[26]["graph"].add_edge("u", "t", 497)
data[26]["graph"].add_edge("v", "j", 728)
data[26]["graph"].add_edge("v", "m", 843)
data[26]["graph"].add_edge("w", "g", 441)
data[26]["graph"].add_edge("w", "l", 531)
data[26]["graph"].add_edge("x", "o", 554)
data[26]["graph"].add_edge("y", "d", 1113)
data[26]["graph"].add_edge("y", "o", 115)
data[26]["graph"].add_edge("z", "j", 1072)
data[26]["graph"].add_edge("z", "x", 1614)
data[26]["mst"] = Graph(is_directed=False)
data[26]["mst"].add_edge("a", "y", weight=128)
data[26]["mst"].add_edge("a", "z", weight=337)
data[26]["mst"].add_edge("b", "d", weight=671)
data[26]["mst"].add_edge("b", "e", weight=234)
data[26]["mst"].add_edge("b", "v", weight=186)
data[26]["mst"].add_edge("c", "k", weight=157)
data[26]["mst"].add_edge("c", "p", weight=658)
data[26]["mst"].add_edge("f", "g", weight=835)
data[26]["mst"].add_edge("f", "r", weight=534)
data[26]["mst"].add_edge("g", "n", weight=580)
data[26]["mst"].add_edge("h", "s", weight=547)
data[26]["mst"].add_edge("h", "x", weight=529)
data[26]["mst"].add_edge("l", "t", weight=357)
data[26]["mst"].add_edge("n", "i", weight=691)
data[26]["mst"].add_edge("p", "q", weight=1291)
data[26]["mst"].add_edge("s", "q", weight=297)
data[26]["mst"].add_edge("t", "q", weight=886)
data[26]["mst"].add_edge("u", "j", weight=971)
data[26]["mst"].add_edge("u", "t", weight=497)
data[26]["mst"].add_edge("v", "j", weight=728)
data[26]["mst"].add_edge("v", "m", weight=843)
data[26]["mst"].add_edge("w", "g", weight=441)
data[26]["mst"].add_edge("w", "l", weight=531)
data[26]["mst"].add_edge("x", "o", weight=554)
data[26]["mst"].add_edge("y", "o", weight=115)
data[26]["solutions"] = [
    { "edge": ("e", "h"), "weight": 1146, "expected": [('a', 'y'), ('a', 'z'), ('y', 'o'), ('w', 'g'), ('w', 'l'), ('b', 'v'), ('b', 'e'), ('b', 'd'), ('v', 'j'), ('v', 'm'), ('c', 'k'), ('c', 'p'), ('f', 'r'), ('f', 'g'), ('p', 'q'), ('h', 'x'), ('h', 's'), ('g', 'n'), ('n', 'i'), ('s', 'q'), ('x', 'o'), ('u', 't'), ('u', 'j'), ('l', 't'), ('t', 'q')] },
    { "edge": ("s", "o"), "weight": 885, "expected": [('a', 'y'), ('a', 'z'), ('y', 'o'), ('w', 'g'), ('w', 'l'), ('b', 'v'), ('b', 'e'), ('b', 'd'), ('v', 'j'), ('v', 'm'), ('c', 'k'), ('c', 'p'), ('f', 'r'), ('f', 'g'), ('p', 'q'), ('h', 'x'), ('h', 's'), ('g', 'n'), ('n', 'i'), ('s', 'q'), ('x', 'o'), ('u', 't'), ('u', 'j'), ('l', 't'), ('t', 'q')] },
    { "edge": ("b", "v"), "weight": 185, "expected": [('a', 'y'), ('a', 'z'), ('y', 'o'), ('w', 'g'), ('w', 'l'), ('b', 'v'), ('b', 'e'), ('b', 'd'), ('v', 'j'), ('v', 'm'), ('c', 'k'), ('c', 'p'), ('f', 'r'), ('f', 'g'), ('p', 'q'), ('h', 'x'), ('h', 's'), ('g', 'n'), ('n', 'i'), ('s', 'q'), ('x', 'o'), ('u', 't'), ('u', 'j'), ('l', 't'), ('t', 'q')] },
    { "edge": ("w", "g"), "weight": 939, "expected": [('a', 'y'), ('a', 'z'), ('y', 'o'), ('w', 'l'), ('b', 'v'), ('b', 'e'), ('b', 'd'), ('v', 'j'), ('v', 'm'), ('c', 'k'), ('c', 'p'), ('f', 'r'), ('f', 'g'), ('p', 'q'), ('h', 'x'), ('h', 's'), ('g', 'n'), ('n', 'i'), ('s', 'q'), ('x', 'o'), ('i', 'u'), ('u', 't'), ('u', 'j'), ('l', 't'), ('t', 'q')] }
]
# Graph consisting of 26 nodes
data[27]["graph"] = Graph(is_directed=False)
data[27]["graph"].add_edge("A", "y", 962)
data[27]["graph"].add_edge("a", "b", 571)
data[27]["graph"].add_edge("a", "m", 1459)
data[27]["graph"].add_edge("a", "t", 1140)
data[27]["graph"].add_edge("b", "l", 1548)
data[27]["graph"].add_edge("b", "q", 597)
data[27]["graph"].add_edge("c", "f", 1614)
data[27]["graph"].add_edge("c", "p", 119)
data[27]["graph"].add_edge("c", "u", 1364)
data[27]["graph"].add_edge("d", "A", 368)
data[27]["graph"].add_edge("d", "z", 572)
data[27]["graph"].add_edge("e", "r", 86)
data[27]["graph"].add_edge("f", "p", 629)
data[27]["graph"].add_edge("f", "x", 85)
data[27]["graph"].add_edge("g", "k", 1159)
data[27]["graph"].add_edge("h", "o", 284)
data[27]["graph"].add_edge("i", "s", 1276)
data[27]["graph"].add_edge("i", "w", 839)
data[27]["graph"].add_edge("i", "y", 21)
data[27]["graph"].add_edge("l", "d", 7)
data[27]["graph"].add_edge("l", "h", 116)
data[27]["graph"].add_edge("m", "g", 108)
data[27]["graph"].add_edge("m", "h", 1463)
data[27]["graph"].add_edge("o", "v", 413)
data[27]["graph"].add_edge("p", "k", 796)
data[27]["graph"].add_edge("q", "o", 1221)
data[27]["graph"].add_edge("q", "v", 377)
data[27]["graph"].add_edge("r", "g", 449)
data[27]["graph"].add_edge("r", "k", 1426)
data[27]["graph"].add_edge("s", "j", 258)
data[27]["graph"].add_edge("t", "s", 1182)
data[27]["graph"].add_edge("t", "w", 232)
data[27]["graph"].add_edge("u", "e", 819)
data[27]["graph"].add_edge("u", "n", 104)
data[27]["graph"].add_edge("w", "v", 35)
data[27]["graph"].add_edge("x", "j", 404)
data[27]["graph"].add_edge("x", "n", 378)
data[27]["graph"].add_edge("y", "j", 8)
data[27]["graph"].add_edge("z", "e", 44)
data[27]["graph"].add_edge("z", "n", 1460)
data[27]["mst"] = Graph(is_directed=False)
data[27]["mst"].add_edge("a", "b", weight=571)
data[27]["mst"].add_edge("b", "q", weight=597)
data[27]["mst"].add_edge("c", "p", weight=119)
data[27]["mst"].add_edge("d", "A", weight=368)
data[27]["mst"].add_edge("d", "z", weight=572)
data[27]["mst"].add_edge("e", "r", weight=86)
data[27]["mst"].add_edge("f", "p", weight=629)
data[27]["mst"].add_edge("f", "x", weight=85)
data[27]["mst"].add_edge("h", "o", weight=284)
data[27]["mst"].add_edge("i", "y", weight=21)
data[27]["mst"].add_edge("l", "d", weight=7)
data[27]["mst"].add_edge("l", "h", weight=116)
data[27]["mst"].add_edge("m", "g", weight=108)
data[27]["mst"].add_edge("o", "v", weight=413)
data[27]["mst"].add_edge("p", "k", weight=796)
data[27]["mst"].add_edge("q", "v", weight=377)
data[27]["mst"].add_edge("r", "g", weight=449)
data[27]["mst"].add_edge("s", "j", weight=258)
data[27]["mst"].add_edge("t", "w", weight=232)
data[27]["mst"].add_edge("u", "e", weight=819)
data[27]["mst"].add_edge("u", "n", weight=104)
data[27]["mst"].add_edge("w", "v", weight=35)
data[27]["mst"].add_edge("x", "j", weight=404)
data[27]["mst"].add_edge("x", "n", weight=378)
data[27]["mst"].add_edge("y", "j", weight=8)
data[27]["mst"].add_edge("z", "e", weight=44)
data[27]["solutions"] = [
    { "edge": ("a", "t"), "weight": 1141, "expected": [('a', 'b'), ('b', 'q'), ('t', 'w'), ('m', 'g'), ('q', 'v'), ('l', 'd'), ('l', 'h'), ('c', 'p'), ('u', 'n'), ('u', 'e'), ('f', 'x'), ('f', 'p'), ('p', 'k'), ('d', 'A'), ('d', 'z'), ('z', 'e'), ('e', 'r'), ('r', 'g'), ('x', 'n'), ('x', 'j'), ('h', 'o'), ('o', 'v'), ('i', 'y'), ('y', 'j'), ('s', 'j'), ('w', 'v')] },
    { "edge": ("t", "s"), "weight": 367, "expected": [('a', 'b'), ('b', 'q'), ('t', 'w'), ('t', 's'), ('m', 'g'), ('q', 'v'), ('l', 'd'), ('l', 'h'), ('c', 'p'), ('u', 'n'), ('f', 'x'), ('f', 'p'), ('p', 'k'), ('d', 'A'), ('d', 'z'), ('z', 'e'), ('e', 'r'), ('r', 'g'), ('x', 'n'), ('x', 'j'), ('h', 'o'), ('o', 'v'), ('i', 'y'), ('y', 'j'), ('s', 'j'), ('w', 'v')] },
    { "edge": ("y", "j"), "weight": 6, "expected": [('a', 'b'), ('b', 'q'), ('t', 'w'), ('m', 'g'), ('q', 'v'), ('l', 'd'), ('l', 'h'), ('c', 'p'), ('u', 'n'), ('u', 'e'), ('f', 'x'), ('f', 'p'), ('p', 'k'), ('d', 'A'), ('d', 'z'), ('z', 'e'), ('e', 'r'), ('r', 'g'), ('x', 'n'), ('x', 'j'), ('h', 'o'), ('o', 'v'), ('i', 'y'), ('y', 'j'), ('s', 'j'), ('w', 'v')] },
    { "edge": ("i", "y"), "weight": 840, "expected": [('a', 'b'), ('b', 'q'), ('t', 'w'), ('m', 'g'), ('q', 'v'), ('l', 'd'), ('l', 'h'), ('c', 'p'), ('u', 'n'), ('u', 'e'), ('f', 'x'), ('f', 'p'), ('p', 'k'), ('d', 'A'), ('d', 'z'), ('z', 'e'), ('e', 'r'), ('r', 'g'), ('x', 'n'), ('x', 'j'), ('h', 'o'), ('o', 'v'), ('i', 'w'), ('y', 'j'), ('s', 'j'), ('w', 'v')] }
]
# Graph consisting of 27 nodes
data[28]["graph"] = Graph(is_directed=False)
data[28]["graph"].add_edge("A", "p", 571)
data[28]["graph"].add_edge("A", "r", 205)
data[28]["graph"].add_edge("B", "n", 1490)
data[28]["graph"].add_edge("a", "o", 496)
data[28]["graph"].add_edge("a", "v", 932)
data[28]["graph"].add_edge("a", "w", 703)
data[28]["graph"].add_edge("b", "B", 1538)
data[28]["graph"].add_edge("b", "e", 38)
data[28]["graph"].add_edge("b", "z", 1319)
data[28]["graph"].add_edge("c", "h", 1285)
data[28]["graph"].add_edge("c", "x", 399)
data[28]["graph"].add_edge("d", "l", 459)
data[28]["graph"].add_edge("d", "n", 1030)
data[28]["graph"].add_edge("d", "t", 773)
data[28]["graph"].add_edge("e", "A", 1342)
data[28]["graph"].add_edge("e", "u", 1459)
data[28]["graph"].add_edge("f", "q", 1304)
data[28]["graph"].add_edge("f", "s", 397)
data[28]["graph"].add_edge("g", "r", 391)
data[28]["graph"].add_edge("h", "i", 134)
data[28]["graph"].add_edge("h", "s", 566)
data[28]["graph"].add_edge("j", "m", 39)
data[28]["graph"].add_edge("l", "k", 1565)
data[28]["graph"].add_edge("l", "y", 200)
data[28]["graph"].add_edge("n", "j", 1598)
data[28]["graph"].add_edge("o", "c", 335)
data[28]["graph"].add_edge("o", "u", 1168)
data[28]["graph"].add_edge("q", "j", 1572)
data[28]["graph"].add_edge("q", "m", 1604)
data[28]["graph"].add_edge("s", "g", 488)
data[28]["graph"].add_edge("t", "i", 728)
data[28]["graph"].add_edge("t", "k", 77)
data[28]["graph"].add_edge("u", "m", 1270)
data[28]["graph"].add_edge("v", "i", 806)
data[28]["graph"].add_edge("v", "k", 569)
data[28]["graph"].add_edge("w", "r", 645)
data[28]["graph"].add_edge("w", "y", 1524)
data[28]["graph"].add_edge("x", "f", 62)
data[28]["graph"].add_edge("x", "g", 598)
data[28]["graph"].add_edge("y", "p", 666)
data[28]["graph"].add_edge("z", "B", 244)
data[28]["graph"].add_edge("z", "p", 639)
data[28]["mst"] = Graph(is_directed=False)
data[28]["mst"].add_edge("A", "p", weight=571)
data[28]["mst"].add_edge("A", "r", weight=205)
data[28]["mst"].add_edge("a", "o", weight=496)
data[28]["mst"].add_edge("b", "e", weight=38)
data[28]["mst"].add_edge("b", "z", weight=1319)
data[28]["mst"].add_edge("c", "x", weight=399)
data[28]["mst"].add_edge("d", "l", weight=459)
data[28]["mst"].add_edge("d", "n", weight=1030)
data[28]["mst"].add_edge("f", "q", weight=1304)
data[28]["mst"].add_edge("f", "s", weight=397)
data[28]["mst"].add_edge("g", "r", weight=391)
data[28]["mst"].add_edge("h", "i", weight=134)
data[28]["mst"].add_edge("h", "s", weight=566)
data[28]["mst"].add_edge("j", "m", weight=39)
data[28]["mst"].add_edge("l", "y", weight=200)
data[28]["mst"].add_edge("o", "c", weight=335)
data[28]["mst"].add_edge("o", "u", weight=1168)
data[28]["mst"].add_edge("s", "g", weight=488)
data[28]["mst"].add_edge("t", "i", weight=728)
data[28]["mst"].add_edge("t", "k", weight=77)
data[28]["mst"].add_edge("u", "m", weight=1270)
data[28]["mst"].add_edge("v", "k", weight=569)
data[28]["mst"].add_edge("w", "r", weight=645)
data[28]["mst"].add_edge("x", "f", weight=62)
data[28]["mst"].add_edge("y", "p", weight=666)
data[28]["mst"].add_edge("z", "B", weight=244)
data[28]["mst"].add_edge("z", "p", weight=639)
data[28]["solutions"] = [
    { "edge": ("e", "A"), "weight": 1343, "expected": [('a', 'o'), ('v', 'k'), ('o', 'c'), ('o', 'u'), ('w', 'r'), ('b', 'e'), ('b', 'z'), ('z', 'B'), ('z', 'p'), ('c', 'x'), ('x', 'f'), ('h', 'i'), ('h', 's'), ('d', 'l'), ('d', 'n'), ('t', 'k'), ('t', 'i'), ('l', 'y'), ('A', 'r'), ('A', 'p'), ('u', 'm'), ('f', 's'), ('f', 'q'), ('s', 'g'), ('g', 'r'), ('j', 'm'), ('y', 'p')] },
    { "edge": ("e", "u"), "weight": 199, "expected": [('a', 'o'), ('v', 'k'), ('o', 'c'), ('o', 'u'), ('w', 'r'), ('b', 'e'), ('z', 'B'), ('z', 'p'), ('e', 'u'), ('c', 'x'), ('x', 'f'), ('h', 'i'), ('h', 's'), ('d', 'l'), ('d', 'n'), ('t', 'k'), ('t', 'i'), ('l', 'y'), ('A', 'r'), ('A', 'p'), ('u', 'm'), ('f', 's'), ('f', 'q'), ('s', 'g'), ('g', 'r'), ('j', 'm'), ('y', 'p')] },
    { "edge": ("l", "y"), "weight": 199, "expected": [('a', 'o'), ('v', 'k'), ('o', 'c'), ('o', 'u'), ('w', 'r'), ('b', 'e'), ('b', 'z'), ('z', 'B'), ('z', 'p'), ('c', 'x'), ('x', 'f'), ('h', 'i'), ('h', 's'), ('d', 'l'), ('d', 'n'), ('t', 'k'), ('t', 'i'), ('l', 'y'), ('A', 'r'), ('A', 'p'), ('u', 'm'), ('f', 's'), ('f', 'q'), ('s', 'g'), ('g', 'r'), ('j', 'm'), ('y', 'p')] },
    { "edge": ("y", "p"), "weight": 1491, "expected": [('a', 'o'), ('v', 'k'), ('o', 'c'), ('o', 'u'), ('w', 'r'), ('b', 'e'), ('b', 'z'), ('z', 'B'), ('z', 'p'), ('c', 'x'), ('x', 'f'), ('h', 'i'), ('h', 's'), ('d', 'l'), ('d', 't'), ('d', 'n'), ('t', 'k'), ('t', 'i'), ('l', 'y'), ('A', 'r'), ('A', 'p'), ('u', 'm'), ('f', 's'), ('f', 'q'), ('s', 'g'), ('g', 'r'), ('j', 'm')] }
]
# Graph consisting of 28 nodes
data[29]["graph"] = Graph(is_directed=False)
data[29]["graph"].add_edge("A", "l", 590)
data[29]["graph"].add_edge("A", "o", 1433)
data[29]["graph"].add_edge("B", "w", 13)
data[29]["graph"].add_edge("C", "t", 342)
data[29]["graph"].add_edge("C", "v", 701)
data[29]["graph"].add_edge("a", "g", 1029)
data[29]["graph"].add_edge("a", "k", 455)
data[29]["graph"].add_edge("a", "x", 1426)
data[29]["graph"].add_edge("b", "r", 1268)
data[29]["graph"].add_edge("c", "i", 440)
data[29]["graph"].add_edge("c", "p", 981)
data[29]["graph"].add_edge("c", "q", 688)
data[29]["graph"].add_edge("d", "A", 83)
data[29]["graph"].add_edge("d", "f", 1470)
data[29]["graph"].add_edge("d", "j", 1063)
data[29]["graph"].add_edge("e", "C", 1182)
data[29]["graph"].add_edge("e", "h", 623)
data[29]["graph"].add_edge("f", "v", 100)
data[29]["graph"].add_edge("f", "z", 878)
data[29]["graph"].add_edge("g", "B", 289)
data[29]["graph"].add_edge("g", "q", 1419)
data[29]["graph"].add_edge("h", "s", 501)
data[29]["graph"].add_edge("h", "w", 1292)
data[29]["graph"].add_edge("i", "e", 319)
data[29]["graph"].add_edge("i", "q", 111)
data[29]["graph"].add_edge("j", "n", 430)
data[29]["graph"].add_edge("j", "t", 1179)
data[29]["graph"].add_edge("k", "b", 1160)
data[29]["graph"].add_edge("k", "t", 1211)
data[29]["graph"].add_edge("m", "o", 1075)
data[29]["graph"].add_edge("n", "m", 1033)
data[29]["graph"].add_edge("n", "u", 514)
data[29]["graph"].add_edge("p", "u", 710)
data[29]["graph"].add_edge("p", "y", 694)
data[29]["graph"].add_edge("r", "B", 416)
data[29]["graph"].add_edge("s", "l", 248)
data[29]["graph"].add_edge("s", "o", 1010)
data[29]["graph"].add_edge("v", "l", 384)
data[29]["graph"].add_edge("w", "y", 497)
data[29]["graph"].add_edge("x", "b", 693)
data[29]["graph"].add_edge("x", "r", 285)
data[29]["graph"].add_edge("z", "m", 269)
data[29]["graph"].add_edge("z", "u", 174)
data[29]["mst"] = Graph(is_directed=False)
data[29]["mst"].add_edge("A", "l", weight=590)
data[29]["mst"].add_edge("B", "w", weight=13)
data[29]["mst"].add_edge("C", "t", weight=342)
data[29]["mst"].add_edge("C", "v", weight=701)
data[29]["mst"].add_edge("a", "g", weight=1029)
data[29]["mst"].add_edge("a", "k", weight=455)
data[29]["mst"].add_edge("c", "i", weight=440)
data[29]["mst"].add_edge("d", "A", weight=83)
data[29]["mst"].add_edge("e", "h", weight=623)
data[29]["mst"].add_edge("f", "v", weight=100)
data[29]["mst"].add_edge("f", "z", weight=878)
data[29]["mst"].add_edge("g", "B", weight=289)
data[29]["mst"].add_edge("h", "s", weight=501)
data[29]["mst"].add_edge("i", "e", weight=319)
data[29]["mst"].add_edge("i", "q", weight=111)
data[29]["mst"].add_edge("j", "n", weight=430)
data[29]["mst"].add_edge("n", "u", weight=514)
data[29]["mst"].add_edge("p", "u", weight=710)
data[29]["mst"].add_edge("p", "y", weight=694)
data[29]["mst"].add_edge("r", "B", weight=416)
data[29]["mst"].add_edge("s", "l", weight=248)
data[29]["mst"].add_edge("s", "o", weight=1010)
data[29]["mst"].add_edge("v", "l", weight=384)
data[29]["mst"].add_edge("w", "y", weight=497)
data[29]["mst"].add_edge("x", "b", weight=693)
data[29]["mst"].add_edge("x", "r", weight=285)
data[29]["mst"].add_edge("z", "m", weight=269)
data[29]["mst"].add_edge("z", "u", weight=174)
data[29]["solutions"] = [
    { "edge": ("c", "p"), "weight": 982, "expected": [('a', 'k'), ('a', 'g'), ('g', 'B'), ('x', 'r'), ('x', 'b'), ('r', 'B'), ('c', 'i'), ('i', 'q'), ('i', 'e'), ('p', 'y'), ('p', 'u'), ('d', 'A'), ('j', 'n'), ('A', 'l'), ('f', 'v'), ('f', 'z'), ('e', 'h'), ('C', 't'), ('C', 'v'), ('h', 's'), ('z', 'u'), ('z', 'm'), ('v', 'l'), ('B', 'w'), ('s', 'l'), ('s', 'o'), ('w', 'y'), ('n', 'u')] },
    { "edge": ("g", "q"), "weight": 500, "expected": [('a', 'k'), ('a', 'g'), ('g', 'B'), ('g', 'q'), ('x', 'r'), ('x', 'b'), ('r', 'B'), ('c', 'i'), ('i', 'q'), ('i', 'e'), ('p', 'y'), ('p', 'u'), ('d', 'A'), ('j', 'n'), ('A', 'l'), ('f', 'v'), ('e', 'h'), ('C', 't'), ('C', 'v'), ('h', 's'), ('z', 'u'), ('z', 'm'), ('v', 'l'), ('B', 'w'), ('s', 'l'), ('s', 'o'), ('w', 'y'), ('n', 'u')] },
    { "edge": ("f", "z"), "weight": 877, "expected": [('a', 'k'), ('a', 'g'), ('g', 'B'), ('x', 'r'), ('x', 'b'), ('r', 'B'), ('c', 'i'), ('i', 'q'), ('i', 'e'), ('p', 'y'), ('p', 'u'), ('d', 'A'), ('j', 'n'), ('A', 'l'), ('f', 'v'), ('f', 'z'), ('e', 'h'), ('C', 't'), ('C', 'v'), ('h', 's'), ('z', 'u'), ('z', 'm'), ('v', 'l'), ('B', 'w'), ('s', 'l'), ('s', 'o'), ('w', 'y'), ('n', 'u')] },
    { "edge": ("r", "B"), "weight": 1427, "expected": [('a', 'k'), ('a', 'g'), ('k', 'b'), ('g', 'B'), ('x', 'r'), ('x', 'b'), ('c', 'i'), ('i', 'q'), ('i', 'e'), ('p', 'y'), ('p', 'u'), ('d', 'A'), ('j', 'n'), ('A', 'l'), ('f', 'v'), ('f', 'z'), ('e', 'h'), ('C', 't'), ('C', 'v'), ('h', 's'), ('z', 'u'), ('z', 'm'), ('v', 'l'), ('B', 'w'), ('s', 'l'), ('s', 'o'), ('w', 'y'), ('n', 'u')] }
]
# Graph consisting of 29 nodes
data[30]["graph"] = Graph(is_directed=False)
data[30]["graph"].add_edge("A", "w", 1275)
data[30]["graph"].add_edge("A", "z", 129)
data[30]["graph"].add_edge("C", "f", 1429)
data[30]["graph"].add_edge("D", "t", 299)
data[30]["graph"].add_edge("a", "j", 1225)
data[30]["graph"].add_edge("a", "r", 234)
data[30]["graph"].add_edge("a", "v", 157)
data[30]["graph"].add_edge("b", "e", 1359)
data[30]["graph"].add_edge("b", "l", 756)
data[30]["graph"].add_edge("b", "p", 363)
data[30]["graph"].add_edge("c", "C", 508)
data[30]["graph"].add_edge("c", "m", 1336)
data[30]["graph"].add_edge("c", "o", 166)
data[30]["graph"].add_edge("d", "u", 1313)
data[30]["graph"].add_edge("d", "x", 29)
data[30]["graph"].add_edge("e", "A", 807)
data[30]["graph"].add_edge("e", "g", 1258)
data[30]["graph"].add_edge("f", "w", 769)
data[30]["graph"].add_edge("g", "f", 91)
data[30]["graph"].add_edge("h", "k", 1293)
data[30]["graph"].add_edge("i", "B", 1026)
data[30]["graph"].add_edge("i", "y", 1455)
data[30]["graph"].add_edge("j", "k", 1160)
data[30]["graph"].add_edge("j", "z", 22)
data[30]["graph"].add_edge("k", "B", 686)
data[30]["graph"].add_edge("l", "g", 1198)
data[30]["graph"].add_edge("l", "h", 466)
data[30]["graph"].add_edge("m", "C", 1036)
data[30]["graph"].add_edge("m", "D", 725)
data[30]["graph"].add_edge("n", "t", 1338)
data[30]["graph"].add_edge("o", "h", 605)
data[30]["graph"].add_edge("o", "n", 1074)
data[30]["graph"].add_edge("p", "d", 1255)
data[30]["graph"].add_edge("p", "i", 353)
data[30]["graph"].add_edge("q", "s", 161)
data[30]["graph"].add_edge("r", "D", 160)
data[30]["graph"].add_edge("r", "y", 701)
data[30]["graph"].add_edge("t", "q", 907)
data[30]["graph"].add_edge("u", "s", 1110)
data[30]["graph"].add_edge("u", "x", 829)
data[30]["graph"].add_edge("v", "B", 131)
data[30]["graph"].add_edge("v", "w", 1233)
data[30]["graph"].add_edge("x", "n", 427)
data[30]["graph"].add_edge("y", "s", 167)
data[30]["graph"].add_edge("z", "q", 332)
data[30]["mst"] = Graph(is_directed=False)
data[30]["mst"].add_edge("A", "z", weight=129)
data[30]["mst"].add_edge("D", "t", weight=299)
data[30]["mst"].add_edge("a", "r", weight=234)
data[30]["mst"].add_edge("a", "v", weight=157)
data[30]["mst"].add_edge("b", "l", weight=756)
data[30]["mst"].add_edge("b", "p", weight=363)
data[30]["mst"].add_edge("c", "C", weight=508)
data[30]["mst"].add_edge("c", "o", weight=166)
data[30]["mst"].add_edge("d", "x", weight=29)
data[30]["mst"].add_edge("e", "A", weight=807)
data[30]["mst"].add_edge("f", "w", weight=769)
data[30]["mst"].add_edge("g", "f", weight=91)
data[30]["mst"].add_edge("i", "B", weight=1026)
data[30]["mst"].add_edge("j", "z", weight=22)
data[30]["mst"].add_edge("k", "B", weight=686)
data[30]["mst"].add_edge("l", "g", weight=1198)
data[30]["mst"].add_edge("l", "h", weight=466)
data[30]["mst"].add_edge("m", "D", weight=725)
data[30]["mst"].add_edge("o", "h", weight=605)
data[30]["mst"].add_edge("o", "n", weight=1074)
data[30]["mst"].add_edge("p", "i", weight=353)
data[30]["mst"].add_edge("q", "s", weight=161)
data[30]["mst"].add_edge("r", "D", weight=160)
data[30]["mst"].add_edge("r", "y", weight=701)
data[30]["mst"].add_edge("u", "x", weight=829)
data[30]["mst"].add_edge("v", "B", weight=131)
data[30]["mst"].add_edge("x", "n", weight=427)
data[30]["mst"].add_edge("y", "s", weight=167)
data[30]["mst"].add_edge("z", "q", weight=332)
data[30]["solutions"] = [
    { "edge": ("c", "m"), "weight": 1337, "expected": [('a', 'v'), ('a', 'r'), ('j', 'z'), ('v', 'B'), ('r', 'D'), ('r', 'y'), ('b', 'p'), ('b', 'l'), ('l', 'h'), ('l', 'g'), ('e', 'A'), ('p', 'i'), ('c', 'o'), ('c', 'C'), ('m', 'D'), ('o', 'h'), ('o', 'n'), ('d', 'x'), ('u', 'x'), ('x', 'n'), ('A', 'z'), ('g', 'f'), ('f', 'w'), ('k', 'B'), ('i', 'B'), ('y', 's'), ('z', 'q'), ('D', 't'), ('q', 's')] },
    { "edge": ("v", "w"), "weight": 724, "expected": [('a', 'v'), ('a', 'r'), ('j', 'z'), ('v', 'B'), ('v', 'w'), ('r', 'D'), ('r', 'y'), ('b', 'p'), ('b', 'l'), ('l', 'h'), ('e', 'A'), ('p', 'i'), ('c', 'o'), ('c', 'C'), ('m', 'D'), ('o', 'h'), ('o', 'n'), ('d', 'x'), ('u', 'x'), ('x', 'n'), ('A', 'z'), ('g', 'f'), ('f', 'w'), ('k', 'B'), ('i', 'B'), ('y', 's'), ('z', 'q'), ('D', 't'), ('q', 's')] },
    { "edge": ("r", "y"), "weight": 700, "expected": [('a', 'v'), ('a', 'r'), ('j', 'z'), ('v', 'B'), ('r', 'D'), ('r', 'y'), ('b', 'p'), ('b', 'l'), ('l', 'h'), ('l', 'g'), ('e', 'A'), ('p', 'i'), ('c', 'o'), ('c', 'C'), ('m', 'D'), ('o', 'h'), ('o', 'n'), ('d', 'x'), ('u', 'x'), ('x', 'n'), ('A', 'z'), ('g', 'f'), ('f', 'w'), ('k', 'B'), ('i', 'B'), ('y', 's'), ('z', 'q'), ('D', 't'), ('q', 's')] },
    { "edge": ("a", "r"), "weight": 235, "expected": [('a', 'v'), ('a', 'r'), ('j', 'z'), ('v', 'B'), ('r', 'D'), ('r', 'y'), ('b', 'p'), ('b', 'l'), ('l', 'h'), ('l', 'g'), ('e', 'A'), ('p', 'i'), ('c', 'o'), ('c', 'C'), ('m', 'D'), ('o', 'h'), ('o', 'n'), ('d', 'x'), ('u', 'x'), ('x', 'n'), ('A', 'z'), ('g', 'f'), ('f', 'w'), ('k', 'B'), ('i', 'B'), ('y', 's'), ('z', 'q'), ('D', 't'), ('q', 's')] }
]
# Graph consisting of 30 nodes
data[31]["graph"] = Graph(is_directed=False)
data[31]["graph"].add_edge("B", "A", 1577)
data[31]["graph"].add_edge("B", "l", 1632)
data[31]["graph"].add_edge("C", "A", 1266)
data[31]["graph"].add_edge("D", "m", 1114)
data[31]["graph"].add_edge("D", "w", 1515)
data[31]["graph"].add_edge("a", "g", 547)
data[31]["graph"].add_edge("a", "o", 364)
data[31]["graph"].add_edge("a", "u", 1584)
data[31]["graph"].add_edge("b", "s", 76)
data[31]["graph"].add_edge("b", "t", 1051)
data[31]["graph"].add_edge("c", "B", 403)
data[31]["graph"].add_edge("c", "d", 1324)
data[31]["graph"].add_edge("c", "p", 913)
data[31]["graph"].add_edge("d", "k", 1601)
data[31]["graph"].add_edge("d", "v", 118)
data[31]["graph"].add_edge("e", "n", 213)
data[31]["graph"].add_edge("e", "q", 151)
data[31]["graph"].add_edge("g", "x", 138)
data[31]["graph"].add_edge("g", "y", 697)
data[31]["graph"].add_edge("h", "D", 931)
data[31]["graph"].add_edge("i", "z", 953)
data[31]["graph"].add_edge("j", "r", 717)
data[31]["graph"].add_edge("k", "f", 643)
data[31]["graph"].add_edge("n", "C", 383)
data[31]["graph"].add_edge("o", "e", 1013)
data[31]["graph"].add_edge("o", "m", 1004)
data[31]["graph"].add_edge("p", "j", 411)
data[31]["graph"].add_edge("p", "m", 1242)
data[31]["graph"].add_edge("q", "h", 305)
data[31]["graph"].add_edge("q", "i", 188)
data[31]["graph"].add_edge("r", "l", 80)
data[31]["graph"].add_edge("s", "k", 1585)
data[31]["graph"].add_edge("s", "l", 303)
data[31]["graph"].add_edge("t", "f", 1513)
data[31]["graph"].add_edge("t", "n", 1281)
data[31]["graph"].add_edge("u", "b", 780)
data[31]["graph"].add_edge("u", "f", 765)
data[31]["graph"].add_edge("v", "h", 26)
data[31]["graph"].add_edge("v", "i", 1423)
data[31]["graph"].add_edge("w", "E", 256)
data[31]["graph"].add_edge("x", "A", 467)
data[31]["graph"].add_edge("x", "E", 1199)
data[31]["graph"].add_edge("y", "j", 791)
data[31]["graph"].add_edge("y", "r", 592)
data[31]["graph"].add_edge("z", "E", 197)
data[31]["graph"].add_edge("z", "w", 1402)
data[31]["mst"] = Graph(is_directed=False)
data[31]["mst"].add_edge("a", "g", weight=547)
data[31]["mst"].add_edge("a", "o", weight=364)
data[31]["mst"].add_edge("b", "s", weight=76)
data[31]["mst"].add_edge("b", "t", weight=1051)
data[31]["mst"].add_edge("c", "B", weight=403)
data[31]["mst"].add_edge("c", "p", weight=913)
data[31]["mst"].add_edge("d", "v", weight=118)
data[31]["mst"].add_edge("e", "n", weight=213)
data[31]["mst"].add_edge("e", "q", weight=151)
data[31]["mst"].add_edge("g", "x", weight=138)
data[31]["mst"].add_edge("g", "y", weight=697)
data[31]["mst"].add_edge("h", "D", weight=931)
data[31]["mst"].add_edge("i", "z", weight=953)
data[31]["mst"].add_edge("j", "r", weight=717)
data[31]["mst"].add_edge("k", "f", weight=643)
data[31]["mst"].add_edge("n", "C", weight=383)
data[31]["mst"].add_edge("o", "e", weight=1013)
data[31]["mst"].add_edge("o", "m", weight=1004)
data[31]["mst"].add_edge("p", "j", weight=411)
data[31]["mst"].add_edge("q", "h", weight=305)
data[31]["mst"].add_edge("q", "i", weight=188)
data[31]["mst"].add_edge("r", "l", weight=80)
data[31]["mst"].add_edge("s", "l", weight=303)
data[31]["mst"].add_edge("u", "b", weight=780)
data[31]["mst"].add_edge("u", "f", weight=765)
data[31]["mst"].add_edge("v", "h", weight=26)
data[31]["mst"].add_edge("w", "E", weight=256)
data[31]["mst"].add_edge("x", "A", weight=467)
data[31]["mst"].add_edge("y", "r", weight=592)
data[31]["mst"].add_edge("z", "E", weight=197)
data[31]["solutions"] = [
    { "edge": ("B", "A"), "weight": 1578, "expected": [('a', 'o'), ('a', 'g'), ('u', 'f'), ('u', 'b'), ('g', 'x'), ('g', 'y'), ('o', 'm'), ('o', 'e'), ('b', 's'), ('b', 't'), ('s', 'l'), ('c', 'B'), ('c', 'p'), ('d', 'v'), ('p', 'j'), ('k', 'f'), ('v', 'h'), ('e', 'q'), ('e', 'n'), ('q', 'i'), ('q', 'h'), ('n', 'C'), ('y', 'r'), ('x', 'A'), ('h', 'D'), ('i', 'z'), ('z', 'E'), ('j', 'r'), ('r', 'l'), ('w', 'E')] },
    { "edge": ("z", "w"), "weight": 75, "expected": [('a', 'o'), ('a', 'g'), ('u', 'f'), ('u', 'b'), ('g', 'x'), ('g', 'y'), ('o', 'm'), ('o', 'e'), ('b', 's'), ('b', 't'), ('s', 'l'), ('c', 'B'), ('c', 'p'), ('d', 'v'), ('p', 'j'), ('k', 'f'), ('v', 'h'), ('e', 'q'), ('e', 'n'), ('q', 'i'), ('q', 'h'), ('n', 'C'), ('y', 'r'), ('x', 'A'), ('h', 'D'), ('i', 'z'), ('z', 'w'), ('z', 'E'), ('j', 'r'), ('r', 'l')] },
    { "edge": ("u", "b"), "weight": 779, "expected": [('a', 'o'), ('a', 'g'), ('u', 'f'), ('u', 'b'), ('g', 'x'), ('g', 'y'), ('o', 'm'), ('o', 'e'), ('b', 's'), ('b', 't'), ('s', 'l'), ('c', 'B'), ('c', 'p'), ('d', 'v'), ('p', 'j'), ('k', 'f'), ('v', 'h'), ('e', 'q'), ('e', 'n'), ('q', 'i'), ('q', 'h'), ('n', 'C'), ('y', 'r'), ('x', 'A'), ('h', 'D'), ('i', 'z'), ('z', 'E'), ('j', 'r'), ('r', 'l'), ('w', 'E')] },
    { "edge": ("b", "s"), "weight": 77, "expected": [('a', 'o'), ('a', 'g'), ('u', 'f'), ('u', 'b'), ('g', 'x'), ('g', 'y'), ('o', 'm'), ('o', 'e'), ('b', 's'), ('b', 't'), ('s', 'l'), ('c', 'B'), ('c', 'p'), ('d', 'v'), ('p', 'j'), ('k', 'f'), ('v', 'h'), ('e', 'q'), ('e', 'n'), ('q', 'i'), ('q', 'h'), ('n', 'C'), ('y', 'r'), ('x', 'A'), ('h', 'D'), ('i', 'z'), ('z', 'E'), ('j', 'r'), ('r', 'l'), ('w', 'E')] }
]
# Graph consisting of 31 nodes
data[32]["graph"] = Graph(is_directed=False)
data[32]["graph"].add_edge("A", "B", 763)
data[32]["graph"].add_edge("D", "C", 696)
data[32]["graph"].add_edge("D", "l", 802)
data[32]["graph"].add_edge("E", "A", 1376)
data[32]["graph"].add_edge("E", "m", 236)
data[32]["graph"].add_edge("F", "g", 297)
data[32]["graph"].add_edge("F", "x", 1280)
data[32]["graph"].add_edge("a", "F", 1161)
data[32]["graph"].add_edge("a", "c", 52)
data[32]["graph"].add_edge("a", "z", 774)
data[32]["graph"].add_edge("b", "f", 1018)
data[32]["graph"].add_edge("b", "n", 873)
data[32]["graph"].add_edge("b", "t", 820)
data[32]["graph"].add_edge("c", "w", 1659)
data[32]["graph"].add_edge("c", "y", 447)
data[32]["graph"].add_edge("d", "k", 1445)
data[32]["graph"].add_edge("d", "v", 1605)
data[32]["graph"].add_edge("e", "D", 862)
data[32]["graph"].add_edge("e", "g", 1259)
data[32]["graph"].add_edge("e", "u", 382)
data[32]["graph"].add_edge("f", "d", 904)
data[32]["graph"].add_edge("f", "y", 1169)
data[32]["graph"].add_edge("g", "E", 324)
data[32]["graph"].add_edge("h", "j", 1397)
data[32]["graph"].add_edge("i", "s", 667)
data[32]["graph"].add_edge("j", "s", 74)
data[32]["graph"].add_edge("k", "i", 525)
data[32]["graph"].add_edge("l", "o", 1314)
data[32]["graph"].add_edge("l", "q", 453)
data[32]["graph"].add_edge("m", "x", 672)
data[32]["graph"].add_edge("n", "o", 1017)
data[32]["graph"].add_edge("n", "q", 1609)
data[32]["graph"].add_edge("o", "r", 699)
data[32]["graph"].add_edge("p", "C", 519)
data[32]["graph"].add_edge("r", "A", 1442)
data[32]["graph"].add_edge("s", "p", 581)
data[32]["graph"].add_edge("t", "B", 952)
data[32]["graph"].add_edge("t", "p", 294)
data[32]["graph"].add_edge("u", "B", 508)
data[32]["graph"].add_edge("u", "C", 372)
data[32]["graph"].add_edge("v", "i", 894)
data[32]["graph"].add_edge("v", "m", 1139)
data[32]["graph"].add_edge("w", "h", 1126)
data[32]["graph"].add_edge("w", "j", 946)
data[32]["graph"].add_edge("x", "r", 1207)
data[32]["graph"].add_edge("y", "q", 268)
data[32]["graph"].add_edge("z", "h", 1389)
data[32]["graph"].add_edge("z", "k", 1647)
data[32]["mst"] = Graph(is_directed=False)
data[32]["mst"].add_edge("A", "B", weight=763)
data[32]["mst"].add_edge("D", "C", weight=696)
data[32]["mst"].add_edge("D", "l", weight=802)
data[32]["mst"].add_edge("E", "m", weight=236)
data[32]["mst"].add_edge("F", "g", weight=297)
data[32]["mst"].add_edge("a", "c", weight=52)
data[32]["mst"].add_edge("a", "z", weight=774)
data[32]["mst"].add_edge("b", "f", weight=1018)
data[32]["mst"].add_edge("b", "n", weight=873)
data[32]["mst"].add_edge("b", "t", weight=820)
data[32]["mst"].add_edge("c", "y", weight=447)
data[32]["mst"].add_edge("e", "u", weight=382)
data[32]["mst"].add_edge("f", "d", weight=904)
data[32]["mst"].add_edge("g", "E", weight=324)
data[32]["mst"].add_edge("i", "s", weight=667)
data[32]["mst"].add_edge("j", "s", weight=74)
data[32]["mst"].add_edge("k", "i", weight=525)
data[32]["mst"].add_edge("l", "q", weight=453)
data[32]["mst"].add_edge("m", "x", weight=672)
data[32]["mst"].add_edge("n", "o", weight=1017)
data[32]["mst"].add_edge("o", "r", weight=699)
data[32]["mst"].add_edge("p", "C", weight=519)
data[32]["mst"].add_edge("s", "p", weight=581)
data[32]["mst"].add_edge("t", "p", weight=294)
data[32]["mst"].add_edge("u", "B", weight=508)
data[32]["mst"].add_edge("u", "C", weight=372)
data[32]["mst"].add_edge("v", "i", weight=894)
data[32]["mst"].add_edge("v", "m", weight=1139)
data[32]["mst"].add_edge("w", "h", weight=1126)
data[32]["mst"].add_edge("w", "j", weight=946)
data[32]["mst"].add_edge("y", "q", weight=268)
data[32]["solutions"] = [
    { "edge": ("h", "j"), "weight": 1398, "expected": [('a', 'c'), ('a', 'z'), ('c', 'y'), ('F', 'g'), ('b', 't'), ('b', 'n'), ('b', 'f'), ('n', 'o'), ('t', 'p'), ('f', 'd'), ('y', 'q'), ('w', 'j'), ('w', 'h'), ('k', 'i'), ('v', 'i'), ('v', 'm'), ('e', 'u'), ('u', 'C'), ('u', 'B'), ('D', 'C'), ('D', 'l'), ('g', 'E'), ('E', 'm'), ('j', 's'), ('i', 's'), ('s', 'p'), ('l', 'q'), ('o', 'r'), ('m', 'x'), ('p', 'C'), ('A', 'B')] },
    { "edge": ("e", "g"), "weight": 1125, "expected": [('a', 'c'), ('a', 'z'), ('c', 'y'), ('F', 'g'), ('b', 't'), ('b', 'n'), ('b', 'f'), ('n', 'o'), ('t', 'p'), ('f', 'd'), ('y', 'q'), ('w', 'j'), ('w', 'h'), ('k', 'i'), ('v', 'i'), ('e', 'u'), ('e', 'g'), ('u', 'C'), ('u', 'B'), ('D', 'C'), ('D', 'l'), ('g', 'E'), ('E', 'm'), ('j', 's'), ('i', 's'), ('s', 'p'), ('l', 'q'), ('o', 'r'), ('m', 'x'), ('p', 'C'), ('A', 'B')] },
    { "edge": ("i", "s"), "weight": 666, "expected": [('a', 'c'), ('a', 'z'), ('c', 'y'), ('F', 'g'), ('b', 't'), ('b', 'n'), ('b', 'f'), ('n', 'o'), ('t', 'p'), ('f', 'd'), ('y', 'q'), ('w', 'j'), ('w', 'h'), ('k', 'i'), ('v', 'i'), ('v', 'm'), ('e', 'u'), ('u', 'C'), ('u', 'B'), ('D', 'C'), ('D', 'l'), ('g', 'E'), ('E', 'm'), ('j', 's'), ('i', 's'), ('s', 'p'), ('l', 'q'), ('o', 'r'), ('m', 'x'), ('p', 'C'), ('A', 'B')] },
    { "edge": ("f", "d"), "weight": 905, "expected": [('a', 'c'), ('a', 'z'), ('c', 'y'), ('F', 'g'), ('b', 't'), ('b', 'n'), ('b', 'f'), ('n', 'o'), ('t', 'p'), ('f', 'd'), ('y', 'q'), ('w', 'j'), ('w', 'h'), ('k', 'i'), ('v', 'i'), ('v', 'm'), ('e', 'u'), ('u', 'C'), ('u', 'B'), ('D', 'C'), ('D', 'l'), ('g', 'E'), ('E', 'm'), ('j', 's'), ('i', 's'), ('s', 'p'), ('l', 'q'), ('o', 'r'), ('m', 'x'), ('p', 'C'), ('A', 'B')] }
]
# Graph consisting of 32 nodes
data[33]["graph"] = Graph(is_directed=False)
data[33]["graph"].add_edge("A", "i", 816)
data[33]["graph"].add_edge("A", "k", 1276)
data[33]["graph"].add_edge("C", "c", 951)
data[33]["graph"].add_edge("C", "f", 225)
data[33]["graph"].add_edge("D", "B", 82)
data[33]["graph"].add_edge("E", "l", 755)
data[33]["graph"].add_edge("E", "z", 1167)
data[33]["graph"].add_edge("F", "n", 1295)
data[33]["graph"].add_edge("F", "x", 61)
data[33]["graph"].add_edge("G", "o", 1029)
data[33]["graph"].add_edge("a", "A", 1185)
data[33]["graph"].add_edge("a", "F", 352)
data[33]["graph"].add_edge("a", "q", 1493)
data[33]["graph"].add_edge("b", "C", 396)
data[33]["graph"].add_edge("b", "v", 1526)
data[33]["graph"].add_edge("b", "y", 442)
data[33]["graph"].add_edge("c", "E", 734)
data[33]["graph"].add_edge("c", "w", 499)
data[33]["graph"].add_edge("d", "t", 450)
data[33]["graph"].add_edge("d", "x", 1177)
data[33]["graph"].add_edge("e", "g", 1298)
data[33]["graph"].add_edge("e", "j", 171)
data[33]["graph"].add_edge("e", "s", 1262)
data[33]["graph"].add_edge("g", "f", 1539)
data[33]["graph"].add_edge("h", "n", 1588)
data[33]["graph"].add_edge("h", "p", 634)
data[33]["graph"].add_edge("i", "m", 748)
data[33]["graph"].add_edge("i", "u", 529)
data[33]["graph"].add_edge("j", "G", 1502)
data[33]["graph"].add_edge("j", "r", 668)
data[33]["graph"].add_edge("m", "D", 142)
data[33]["graph"].add_edge("p", "l", 1086)
data[33]["graph"].add_edge("q", "h", 221)
data[33]["graph"].add_edge("q", "m", 1171)
data[33]["graph"].add_edge("r", "l", 1126)
data[33]["graph"].add_edge("s", "G", 1458)
data[33]["graph"].add_edge("s", "z", 1162)
data[33]["graph"].add_edge("t", "k", 196)
data[33]["graph"].add_edge("t", "p", 609)
data[33]["graph"].add_edge("u", "o", 1018)
data[33]["graph"].add_edge("u", "r", 203)
data[33]["graph"].add_edge("v", "D", 793)
data[33]["graph"].add_edge("v", "n", 874)
data[33]["graph"].add_edge("w", "g", 58)
data[33]["graph"].add_edge("w", "k", 1603)
data[33]["graph"].add_edge("x", "o", 78)
data[33]["graph"].add_edge("y", "d", 534)
data[33]["graph"].add_edge("y", "f", 1186)
data[33]["graph"].add_edge("z", "B", 1550)
data[33]["mst"] = Graph(is_directed=False)
data[33]["mst"].add_edge("A", "i", weight=816)
data[33]["mst"].add_edge("C", "c", weight=951)
data[33]["mst"].add_edge("C", "f", weight=225)
data[33]["mst"].add_edge("D", "B", weight=82)
data[33]["mst"].add_edge("E", "l", weight=755)
data[33]["mst"].add_edge("E", "z", weight=1167)
data[33]["mst"].add_edge("F", "x", weight=61)
data[33]["mst"].add_edge("G", "o", weight=1029)
data[33]["mst"].add_edge("a", "F", weight=352)
data[33]["mst"].add_edge("b", "C", weight=396)
data[33]["mst"].add_edge("b", "y", weight=442)
data[33]["mst"].add_edge("c", "E", weight=734)
data[33]["mst"].add_edge("c", "w", weight=499)
data[33]["mst"].add_edge("d", "t", weight=450)
data[33]["mst"].add_edge("e", "j", weight=171)
data[33]["mst"].add_edge("h", "p", weight=634)
data[33]["mst"].add_edge("i", "m", weight=748)
data[33]["mst"].add_edge("i", "u", weight=529)
data[33]["mst"].add_edge("j", "r", weight=668)
data[33]["mst"].add_edge("m", "D", weight=142)
data[33]["mst"].add_edge("q", "h", weight=221)
data[33]["mst"].add_edge("r", "l", weight=1126)
data[33]["mst"].add_edge("s", "z", weight=1162)
data[33]["mst"].add_edge("t", "k", weight=196)
data[33]["mst"].add_edge("t", "p", weight=609)
data[33]["mst"].add_edge("u", "o", weight=1018)
data[33]["mst"].add_edge("u", "r", weight=203)
data[33]["mst"].add_edge("v", "D", weight=793)
data[33]["mst"].add_edge("v", "n", weight=874)
data[33]["mst"].add_edge("w", "g", weight=58)
data[33]["mst"].add_edge("x", "o", weight=78)
data[33]["mst"].add_edge("y", "d", weight=534)
data[33]["solutions"] = [
    { "edge": ("q", "m"), "weight": 1172, "expected": [('a', 'F'), ('q', 'h'), ('A', 'i'), ('F', 'x'), ('b', 'C'), ('b', 'y'), ('y', 'd'), ('C', 'f'), ('C', 'c'), ('v', 'D'), ('v', 'n'), ('c', 'w'), ('c', 'E'), ('w', 'g'), ('E', 'l'), ('E', 'z'), ('d', 't'), ('t', 'k'), ('t', 'p'), ('x', 'o'), ('e', 'j'), ('j', 'r'), ('s', 'z'), ('h', 'p'), ('i', 'u'), ('i', 'm'), ('m', 'D'), ('u', 'r'), ('u', 'o'), ('G', 'o'), ('r', 'l'), ('D', 'B')] },
    { "edge": ("g", "f"), "weight": 792, "expected": [('a', 'F'), ('q', 'h'), ('A', 'i'), ('F', 'x'), ('b', 'C'), ('b', 'y'), ('y', 'd'), ('C', 'f'), ('v', 'D'), ('v', 'n'), ('c', 'w'), ('c', 'E'), ('w', 'g'), ('E', 'l'), ('E', 'z'), ('d', 't'), ('t', 'k'), ('t', 'p'), ('x', 'o'), ('e', 'j'), ('j', 'r'), ('s', 'z'), ('g', 'f'), ('h', 'p'), ('i', 'u'), ('i', 'm'), ('m', 'D'), ('u', 'r'), ('u', 'o'), ('G', 'o'), ('r', 'l'), ('D', 'B')] },
    { "edge": ("r", "l"), "weight": 1125, "expected": [('a', 'F'), ('q', 'h'), ('A', 'i'), ('F', 'x'), ('b', 'C'), ('b', 'y'), ('y', 'd'), ('C', 'f'), ('C', 'c'), ('v', 'D'), ('v', 'n'), ('c', 'w'), ('c', 'E'), ('w', 'g'), ('E', 'l'), ('E', 'z'), ('d', 't'), ('t', 'k'), ('t', 'p'), ('x', 'o'), ('e', 'j'), ('j', 'r'), ('s', 'z'), ('h', 'p'), ('i', 'u'), ('i', 'm'), ('m', 'D'), ('u', 'r'), ('u', 'o'), ('G', 'o'), ('r', 'l'), ('D', 'B')] },
    { "edge": ("t", "p"), "weight": 1494, "expected": [('a', 'F'), ('q', 'h'), ('A', 'i'), ('F', 'x'), ('b', 'C'), ('b', 'y'), ('y', 'd'), ('C', 'f'), ('C', 'c'), ('v', 'D'), ('v', 'n'), ('c', 'w'), ('c', 'E'), ('w', 'g'), ('E', 'l'), ('E', 'z'), ('d', 't'), ('t', 'k'), ('x', 'o'), ('e', 'j'), ('j', 'r'), ('s', 'z'), ('h', 'p'), ('p', 'l'), ('i', 'u'), ('i', 'm'), ('m', 'D'), ('u', 'r'), ('u', 'o'), ('G', 'o'), ('r', 'l'), ('D', 'B')] }
]
# Graph consisting of 33 nodes
data[34]["graph"] = Graph(is_directed=False)
data[34]["graph"].add_edge("A", "b", 485)
data[34]["graph"].add_edge("A", "s", 336)
data[34]["graph"].add_edge("B", "G", 548)
data[34]["graph"].add_edge("B", "s", 1379)
data[34]["graph"].add_edge("C", "l", 1094)
data[34]["graph"].add_edge("C", "r", 648)
data[34]["graph"].add_edge("E", "n", 230)
data[34]["graph"].add_edge("F", "k", 1008)
data[34]["graph"].add_edge("F", "x", 51)
data[34]["graph"].add_edge("H", "G", 1605)
data[34]["graph"].add_edge("H", "v", 525)
data[34]["graph"].add_edge("a", "A", 1219)
data[34]["graph"].add_edge("a", "o", 1100)
data[34]["graph"].add_edge("a", "p", 320)
data[34]["graph"].add_edge("b", "F", 851)
data[34]["graph"].add_edge("b", "u", 567)
data[34]["graph"].add_edge("c", "e", 65)
data[34]["graph"].add_edge("c", "m", 1029)
data[34]["graph"].add_edge("d", "B", 330)
data[34]["graph"].add_edge("d", "i", 891)
data[34]["graph"].add_edge("e", "d", 1661)
data[34]["graph"].add_edge("f", "C", 1595)
data[34]["graph"].add_edge("f", "E", 285)
data[34]["graph"].add_edge("f", "w", 29)
data[34]["graph"].add_edge("g", "k", 5)
data[34]["graph"].add_edge("g", "q", 1650)
data[34]["graph"].add_edge("h", "x", 837)
data[34]["graph"].add_edge("h", "z", 1371)
data[34]["graph"].add_edge("i", "H", 1063)
data[34]["graph"].add_edge("i", "y", 241)
data[34]["graph"].add_edge("j", "D", 1547)
data[34]["graph"].add_edge("j", "n", 735)
data[34]["graph"].add_edge("k", "D", 759)
data[34]["graph"].add_edge("l", "G", 240)
data[34]["graph"].add_edge("m", "n", 865)
data[34]["graph"].add_edge("m", "w", 127)
data[34]["graph"].add_edge("o", "g", 1385)
data[34]["graph"].add_edge("o", "h", 983)
data[34]["graph"].add_edge("p", "D", 1168)
data[34]["graph"].add_edge("p", "E", 1255)
data[34]["graph"].add_edge("q", "r", 1588)
data[34]["graph"].add_edge("q", "v", 277)
data[34]["graph"].add_edge("r", "t", 109)
data[34]["graph"].add_edge("t", "s", 1330)
data[34]["graph"].add_edge("u", "c", 955)
data[34]["graph"].add_edge("u", "e", 359)
data[34]["graph"].add_edge("w", "t", 1511)
data[34]["graph"].add_edge("y", "j", 1555)
data[34]["graph"].add_edge("y", "l", 887)
data[34]["graph"].add_edge("z", "v", 253)
data[34]["graph"].add_edge("z", "x", 1354)
data[34]["mst"] = Graph(is_directed=False)
data[34]["mst"].add_edge("A", "b", weight=485)
data[34]["mst"].add_edge("A", "s", weight=336)
data[34]["mst"].add_edge("B", "G", weight=548)
data[34]["mst"].add_edge("C", "l", weight=1094)
data[34]["mst"].add_edge("C", "r", weight=648)
data[34]["mst"].add_edge("E", "n", weight=230)
data[34]["mst"].add_edge("F", "k", weight=1008)
data[34]["mst"].add_edge("F", "x", weight=51)
data[34]["mst"].add_edge("H", "v", weight=525)
data[34]["mst"].add_edge("a", "o", weight=1100)
data[34]["mst"].add_edge("a", "p", weight=320)
data[34]["mst"].add_edge("b", "F", weight=851)
data[34]["mst"].add_edge("b", "u", weight=567)
data[34]["mst"].add_edge("c", "e", weight=65)
data[34]["mst"].add_edge("c", "m", weight=1029)
data[34]["mst"].add_edge("d", "B", weight=330)
data[34]["mst"].add_edge("f", "E", weight=285)
data[34]["mst"].add_edge("f", "w", weight=29)
data[34]["mst"].add_edge("g", "k", weight=5)
data[34]["mst"].add_edge("h", "x", weight=837)
data[34]["mst"].add_edge("i", "H", weight=1063)
data[34]["mst"].add_edge("i", "y", weight=241)
data[34]["mst"].add_edge("j", "n", weight=735)
data[34]["mst"].add_edge("k", "D", weight=759)
data[34]["mst"].add_edge("l", "G", weight=240)
data[34]["mst"].add_edge("m", "w", weight=127)
data[34]["mst"].add_edge("o", "h", weight=983)
data[34]["mst"].add_edge("q", "v", weight=277)
data[34]["mst"].add_edge("r", "t", weight=109)
data[34]["mst"].add_edge("t", "s", weight=1330)
data[34]["mst"].add_edge("u", "e", weight=359)
data[34]["mst"].add_edge("y", "l", weight=887)
data[34]["mst"].add_edge("z", "v", weight=253)
data[34]["solutions"] = [
    { "edge": ("g", "q"), "weight": 1651, "expected": [('a', 'p'), ('a', 'o'), ('A', 's'), ('A', 'b'), ('o', 'h'), ('b', 'u'), ('b', 'F'), ('u', 'e'), ('F', 'x'), ('F', 'k'), ('c', 'e'), ('c', 'm'), ('m', 'w'), ('d', 'B'), ('i', 'y'), ('i', 'H'), ('B', 'G'), ('f', 'w'), ('f', 'E'), ('C', 'r'), ('C', 'l'), ('E', 'n'), ('g', 'k'), ('q', 'v'), ('k', 'D'), ('h', 'x'), ('z', 'v'), ('y', 'l'), ('H', 'v'), ('j', 'n'), ('l', 'G'), ('r', 't'), ('t', 's')] },
    { "edge": ("j", "D"), "weight": 4, "expected": [('a', 'p'), ('a', 'o'), ('A', 's'), ('A', 'b'), ('o', 'h'), ('b', 'u'), ('b', 'F'), ('u', 'e'), ('F', 'x'), ('F', 'k'), ('c', 'e'), ('m', 'w'), ('d', 'B'), ('i', 'y'), ('i', 'H'), ('B', 'G'), ('f', 'w'), ('f', 'E'), ('C', 'r'), ('C', 'l'), ('E', 'n'), ('g', 'k'), ('q', 'v'), ('k', 'D'), ('h', 'x'), ('z', 'v'), ('y', 'l'), ('H', 'v'), ('j', 'D'), ('j', 'n'), ('l', 'G'), ('r', 't'), ('t', 's')] },
    { "edge": ("C", "r"), "weight": 647, "expected": [('a', 'p'), ('a', 'o'), ('A', 's'), ('A', 'b'), ('o', 'h'), ('b', 'u'), ('b', 'F'), ('u', 'e'), ('F', 'x'), ('F', 'k'), ('c', 'e'), ('c', 'm'), ('m', 'w'), ('d', 'B'), ('i', 'y'), ('i', 'H'), ('B', 'G'), ('f', 'w'), ('f', 'E'), ('C', 'r'), ('C', 'l'), ('E', 'n'), ('g', 'k'), ('q', 'v'), ('k', 'D'), ('h', 'x'), ('z', 'v'), ('y', 'l'), ('H', 'v'), ('j', 'n'), ('l', 'G'), ('r', 't'), ('t', 's')] },
    { "edge": ("t", "s"), "weight": 1331, "expected": [('a', 'p'), ('a', 'o'), ('A', 's'), ('A', 'b'), ('o', 'h'), ('b', 'u'), ('b', 'F'), ('u', 'e'), ('F', 'x'), ('F', 'k'), ('c', 'e'), ('c', 'm'), ('m', 'w'), ('d', 'B'), ('i', 'y'), ('i', 'H'), ('B', 'G'), ('f', 'w'), ('f', 'E'), ('C', 'r'), ('C', 'l'), ('E', 'n'), ('g', 'k'), ('q', 'v'), ('k', 'D'), ('h', 'x'), ('z', 'v'), ('y', 'l'), ('H', 'v'), ('j', 'n'), ('l', 'G'), ('r', 't'), ('t', 's')] }
]
# Graph consisting of 34 nodes
data[35]["graph"] = Graph(is_directed=False)
data[35]["graph"].add_edge("A", "E", 12)
data[35]["graph"].add_edge("A", "w", 1189)
data[35]["graph"].add_edge("B", "H", 1675)
data[35]["graph"].add_edge("B", "k", 1608)
data[35]["graph"].add_edge("C", "D", 395)
data[35]["graph"].add_edge("C", "G", 866)
data[35]["graph"].add_edge("D", "g", 1323)
data[35]["graph"].add_edge("E", "w", 163)
data[35]["graph"].add_edge("F", "H", 1052)
data[35]["graph"].add_edge("G", "i", 1488)
data[35]["graph"].add_edge("I", "e", 1632)
data[35]["graph"].add_edge("I", "p", 1414)
data[35]["graph"].add_edge("a", "B", 458)
data[35]["graph"].add_edge("a", "c", 86)
data[35]["graph"].add_edge("a", "x", 198)
data[35]["graph"].add_edge("b", "d", 1157)
data[35]["graph"].add_edge("b", "k", 651)
data[35]["graph"].add_edge("b", "y", 1479)
data[35]["graph"].add_edge("c", "C", 159)
data[35]["graph"].add_edge("c", "D", 581)
data[35]["graph"].add_edge("d", "I", 1237)
data[35]["graph"].add_edge("d", "t", 1225)
data[35]["graph"].add_edge("e", "G", 1635)
data[35]["graph"].add_edge("e", "h", 1624)
data[35]["graph"].add_edge("f", "i", 1207)
data[35]["graph"].add_edge("f", "j", 766)
data[35]["graph"].add_edge("f", "q", 873)
data[35]["graph"].add_edge("g", "v", 855)
data[35]["graph"].add_edge("h", "j", 146)
data[35]["graph"].add_edge("h", "l", 457)
data[35]["graph"].add_edge("j", "A", 1162)
data[35]["graph"].add_edge("k", "n", 328)
data[35]["graph"].add_edge("l", "r", 1091)
data[35]["graph"].add_edge("l", "s", 954)
data[35]["graph"].add_edge("m", "E", 1351)
data[35]["graph"].add_edge("m", "u", 224)
data[35]["graph"].add_edge("n", "m", 1088)
data[35]["graph"].add_edge("n", "r", 1607)
data[35]["graph"].add_edge("o", "z", 811)
data[35]["graph"].add_edge("p", "F", 33)
data[35]["graph"].add_edge("q", "p", 1311)
data[35]["graph"].add_edge("q", "z", 597)
data[35]["graph"].add_edge("r", "o", 155)
data[35]["graph"].add_edge("t", "i", 984)
data[35]["graph"].add_edge("t", "u", 400)
data[35]["graph"].add_edge("u", "o", 982)
data[35]["graph"].add_edge("v", "F", 925)
data[35]["graph"].add_edge("v", "s", 762)
data[35]["graph"].add_edge("x", "s", 815)
data[35]["graph"].add_edge("x", "w", 429)
data[35]["graph"].add_edge("y", "g", 301)
data[35]["graph"].add_edge("y", "z", 583)
data[35]["mst"] = Graph(is_directed=False)
data[35]["mst"].add_edge("A", "E", weight=12)
data[35]["mst"].add_edge("C", "D", weight=395)
data[35]["mst"].add_edge("C", "G", weight=866)
data[35]["mst"].add_edge("E", "w", weight=163)
data[35]["mst"].add_edge("F", "H", weight=1052)
data[35]["mst"].add_edge("a", "B", weight=458)
data[35]["mst"].add_edge("a", "c", weight=86)
data[35]["mst"].add_edge("a", "x", weight=198)
data[35]["mst"].add_edge("b", "d", weight=1157)
data[35]["mst"].add_edge("b", "k", weight=651)
data[35]["mst"].add_edge("c", "C", weight=159)
data[35]["mst"].add_edge("d", "I", weight=1237)
data[35]["mst"].add_edge("e", "h", weight=1624)
data[35]["mst"].add_edge("f", "j", weight=766)
data[35]["mst"].add_edge("f", "q", weight=873)
data[35]["mst"].add_edge("g", "v", weight=855)
data[35]["mst"].add_edge("h", "j", weight=146)
data[35]["mst"].add_edge("h", "l", weight=457)
data[35]["mst"].add_edge("k", "n", weight=328)
data[35]["mst"].add_edge("m", "u", weight=224)
data[35]["mst"].add_edge("n", "m", weight=1088)
data[35]["mst"].add_edge("o", "z", weight=811)
data[35]["mst"].add_edge("p", "F", weight=33)
data[35]["mst"].add_edge("q", "z", weight=597)
data[35]["mst"].add_edge("r", "o", weight=155)
data[35]["mst"].add_edge("t", "i", weight=984)
data[35]["mst"].add_edge("t", "u", weight=400)
data[35]["mst"].add_edge("u", "o", weight=982)
data[35]["mst"].add_edge("v", "F", weight=925)
data[35]["mst"].add_edge("v", "s", weight=762)
data[35]["mst"].add_edge("x", "s", weight=815)
data[35]["mst"].add_edge("x", "w", weight=429)
data[35]["mst"].add_edge("y", "g", weight=301)
data[35]["mst"].add_edge("y", "z", weight=583)
data[35]["solutions"] = [
    { "edge": ("e", "G"), "weight": 1636, "expected": [('a', 'c'), ('a', 'x'), ('a', 'B'), ('c', 'C'), ('x', 'w'), ('x', 's'), ('b', 'k'), ('b', 'd'), ('y', 'g'), ('y', 'z'), ('k', 'n'), ('d', 'I'), ('C', 'D'), ('C', 'G'), ('t', 'u'), ('t', 'i'), ('e', 'h'), ('h', 'j'), ('h', 'l'), ('f', 'j'), ('f', 'q'), ('q', 'z'), ('g', 'v'), ('v', 's'), ('v', 'F'), ('A', 'E'), ('n', 'm'), ('r', 'o'), ('m', 'u'), ('u', 'o'), ('E', 'w'), ('o', 'z'), ('p', 'F'), ('F', 'H')] },
    { "edge": ("I", "e"), "weight": 11, "expected": [('a', 'c'), ('a', 'x'), ('a', 'B'), ('c', 'C'), ('x', 'w'), ('x', 's'), ('b', 'k'), ('b', 'd'), ('y', 'g'), ('y', 'z'), ('k', 'n'), ('d', 'I'), ('C', 'D'), ('C', 'G'), ('I', 'e'), ('t', 'u'), ('t', 'i'), ('h', 'j'), ('h', 'l'), ('f', 'j'), ('f', 'q'), ('q', 'z'), ('g', 'v'), ('v', 's'), ('v', 'F'), ('A', 'E'), ('n', 'm'), ('r', 'o'), ('m', 'u'), ('u', 'o'), ('E', 'w'), ('o', 'z'), ('p', 'F'), ('F', 'H')] },
    { "edge": ("E", "w"), "weight": 162, "expected": [('a', 'c'), ('a', 'x'), ('a', 'B'), ('c', 'C'), ('x', 'w'), ('x', 's'), ('b', 'k'), ('b', 'd'), ('y', 'g'), ('y', 'z'), ('k', 'n'), ('d', 'I'), ('C', 'D'), ('C', 'G'), ('t', 'u'), ('t', 'i'), ('e', 'h'), ('h', 'j'), ('h', 'l'), ('f', 'j'), ('f', 'q'), ('q', 'z'), ('g', 'v'), ('v', 's'), ('v', 'F'), ('A', 'E'), ('n', 'm'), ('r', 'o'), ('m', 'u'), ('u', 'o'), ('E', 'w'), ('o', 'z'), ('p', 'F'), ('F', 'H')] },
    { "edge": ("y", "z"), "weight": 1489, "expected": [('a', 'c'), ('a', 'x'), ('a', 'B'), ('c', 'C'), ('x', 'w'), ('x', 's'), ('b', 'k'), ('b', 'd'), ('y', 'g'), ('k', 'n'), ('d', 'I'), ('C', 'D'), ('C', 'G'), ('t', 'u'), ('t', 'i'), ('e', 'h'), ('h', 'j'), ('h', 'l'), ('f', 'j'), ('f', 'q'), ('q', 'z'), ('g', 'v'), ('v', 's'), ('v', 'F'), ('l', 's'), ('A', 'E'), ('n', 'm'), ('r', 'o'), ('m', 'u'), ('u', 'o'), ('E', 'w'), ('o', 'z'), ('p', 'F'), ('F', 'H')] }
]
# Graph consisting of 35 nodes
data[36]["graph"] = Graph(is_directed=False)
data[36]["graph"].add_edge("A", "r", 1030)
data[36]["graph"].add_edge("B", "g", 1362)
data[36]["graph"].add_edge("B", "v", 655)
data[36]["graph"].add_edge("C", "w", 216)
data[36]["graph"].add_edge("D", "l", 1082)
data[36]["graph"].add_edge("E", "n", 1138)
data[36]["graph"].add_edge("F", "H", 44)
data[36]["graph"].add_edge("G", "H", 1040)
data[36]["graph"].add_edge("I", "C", 232)
data[36]["graph"].add_edge("I", "G", 875)
data[36]["graph"].add_edge("J", "n", 86)
data[36]["graph"].add_edge("J", "r", 138)
data[36]["graph"].add_edge("a", "f", 1093)
data[36]["graph"].add_edge("a", "o", 997)
data[36]["graph"].add_edge("a", "p", 1133)
data[36]["graph"].add_edge("b", "k", 1603)
data[36]["graph"].add_edge("b", "m", 197)
data[36]["graph"].add_edge("b", "t", 619)
data[36]["graph"].add_edge("c", "E", 1287)
data[36]["graph"].add_edge("c", "J", 1539)
data[36]["graph"].add_edge("c", "s", 801)
data[36]["graph"].add_edge("d", "B", 1673)
data[36]["graph"].add_edge("d", "q", 1180)
data[36]["graph"].add_edge("d", "z", 984)
data[36]["graph"].add_edge("e", "I", 1350)
data[36]["graph"].add_edge("e", "h", 1431)
data[36]["graph"].add_edge("f", "G", 35)
data[36]["graph"].add_edge("f", "j", 837)
data[36]["graph"].add_edge("g", "A", 1340)
data[36]["graph"].add_edge("h", "A", 327)
data[36]["graph"].add_edge("h", "v", 584)
data[36]["graph"].add_edge("i", "D", 188)
data[36]["graph"].add_edge("i", "y", 1325)
data[36]["graph"].add_edge("j", "y", 1267)
data[36]["graph"].add_edge("k", "s", 608)
data[36]["graph"].add_edge("k", "u", 80)
data[36]["graph"].add_edge("l", "F", 145)
data[36]["graph"].add_edge("m", "E", 554)
data[36]["graph"].add_edge("m", "n", 551)
data[36]["graph"].add_edge("o", "g", 39)
data[36]["graph"].add_edge("o", "l", 195)
data[36]["graph"].add_edge("p", "D", 1633)
data[36]["graph"].add_edge("p", "x", 680)
data[36]["graph"].add_edge("q", "H", 1344)
data[36]["graph"].add_edge("q", "j", 286)
data[36]["graph"].add_edge("r", "C", 226)
data[36]["graph"].add_edge("s", "e", 1166)
data[36]["graph"].add_edge("t", "i", 1560)
data[36]["graph"].add_edge("t", "x", 160)
data[36]["graph"].add_edge("u", "w", 793)
data[36]["graph"].add_edge("v", "x", 1067)
data[36]["graph"].add_edge("y", "w", 1501)
data[36]["graph"].add_edge("z", "F", 768)
data[36]["graph"].add_edge("z", "u", 1644)
data[36]["mst"] = Graph(is_directed=False)
data[36]["mst"].add_edge("A", "r", weight=1030)
data[36]["mst"].add_edge("B", "v", weight=655)
data[36]["mst"].add_edge("C", "w", weight=216)
data[36]["mst"].add_edge("D", "l", weight=1082)
data[36]["mst"].add_edge("F", "H", weight=44)
data[36]["mst"].add_edge("G", "H", weight=1040)
data[36]["mst"].add_edge("I", "C", weight=232)
data[36]["mst"].add_edge("I", "G", weight=875)
data[36]["mst"].add_edge("J", "n", weight=86)
data[36]["mst"].add_edge("J", "r", weight=138)
data[36]["mst"].add_edge("a", "o", weight=997)
data[36]["mst"].add_edge("b", "m", weight=197)
data[36]["mst"].add_edge("b", "t", weight=619)
data[36]["mst"].add_edge("c", "s", weight=801)
data[36]["mst"].add_edge("d", "z", weight=984)
data[36]["mst"].add_edge("f", "G", weight=35)
data[36]["mst"].add_edge("f", "j", weight=837)
data[36]["mst"].add_edge("h", "A", weight=327)
data[36]["mst"].add_edge("h", "v", weight=584)
data[36]["mst"].add_edge("i", "D", weight=188)
data[36]["mst"].add_edge("j", "y", weight=1267)
data[36]["mst"].add_edge("k", "s", weight=608)
data[36]["mst"].add_edge("k", "u", weight=80)
data[36]["mst"].add_edge("l", "F", weight=145)
data[36]["mst"].add_edge("m", "E", weight=554)
data[36]["mst"].add_edge("m", "n", weight=551)
data[36]["mst"].add_edge("o", "g", weight=39)
data[36]["mst"].add_edge("o", "l", weight=195)
data[36]["mst"].add_edge("p", "x", weight=680)
data[36]["mst"].add_edge("q", "j", weight=286)
data[36]["mst"].add_edge("r", "C", weight=226)
data[36]["mst"].add_edge("s", "e", weight=1166)
data[36]["mst"].add_edge("t", "x", weight=160)
data[36]["mst"].add_edge("u", "w", weight=793)
data[36]["mst"].add_edge("z", "F", weight=768)
data[36]["solutions"] = [
    { "edge": ("c", "E"), "weight": 1288, "expected": [('a', 'o'), ('f', 'G'), ('f', 'j'), ('o', 'g'), ('o', 'l'), ('p', 'x'), ('b', 'm'), ('b', 't'), ('k', 'u'), ('k', 's'), ('t', 'x'), ('m', 'n'), ('m', 'E'), ('c', 's'), ('s', 'e'), ('J', 'n'), ('J', 'r'), ('d', 'z'), ('q', 'j'), ('z', 'F'), ('B', 'v'), ('I', 'C'), ('I', 'G'), ('h', 'A'), ('h', 'v'), ('j', 'y'), ('G', 'H'), ('A', 'r'), ('i', 'D'), ('D', 'l'), ('u', 'w'), ('l', 'F'), ('F', 'H'), ('r', 'C'), ('C', 'w')] },
    { "edge": ("e", "I"), "weight": 38, "expected": [('a', 'o'), ('f', 'G'), ('f', 'j'), ('o', 'g'), ('o', 'l'), ('p', 'x'), ('b', 'm'), ('b', 't'), ('k', 'u'), ('k', 's'), ('t', 'x'), ('m', 'n'), ('m', 'E'), ('c', 's'), ('J', 'n'), ('J', 'r'), ('d', 'z'), ('q', 'j'), ('z', 'F'), ('B', 'v'), ('e', 'I'), ('I', 'C'), ('I', 'G'), ('h', 'A'), ('h', 'v'), ('j', 'y'), ('G', 'H'), ('A', 'r'), ('i', 'D'), ('D', 'l'), ('u', 'w'), ('l', 'F'), ('F', 'H'), ('r', 'C'), ('C', 'w')] },
    { "edge": ("C", "w"), "weight": 215, "expected": [('a', 'o'), ('f', 'G'), ('f', 'j'), ('o', 'g'), ('o', 'l'), ('p', 'x'), ('b', 'm'), ('b', 't'), ('k', 'u'), ('k', 's'), ('t', 'x'), ('m', 'n'), ('m', 'E'), ('c', 's'), ('s', 'e'), ('J', 'n'), ('J', 'r'), ('d', 'z'), ('q', 'j'), ('z', 'F'), ('B', 'v'), ('I', 'C'), ('I', 'G'), ('h', 'A'), ('h', 'v'), ('j', 'y'), ('G', 'H'), ('A', 'r'), ('i', 'D'), ('D', 'l'), ('u', 'w'), ('l', 'F'), ('F', 'H'), ('r', 'C'), ('C', 'w')] },
    { "edge": ("d", "z"), "weight": 985, "expected": [('a', 'o'), ('f', 'G'), ('f', 'j'), ('o', 'g'), ('o', 'l'), ('p', 'x'), ('b', 'm'), ('b', 't'), ('k', 'u'), ('k', 's'), ('t', 'x'), ('m', 'n'), ('m', 'E'), ('c', 's'), ('s', 'e'), ('J', 'n'), ('J', 'r'), ('d', 'z'), ('q', 'j'), ('z', 'F'), ('B', 'v'), ('I', 'C'), ('I', 'G'), ('h', 'A'), ('h', 'v'), ('j', 'y'), ('G', 'H'), ('A', 'r'), ('i', 'D'), ('D', 'l'), ('u', 'w'), ('l', 'F'), ('F', 'H'), ('r', 'C'), ('C', 'w')] }
]
# Graph consisting of 36 nodes
data[37]["graph"] = Graph(is_directed=False)
data[37]["graph"].add_edge("A", "x", 1500)
data[37]["graph"].add_edge("B", "F", 1100)
data[37]["graph"].add_edge("D", "A", 1376)
data[37]["graph"].add_edge("D", "B", 586)
data[37]["graph"].add_edge("E", "s", 461)
data[37]["graph"].add_edge("E", "w", 851)
data[37]["graph"].add_edge("F", "u", 1566)
data[37]["graph"].add_edge("H", "o", 286)
data[37]["graph"].add_edge("H", "p", 362)
data[37]["graph"].add_edge("I", "v", 1226)
data[37]["graph"].add_edge("I", "w", 1340)
data[37]["graph"].add_edge("J", "q", 878)
data[37]["graph"].add_edge("J", "x", 41)
data[37]["graph"].add_edge("K", "u", 1013)
data[37]["graph"].add_edge("a", "l", 1472)
data[37]["graph"].add_edge("a", "n", 521)
data[37]["graph"].add_edge("a", "y", 597)
data[37]["graph"].add_edge("b", "C", 587)
data[37]["graph"].add_edge("b", "D", 1428)
data[37]["graph"].add_edge("b", "m", 29)
data[37]["graph"].add_edge("c", "B", 1032)
data[37]["graph"].add_edge("c", "H", 1577)
data[37]["graph"].add_edge("c", "g", 465)
data[37]["graph"].add_edge("d", "h", 315)
data[37]["graph"].add_edge("d", "r", 214)
data[37]["graph"].add_edge("e", "G", 1015)
data[37]["graph"].add_edge("e", "i", 1560)
data[37]["graph"].add_edge("f", "F", 617)
data[37]["graph"].add_edge("f", "K", 1043)
data[37]["graph"].add_edge("g", "G", 1051)
data[37]["graph"].add_edge("g", "d", 1492)
data[37]["graph"].add_edge("h", "z", 1494)
data[37]["graph"].add_edge("i", "t", 1148)
data[37]["graph"].add_edge("j", "I", 1638)
data[37]["graph"].add_edge("j", "u", 159)
data[37]["graph"].add_edge("k", "E", 1375)
data[37]["graph"].add_edge("k", "J", 918)
data[37]["graph"].add_edge("l", "C", 213)
data[37]["graph"].add_edge("l", "i", 50)
data[37]["graph"].add_edge("m", "C", 1473)
data[37]["graph"].add_edge("m", "h", 1242)
data[37]["graph"].add_edge("n", "G", 556)
data[37]["graph"].add_edge("n", "p", 1680)
data[37]["graph"].add_edge("o", "q", 237)
data[37]["graph"].add_edge("o", "w", 228)
data[37]["graph"].add_edge("r", "e", 685)
data[37]["graph"].add_edge("r", "f", 441)
data[37]["graph"].add_edge("s", "v", 1301)
data[37]["graph"].add_edge("t", "A", 183)
data[37]["graph"].add_edge("t", "k", 51)
data[37]["graph"].add_edge("v", "x", 1402)
data[37]["graph"].add_edge("y", "j", 209)
data[37]["graph"].add_edge("y", "s", 78)
data[37]["graph"].add_edge("z", "p", 343)
data[37]["graph"].add_edge("z", "q", 391)
data[37]["mst"] = Graph(is_directed=False)
data[37]["mst"].add_edge("D", "B", weight=586)
data[37]["mst"].add_edge("E", "s", weight=461)
data[37]["mst"].add_edge("E", "w", weight=851)
data[37]["mst"].add_edge("H", "o", weight=286)
data[37]["mst"].add_edge("H", "p", weight=362)
data[37]["mst"].add_edge("I", "v", weight=1226)
data[37]["mst"].add_edge("J", "q", weight=878)
data[37]["mst"].add_edge("J", "x", weight=41)
data[37]["mst"].add_edge("K", "u", weight=1013)
data[37]["mst"].add_edge("a", "n", weight=521)
data[37]["mst"].add_edge("a", "y", weight=597)
data[37]["mst"].add_edge("b", "C", weight=587)
data[37]["mst"].add_edge("b", "m", weight=29)
data[37]["mst"].add_edge("c", "B", weight=1032)
data[37]["mst"].add_edge("c", "g", weight=465)
data[37]["mst"].add_edge("d", "h", weight=315)
data[37]["mst"].add_edge("d", "r", weight=214)
data[37]["mst"].add_edge("e", "G", weight=1015)
data[37]["mst"].add_edge("f", "F", weight=617)
data[37]["mst"].add_edge("g", "G", weight=1051)
data[37]["mst"].add_edge("i", "t", weight=1148)
data[37]["mst"].add_edge("j", "u", weight=159)
data[37]["mst"].add_edge("k", "J", weight=918)
data[37]["mst"].add_edge("l", "C", weight=213)
data[37]["mst"].add_edge("l", "i", weight=50)
data[37]["mst"].add_edge("n", "G", weight=556)
data[37]["mst"].add_edge("o", "q", weight=237)
data[37]["mst"].add_edge("o", "w", weight=228)
data[37]["mst"].add_edge("r", "e", weight=685)
data[37]["mst"].add_edge("r", "f", weight=441)
data[37]["mst"].add_edge("s", "v", weight=1301)
data[37]["mst"].add_edge("t", "A", weight=183)
data[37]["mst"].add_edge("t", "k", weight=51)
data[37]["mst"].add_edge("y", "j", weight=209)
data[37]["mst"].add_edge("y", "s", weight=78)
data[37]["mst"].add_edge("z", "p", weight=343)
data[37]["solutions"] = [
    { "edge": ("g", "d"), "weight": 1493, "expected": [('a', 'n'), ('a', 'y'), ('y', 's'), ('y', 'j'), ('l', 'i'), ('l', 'C'), ('n', 'G'), ('b', 'm'), ('b', 'C'), ('D', 'B'), ('c', 'g'), ('c', 'B'), ('H', 'o'), ('H', 'p'), ('g', 'G'), ('d', 'r'), ('d', 'h'), ('r', 'f'), ('r', 'e'), ('e', 'G'), ('i', 't'), ('f', 'F'), ('K', 'u'), ('z', 'p'), ('t', 'k'), ('t', 'A'), ('j', 'u'), ('I', 'v'), ('k', 'J'), ('J', 'x'), ('J', 'q'), ('E', 's'), ('E', 'w'), ('o', 'w'), ('o', 'q'), ('s', 'v')] },
    { "edge": ("h", "z"), "weight": 1300, "expected": [('a', 'n'), ('a', 'y'), ('y', 's'), ('y', 'j'), ('l', 'i'), ('l', 'C'), ('n', 'G'), ('b', 'm'), ('b', 'C'), ('D', 'B'), ('c', 'g'), ('c', 'B'), ('H', 'o'), ('H', 'p'), ('g', 'G'), ('d', 'r'), ('d', 'h'), ('r', 'f'), ('r', 'e'), ('e', 'G'), ('i', 't'), ('f', 'F'), ('K', 'u'), ('z', 'p'), ('t', 'k'), ('t', 'A'), ('j', 'u'), ('I', 'v'), ('k', 'J'), ('J', 'x'), ('J', 'q'), ('E', 's'), ('E', 'w'), ('o', 'w'), ('o', 'q'), ('s', 'v')] },
    { "edge": ("t", "k"), "weight": 49, "expected": [('a', 'n'), ('a', 'y'), ('y', 's'), ('y', 'j'), ('l', 'i'), ('l', 'C'), ('n', 'G'), ('b', 'm'), ('b', 'C'), ('D', 'B'), ('c', 'g'), ('c', 'B'), ('H', 'o'), ('H', 'p'), ('g', 'G'), ('d', 'r'), ('d', 'h'), ('r', 'f'), ('r', 'e'), ('e', 'G'), ('i', 't'), ('f', 'F'), ('K', 'u'), ('z', 'p'), ('t', 'k'), ('t', 'A'), ('j', 'u'), ('I', 'v'), ('k', 'J'), ('J', 'x'), ('J', 'q'), ('E', 's'), ('E', 'w'), ('o', 'w'), ('o', 'q'), ('s', 'v')] },
    { "edge": ("b", "C"), "weight": 1429, "expected": [('a', 'n'), ('a', 'y'), ('y', 's'), ('y', 'j'), ('l', 'i'), ('l', 'C'), ('n', 'G'), ('b', 'm'), ('D', 'B'), ('m', 'h'), ('c', 'g'), ('c', 'B'), ('H', 'o'), ('H', 'p'), ('g', 'G'), ('d', 'r'), ('d', 'h'), ('r', 'f'), ('r', 'e'), ('e', 'G'), ('i', 't'), ('f', 'F'), ('K', 'u'), ('z', 'p'), ('t', 'k'), ('t', 'A'), ('j', 'u'), ('I', 'v'), ('k', 'J'), ('J', 'x'), ('J', 'q'), ('E', 's'), ('E', 'w'), ('o', 'w'), ('o', 'q'), ('s', 'v')] }
]
# Graph consisting of 37 nodes
data[38]["graph"] = Graph(is_directed=False)
data[38]["graph"].add_edge("A", "j", 889)
data[38]["graph"].add_edge("A", "y", 327)
data[38]["graph"].add_edge("B", "x", 346)
data[38]["graph"].add_edge("C", "J", 703)
data[38]["graph"].add_edge("C", "z", 516)
data[38]["graph"].add_edge("E", "l", 570)
data[38]["graph"].add_edge("F", "x", 1344)
data[38]["graph"].add_edge("G", "r", 764)
data[38]["graph"].add_edge("G", "y", 1602)
data[38]["graph"].add_edge("H", "f", 1238)
data[38]["graph"].add_edge("H", "m", 1117)
data[38]["graph"].add_edge("I", "D", 168)
data[38]["graph"].add_edge("K", "h", 1390)
data[38]["graph"].add_edge("K", "z", 151)
data[38]["graph"].add_edge("L", "D", 930)
data[38]["graph"].add_edge("L", "q", 1546)
data[38]["graph"].add_edge("a", "H", 603)
data[38]["graph"].add_edge("a", "c", 1247)
data[38]["graph"].add_edge("a", "m", 133)
data[38]["graph"].add_edge("b", "C", 740)
data[38]["graph"].add_edge("b", "k", 1385)
data[38]["graph"].add_edge("c", "d", 679)
data[38]["graph"].add_edge("c", "t", 1281)
data[38]["graph"].add_edge("d", "L", 511)
data[38]["graph"].add_edge("d", "u", 1478)
data[38]["graph"].add_edge("e", "J", 1080)
data[38]["graph"].add_edge("e", "K", 876)
data[38]["graph"].add_edge("e", "h", 145)
data[38]["graph"].add_edge("f", "A", 307)
data[38]["graph"].add_edge("f", "B", 1622)
data[38]["graph"].add_edge("g", "E", 694)
data[38]["graph"].add_edge("g", "F", 1503)
data[38]["graph"].add_edge("g", "q", 853)
data[38]["graph"].add_edge("h", "B", 869)
data[38]["graph"].add_edge("i", "p", 471)
data[38]["graph"].add_edge("i", "v", 724)
data[38]["graph"].add_edge("i", "w", 11)
data[38]["graph"].add_edge("j", "l", 422)
data[38]["graph"].add_edge("j", "x", 1406)
data[38]["graph"].add_edge("k", "G", 721)
data[38]["graph"].add_edge("k", "o", 95)
data[38]["graph"].add_edge("l", "s", 396)
data[38]["graph"].add_edge("m", "b", 1335)
data[38]["graph"].add_edge("n", "z", 604)
data[38]["graph"].add_edge("o", "n", 1004)
data[38]["graph"].add_edge("o", "y", 1000)
data[38]["graph"].add_edge("p", "r", 1163)
data[38]["graph"].add_edge("p", "s", 1664)
data[38]["graph"].add_edge("q", "F", 1439)
data[38]["graph"].add_edge("r", "I", 415)
data[38]["graph"].add_edge("t", "D", 283)
data[38]["graph"].add_edge("t", "J", 1265)
data[38]["graph"].add_edge("u", "E", 66)
data[38]["graph"].add_edge("u", "s", 1404)
data[38]["graph"].add_edge("v", "n", 48)
data[38]["graph"].add_edge("v", "w", 1144)
data[38]["graph"].add_edge("w", "I", 339)
data[38]["mst"] = Graph(is_directed=False)
data[38]["mst"].add_edge("A", "j", weight=889)
data[38]["mst"].add_edge("A", "y", weight=327)
data[38]["mst"].add_edge("B", "x", weight=346)
data[38]["mst"].add_edge("C", "J", weight=703)
data[38]["mst"].add_edge("C", "z", weight=516)
data[38]["mst"].add_edge("E", "l", weight=570)
data[38]["mst"].add_edge("F", "x", weight=1344)
data[38]["mst"].add_edge("G", "r", weight=764)
data[38]["mst"].add_edge("H", "f", weight=1238)
data[38]["mst"].add_edge("I", "D", weight=168)
data[38]["mst"].add_edge("K", "z", weight=151)
data[38]["mst"].add_edge("L", "D", weight=930)
data[38]["mst"].add_edge("a", "H", weight=603)
data[38]["mst"].add_edge("a", "m", weight=133)
data[38]["mst"].add_edge("b", "C", weight=740)
data[38]["mst"].add_edge("c", "d", weight=679)
data[38]["mst"].add_edge("d", "L", weight=511)
data[38]["mst"].add_edge("e", "K", weight=876)
data[38]["mst"].add_edge("e", "h", weight=145)
data[38]["mst"].add_edge("f", "A", weight=307)
data[38]["mst"].add_edge("g", "E", weight=694)
data[38]["mst"].add_edge("g", "q", weight=853)
data[38]["mst"].add_edge("h", "B", weight=869)
data[38]["mst"].add_edge("i", "p", weight=471)
data[38]["mst"].add_edge("i", "v", weight=724)
data[38]["mst"].add_edge("i", "w", weight=11)
data[38]["mst"].add_edge("j", "l", weight=422)
data[38]["mst"].add_edge("k", "G", weight=721)
data[38]["mst"].add_edge("k", "o", weight=95)
data[38]["mst"].add_edge("l", "s", weight=396)
data[38]["mst"].add_edge("n", "z", weight=604)
data[38]["mst"].add_edge("o", "y", weight=1000)
data[38]["mst"].add_edge("r", "I", weight=415)
data[38]["mst"].add_edge("t", "D", weight=283)
data[38]["mst"].add_edge("u", "E", weight=66)
data[38]["mst"].add_edge("v", "n", weight=48)
data[38]["mst"].add_edge("w", "I", weight=339)
data[38]["solutions"] = [
    { "edge": ("v", "w"), "weight": 1145, "expected": [('a', 'm'), ('a', 'H'), ('H', 'f'), ('c', 'd'), ('b', 'C'), ('k', 'o'), ('k', 'G'), ('C', 'z'), ('C', 'J'), ('t', 'D'), ('d', 'L'), ('u', 'E'), ('L', 'D'), ('e', 'h'), ('e', 'K'), ('K', 'z'), ('h', 'B'), ('f', 'A'), ('A', 'y'), ('A', 'j'), ('B', 'x'), ('g', 'E'), ('g', 'q'), ('E', 'l'), ('F', 'x'), ('i', 'w'), ('i', 'p'), ('i', 'v'), ('v', 'n'), ('w', 'I'), ('j', 'l'), ('l', 's'), ('G', 'r'), ('o', 'y'), ('n', 'z'), ('r', 'I'), ('I', 'D')] },
    { "edge": ("d", "u"), "weight": 569, "expected": [('a', 'm'), ('a', 'H'), ('H', 'f'), ('c', 'd'), ('b', 'C'), ('k', 'o'), ('k', 'G'), ('C', 'z'), ('C', 'J'), ('t', 'D'), ('d', 'L'), ('d', 'u'), ('u', 'E'), ('L', 'D'), ('e', 'h'), ('e', 'K'), ('K', 'z'), ('h', 'B'), ('f', 'A'), ('A', 'y'), ('A', 'j'), ('B', 'x'), ('g', 'E'), ('g', 'q'), ('E', 'l'), ('F', 'x'), ('i', 'w'), ('i', 'p'), ('i', 'v'), ('v', 'n'), ('w', 'I'), ('j', 'l'), ('l', 's'), ('G', 'r'), ('n', 'z'), ('r', 'I'), ('I', 'D')] },
    { "edge": ("j", "l"), "weight": 421, "expected": [('a', 'm'), ('a', 'H'), ('H', 'f'), ('c', 'd'), ('b', 'C'), ('k', 'o'), ('k', 'G'), ('C', 'z'), ('C', 'J'), ('t', 'D'), ('d', 'L'), ('u', 'E'), ('L', 'D'), ('e', 'h'), ('e', 'K'), ('K', 'z'), ('h', 'B'), ('f', 'A'), ('A', 'y'), ('A', 'j'), ('B', 'x'), ('g', 'E'), ('g', 'q'), ('E', 'l'), ('F', 'x'), ('i', 'w'), ('i', 'p'), ('i', 'v'), ('v', 'n'), ('w', 'I'), ('j', 'l'), ('l', 's'), ('G', 'r'), ('o', 'y'), ('n', 'z'), ('r', 'I'), ('I', 'D')] },
    { "edge": ("k", "o"), "weight": 1603, "expected": [('a', 'm'), ('a', 'H'), ('H', 'f'), ('c', 'd'), ('b', 'C'), ('k', 'G'), ('C', 'z'), ('C', 'J'), ('t', 'D'), ('d', 'L'), ('u', 'E'), ('L', 'D'), ('e', 'h'), ('e', 'K'), ('K', 'z'), ('h', 'B'), ('f', 'A'), ('A', 'y'), ('A', 'j'), ('B', 'x'), ('g', 'E'), ('g', 'q'), ('E', 'l'), ('F', 'x'), ('i', 'w'), ('i', 'p'), ('i', 'v'), ('v', 'n'), ('w', 'I'), ('j', 'l'), ('l', 's'), ('G', 'r'), ('o', 'y'), ('o', 'n'), ('n', 'z'), ('r', 'I'), ('I', 'D')] }
]
# Graph consisting of 38 nodes
data[39]["graph"] = Graph(is_directed=False)
data[39]["graph"].add_edge("B", "J", 1213)
data[39]["graph"].add_edge("C", "w", 1210)
data[39]["graph"].add_edge("D", "A", 657)
data[39]["graph"].add_edge("D", "u", 1615)
data[39]["graph"].add_edge("E", "h", 1562)
data[39]["graph"].add_edge("F", "I", 407)
data[39]["graph"].add_edge("G", "I", 676)
data[39]["graph"].add_edge("G", "K", 310)
data[39]["graph"].add_edge("H", "F", 842)
data[39]["graph"].add_edge("H", "j", 992)
data[39]["graph"].add_edge("J", "A", 896)
data[39]["graph"].add_edge("K", "u", 1354)
data[39]["graph"].add_edge("L", "j", 64)
data[39]["graph"].add_edge("L", "r", 1649)
data[39]["graph"].add_edge("M", "A", 1621)
data[39]["graph"].add_edge("a", "e", 147)
data[39]["graph"].add_edge("a", "p", 478)
data[39]["graph"].add_edge("a", "q", 605)
data[39]["graph"].add_edge("b", "C", 143)
data[39]["graph"].add_edge("b", "t", 188)
data[39]["graph"].add_edge("c", "D", 268)
data[39]["graph"].add_edge("c", "H", 1183)
data[39]["graph"].add_edge("c", "n", 347)
data[39]["graph"].add_edge("d", "B", 1629)
data[39]["graph"].add_edge("d", "o", 695)
data[39]["graph"].add_edge("d", "z", 1475)
data[39]["graph"].add_edge("e", "L", 1540)
data[39]["graph"].add_edge("e", "m", 887)
data[39]["graph"].add_edge("f", "s", 1659)
data[39]["graph"].add_edge("f", "w", 1617)
data[39]["graph"].add_edge("g", "E", 645)
data[39]["graph"].add_edge("g", "i", 704)
data[39]["graph"].add_edge("g", "y", 836)
data[39]["graph"].add_edge("h", "F", 1525)
data[39]["graph"].add_edge("h", "x", 176)
data[39]["graph"].add_edge("i", "G", 462)
data[39]["graph"].add_edge("l", "K", 426)
data[39]["graph"].add_edge("l", "v", 1190)
data[39]["graph"].add_edge("m", "f", 1367)
data[39]["graph"].add_edge("m", "u", 718)
data[39]["graph"].add_edge("n", "M", 835)
data[39]["graph"].add_edge("n", "i", 469)
data[39]["graph"].add_edge("o", "k", 829)
data[39]["graph"].add_edge("p", "b", 229)
data[39]["graph"].add_edge("p", "k", 933)
data[39]["graph"].add_edge("q", "C", 484)
data[39]["graph"].add_edge("q", "l", 277)
data[39]["graph"].add_edge("s", "E", 1065)
data[39]["graph"].add_edge("s", "J", 1647)
data[39]["graph"].add_edge("t", "B", 1572)
data[39]["graph"].add_edge("t", "j", 227)
data[39]["graph"].add_edge("v", "M", 370)
data[39]["graph"].add_edge("w", "r", 857)
data[39]["graph"].add_edge("x", "k", 409)
data[39]["graph"].add_edge("y", "r", 494)
data[39]["graph"].add_edge("y", "x", 776)
data[39]["graph"].add_edge("z", "o", 1403)
data[39]["graph"].add_edge("z", "v", 508)
data[39]["mst"] = Graph(is_directed=False)
data[39]["mst"].add_edge("B", "J", weight=1213)
data[39]["mst"].add_edge("D", "A", weight=657)
data[39]["mst"].add_edge("F", "I", weight=407)
data[39]["mst"].add_edge("G", "I", weight=676)
data[39]["mst"].add_edge("G", "K", weight=310)
data[39]["mst"].add_edge("H", "F", weight=842)
data[39]["mst"].add_edge("J", "A", weight=896)
data[39]["mst"].add_edge("L", "j", weight=64)
data[39]["mst"].add_edge("a", "e", weight=147)
data[39]["mst"].add_edge("a", "p", weight=478)
data[39]["mst"].add_edge("b", "C", weight=143)
data[39]["mst"].add_edge("b", "t", weight=188)
data[39]["mst"].add_edge("c", "D", weight=268)
data[39]["mst"].add_edge("c", "n", weight=347)
data[39]["mst"].add_edge("d", "o", weight=695)
data[39]["mst"].add_edge("e", "m", weight=887)
data[39]["mst"].add_edge("g", "E", weight=645)
data[39]["mst"].add_edge("g", "i", weight=704)
data[39]["mst"].add_edge("g", "y", weight=836)
data[39]["mst"].add_edge("h", "x", weight=176)
data[39]["mst"].add_edge("i", "G", weight=462)
data[39]["mst"].add_edge("l", "K", weight=426)
data[39]["mst"].add_edge("m", "f", weight=1367)
data[39]["mst"].add_edge("m", "u", weight=718)
data[39]["mst"].add_edge("n", "M", weight=835)
data[39]["mst"].add_edge("n", "i", weight=469)
data[39]["mst"].add_edge("o", "k", weight=829)
data[39]["mst"].add_edge("p", "b", weight=229)
data[39]["mst"].add_edge("q", "C", weight=484)
data[39]["mst"].add_edge("q", "l", weight=277)
data[39]["mst"].add_edge("s", "E", weight=1065)
data[39]["mst"].add_edge("t", "j", weight=227)
data[39]["mst"].add_edge("v", "M", weight=370)
data[39]["mst"].add_edge("w", "r", weight=857)
data[39]["mst"].add_edge("x", "k", weight=409)
data[39]["mst"].add_edge("y", "r", weight=494)
data[39]["mst"].add_edge("y", "x", weight=776)
data[39]["mst"].add_edge("z", "v", weight=508)
data[39]["solutions"] = [
    { "edge": ("a", "q"), "weight": 606, "expected": [('a', 'e'), ('a', 'p'), ('q', 'l'), ('q', 'C'), ('e', 'm'), ('p', 'b'), ('b', 'C'), ('b', 't'), ('t', 'j'), ('c', 'D'), ('c', 'n'), ('H', 'F'), ('D', 'A'), ('n', 'i'), ('n', 'M'), ('d', 'o'), ('z', 'v'), ('B', 'J'), ('o', 'k'), ('m', 'u'), ('m', 'f'), ('L', 'j'), ('s', 'E'), ('w', 'r'), ('g', 'E'), ('g', 'i'), ('g', 'y'), ('i', 'G'), ('y', 'r'), ('y', 'x'), ('h', 'x'), ('F', 'I'), ('x', 'k'), ('G', 'K'), ('G', 'I'), ('l', 'K'), ('v', 'M'), ('J', 'A')] },
    { "edge": ("h", "F"), "weight": 775, "expected": [('a', 'e'), ('a', 'p'), ('q', 'l'), ('q', 'C'), ('e', 'm'), ('p', 'b'), ('b', 'C'), ('b', 't'), ('t', 'j'), ('c', 'D'), ('c', 'n'), ('H', 'F'), ('D', 'A'), ('n', 'i'), ('n', 'M'), ('d', 'o'), ('z', 'v'), ('B', 'J'), ('o', 'k'), ('m', 'u'), ('m', 'f'), ('L', 'j'), ('s', 'E'), ('w', 'r'), ('g', 'E'), ('g', 'i'), ('i', 'G'), ('y', 'r'), ('y', 'x'), ('h', 'x'), ('h', 'F'), ('F', 'I'), ('x', 'k'), ('G', 'K'), ('G', 'I'), ('l', 'K'), ('v', 'M'), ('J', 'A')] },
    { "edge": ("v", "M"), "weight": 369, "expected": [('a', 'e'), ('a', 'p'), ('q', 'l'), ('q', 'C'), ('e', 'm'), ('p', 'b'), ('b', 'C'), ('b', 't'), ('t', 'j'), ('c', 'D'), ('c', 'n'), ('H', 'F'), ('D', 'A'), ('n', 'i'), ('n', 'M'), ('d', 'o'), ('z', 'v'), ('B', 'J'), ('o', 'k'), ('m', 'u'), ('m', 'f'), ('L', 'j'), ('s', 'E'), ('w', 'r'), ('g', 'E'), ('g', 'i'), ('g', 'y'), ('i', 'G'), ('y', 'r'), ('y', 'x'), ('h', 'x'), ('F', 'I'), ('x', 'k'), ('G', 'K'), ('G', 'I'), ('l', 'K'), ('v', 'M'), ('J', 'A')] },
    { "edge": ("n", "i"), "weight": 470, "expected": [('a', 'e'), ('a', 'p'), ('q', 'l'), ('q', 'C'), ('e', 'm'), ('p', 'b'), ('b', 'C'), ('b', 't'), ('t', 'j'), ('c', 'D'), ('c', 'n'), ('H', 'F'), ('D', 'A'), ('n', 'i'), ('n', 'M'), ('d', 'o'), ('z', 'v'), ('B', 'J'), ('o', 'k'), ('m', 'u'), ('m', 'f'), ('L', 'j'), ('s', 'E'), ('w', 'r'), ('g', 'E'), ('g', 'i'), ('g', 'y'), ('i', 'G'), ('y', 'r'), ('y', 'x'), ('h', 'x'), ('F', 'I'), ('x', 'k'), ('G', 'K'), ('G', 'I'), ('l', 'K'), ('v', 'M'), ('J', 'A')] }
]
# Graph consisting of 39 nodes
data[40]["graph"] = Graph(is_directed=False)
data[40]["graph"].add_edge("A", "B", 36)
data[40]["graph"].add_edge("A", "K", 1330)
data[40]["graph"].add_edge("C", "o", 448)
data[40]["graph"].add_edge("D", "G", 876)
data[40]["graph"].add_edge("E", "s", 434)
data[40]["graph"].add_edge("F", "g", 263)
data[40]["graph"].add_edge("F", "t", 1125)
data[40]["graph"].add_edge("H", "L", 683)
data[40]["graph"].add_edge("H", "k", 1440)
data[40]["graph"].add_edge("I", "u", 730)
data[40]["graph"].add_edge("J", "G", 1579)
data[40]["graph"].add_edge("J", "N", 557)
data[40]["graph"].add_edge("M", "D", 1649)
data[40]["graph"].add_edge("M", "G", 433)
data[40]["graph"].add_edge("N", "B", 1060)
data[40]["graph"].add_edge("a", "b", 831)
data[40]["graph"].add_edge("a", "m", 757)
data[40]["graph"].add_edge("a", "r", 1193)
data[40]["graph"].add_edge("b", "H", 258)
data[40]["graph"].add_edge("b", "y", 486)
data[40]["graph"].add_edge("c", "C", 1010)
data[40]["graph"].add_edge("c", "f", 1622)
data[40]["graph"].add_edge("c", "j", 873)
data[40]["graph"].add_edge("d", "F", 245)
data[40]["graph"].add_edge("d", "z", 1463)
data[40]["graph"].add_edge("e", "h", 991)
data[40]["graph"].add_edge("e", "q", 918)
data[40]["graph"].add_edge("f", "i", 1317)
data[40]["graph"].add_edge("f", "k", 883)
data[40]["graph"].add_edge("g", "t", 961)
data[40]["graph"].add_edge("h", "J", 250)
data[40]["graph"].add_edge("i", "w", 1081)
data[40]["graph"].add_edge("j", "d", 276)
data[40]["graph"].add_edge("j", "i", 180)
data[40]["graph"].add_edge("k", "o", 728)
data[40]["graph"].add_edge("l", "E", 1394)
data[40]["graph"].add_edge("l", "x", 1513)
data[40]["graph"].add_edge("m", "e", 926)
data[40]["graph"].add_edge("m", "p", 1609)
data[40]["graph"].add_edge("n", "I", 978)
data[40]["graph"].add_edge("o", "E", 1214)
data[40]["graph"].add_edge("p", "I", 917)
data[40]["graph"].add_edge("p", "n", 903)
data[40]["graph"].add_edge("q", "M", 256)
data[40]["graph"].add_edge("q", "h", 615)
data[40]["graph"].add_edge("r", "A", 877)
data[40]["graph"].add_edge("r", "N", 1568)
data[40]["graph"].add_edge("t", "B", 962)
data[40]["graph"].add_edge("u", "v", 467)
data[40]["graph"].add_edge("v", "D", 1038)
data[40]["graph"].add_edge("v", "K", 1391)
data[40]["graph"].add_edge("w", "s", 391)
data[40]["graph"].add_edge("w", "u", 127)
data[40]["graph"].add_edge("x", "K", 424)
data[40]["graph"].add_edge("x", "s", 1)
data[40]["graph"].add_edge("y", "C", 768)
data[40]["graph"].add_edge("y", "g", 975)
data[40]["graph"].add_edge("z", "l", 594)
data[40]["graph"].add_edge("z", "n", 601)
data[40]["mst"] = Graph(is_directed=False)
data[40]["mst"].add_edge("A", "B", weight=36)
data[40]["mst"].add_edge("C", "o", weight=448)
data[40]["mst"].add_edge("D", "G", weight=876)
data[40]["mst"].add_edge("E", "s", weight=434)
data[40]["mst"].add_edge("F", "g", weight=263)
data[40]["mst"].add_edge("H", "L", weight=683)
data[40]["mst"].add_edge("I", "u", weight=730)
data[40]["mst"].add_edge("J", "N", weight=557)
data[40]["mst"].add_edge("M", "G", weight=433)
data[40]["mst"].add_edge("a", "b", weight=831)
data[40]["mst"].add_edge("a", "m", weight=757)
data[40]["mst"].add_edge("b", "H", weight=258)
data[40]["mst"].add_edge("b", "y", weight=486)
data[40]["mst"].add_edge("c", "j", weight=873)
data[40]["mst"].add_edge("d", "F", weight=245)
data[40]["mst"].add_edge("e", "q", weight=918)
data[40]["mst"].add_edge("f", "k", weight=883)
data[40]["mst"].add_edge("g", "t", weight=961)
data[40]["mst"].add_edge("h", "J", weight=250)
data[40]["mst"].add_edge("j", "d", weight=276)
data[40]["mst"].add_edge("j", "i", weight=180)
data[40]["mst"].add_edge("k", "o", weight=728)
data[40]["mst"].add_edge("m", "e", weight=926)
data[40]["mst"].add_edge("p", "I", weight=917)
data[40]["mst"].add_edge("p", "n", weight=903)
data[40]["mst"].add_edge("q", "M", weight=256)
data[40]["mst"].add_edge("q", "h", weight=615)
data[40]["mst"].add_edge("r", "A", weight=877)
data[40]["mst"].add_edge("t", "B", weight=962)
data[40]["mst"].add_edge("u", "v", weight=467)
data[40]["mst"].add_edge("v", "D", weight=1038)
data[40]["mst"].add_edge("w", "s", weight=391)
data[40]["mst"].add_edge("w", "u", weight=127)
data[40]["mst"].add_edge("x", "K", weight=424)
data[40]["mst"].add_edge("x", "s", weight=1)
data[40]["mst"].add_edge("y", "C", weight=768)
data[40]["mst"].add_edge("y", "g", weight=975)
data[40]["mst"].add_edge("z", "l", weight=594)
data[40]["mst"].add_edge("z", "n", weight=601)
data[40]["solutions"] = [
    { "edge": ("H", "k"), "weight": 1441, "expected": [('a', 'm'), ('a', 'b'), ('b', 'H'), ('b', 'y'), ('m', 'e'), ('r', 'A'), ('y', 'C'), ('y', 'g'), ('H', 'L'), ('c', 'j'), ('j', 'i'), ('j', 'd'), ('C', 'o'), ('f', 'k'), ('d', 'F'), ('z', 'l'), ('z', 'n'), ('F', 'g'), ('e', 'q'), ('q', 'M'), ('q', 'h'), ('h', 'J'), ('k', 'o'), ('g', 't'), ('t', 'B'), ('J', 'N'), ('w', 'u'), ('w', 's'), ('E', 's'), ('x', 's'), ('x', 'K'), ('p', 'n'), ('p', 'I'), ('I', 'u'), ('M', 'G'), ('A', 'B'), ('u', 'v'), ('v', 'D'), ('D', 'G')] },
    { "edge": ("c", "f"), "weight": 556, "expected": [('a', 'm'), ('a', 'b'), ('b', 'H'), ('b', 'y'), ('m', 'e'), ('r', 'A'), ('y', 'C'), ('H', 'L'), ('c', 'f'), ('c', 'j'), ('j', 'i'), ('j', 'd'), ('C', 'o'), ('f', 'k'), ('d', 'F'), ('z', 'l'), ('z', 'n'), ('F', 'g'), ('e', 'q'), ('q', 'M'), ('q', 'h'), ('h', 'J'), ('k', 'o'), ('g', 't'), ('t', 'B'), ('J', 'N'), ('w', 'u'), ('w', 's'), ('E', 's'), ('x', 's'), ('x', 'K'), ('p', 'n'), ('p', 'I'), ('I', 'u'), ('M', 'G'), ('A', 'B'), ('u', 'v'), ('v', 'D'), ('D', 'G')] },
    { "edge": ("f", "k"), "weight": 882, "expected": [('a', 'm'), ('a', 'b'), ('b', 'H'), ('b', 'y'), ('m', 'e'), ('r', 'A'), ('y', 'C'), ('y', 'g'), ('H', 'L'), ('c', 'j'), ('j', 'i'), ('j', 'd'), ('C', 'o'), ('f', 'k'), ('d', 'F'), ('z', 'l'), ('z', 'n'), ('F', 'g'), ('e', 'q'), ('q', 'M'), ('q', 'h'), ('h', 'J'), ('k', 'o'), ('g', 't'), ('t', 'B'), ('J', 'N'), ('w', 'u'), ('w', 's'), ('E', 's'), ('x', 's'), ('x', 'K'), ('p', 'n'), ('p', 'I'), ('I', 'u'), ('M', 'G'), ('A', 'B'), ('u', 'v'), ('v', 'D'), ('D', 'G')] },
    { "edge": ("v", "D"), "weight": 1215, "expected": [('a', 'm'), ('a', 'b'), ('b', 'H'), ('b', 'y'), ('m', 'e'), ('r', 'A'), ('y', 'C'), ('y', 'g'), ('H', 'L'), ('c', 'j'), ('j', 'i'), ('j', 'd'), ('C', 'o'), ('f', 'k'), ('d', 'F'), ('z', 'l'), ('z', 'n'), ('F', 'g'), ('e', 'q'), ('q', 'M'), ('q', 'h'), ('h', 'J'), ('i', 'w'), ('k', 'o'), ('g', 't'), ('t', 'B'), ('J', 'N'), ('w', 'u'), ('w', 's'), ('E', 's'), ('x', 's'), ('x', 'K'), ('p', 'n'), ('p', 'I'), ('I', 'u'), ('M', 'G'), ('A', 'B'), ('u', 'v'), ('D', 'G')] }
]
# Graph consisting of 40 nodes
data[41]["graph"] = Graph(is_directed=False)
data[41]["graph"].add_edge("A", "h", 616)
data[41]["graph"].add_edge("B", "q", 882)
data[41]["graph"].add_edge("D", "O", 1676)
data[41]["graph"].add_edge("E", "q", 1679)
data[41]["graph"].add_edge("F", "p", 392)
data[41]["graph"].add_edge("G", "p", 50)
data[41]["graph"].add_edge("G", "v", 1529)
data[41]["graph"].add_edge("H", "J", 838)
data[41]["graph"].add_edge("H", "o", 475)
data[41]["graph"].add_edge("I", "O", 1037)
data[41]["graph"].add_edge("J", "i", 1022)
data[41]["graph"].add_edge("K", "L", 1356)
data[41]["graph"].add_edge("K", "O", 103)
data[41]["graph"].add_edge("M", "I", 744)
data[41]["graph"].add_edge("M", "k", 3)
data[41]["graph"].add_edge("N", "i", 1424)
data[41]["graph"].add_edge("N", "t", 1328)
data[41]["graph"].add_edge("a", "c", 747)
data[41]["graph"].add_edge("a", "e", 429)
data[41]["graph"].add_edge("a", "j", 141)
data[41]["graph"].add_edge("b", "M", 482)
data[41]["graph"].add_edge("b", "N", 1125)
data[41]["graph"].add_edge("b", "r", 1573)
data[41]["graph"].add_edge("c", "A", 1304)
data[41]["graph"].add_edge("c", "h", 1440)
data[41]["graph"].add_edge("d", "E", 860)
data[41]["graph"].add_edge("d", "n", 907)
data[41]["graph"].add_edge("d", "z", 212)
data[41]["graph"].add_edge("e", "H", 1493)
data[41]["graph"].add_edge("e", "t", 1233)
data[41]["graph"].add_edge("f", "u", 997)
data[41]["graph"].add_edge("f", "w", 953)
data[41]["graph"].add_edge("g", "B", 244)
data[41]["graph"].add_edge("g", "J", 21)
data[41]["graph"].add_edge("h", "s", 863)
data[41]["graph"].add_edge("i", "F", 1623)
data[41]["graph"].add_edge("j", "A", 186)
data[41]["graph"].add_edge("j", "w", 561)
data[41]["graph"].add_edge("k", "m", 1507)
data[41]["graph"].add_edge("k", "y", 610)
data[41]["graph"].add_edge("l", "G", 325)
data[41]["graph"].add_edge("l", "K", 575)
data[41]["graph"].add_edge("l", "x", 1098)
data[41]["graph"].add_edge("m", "D", 1396)
data[41]["graph"].add_edge("n", "D", 63)
data[41]["graph"].add_edge("n", "f", 1102)
data[41]["graph"].add_edge("o", "L", 1525)
data[41]["graph"].add_edge("p", "I", 653)
data[41]["graph"].add_edge("r", "B", 1202)
data[41]["graph"].add_edge("r", "E", 315)
data[41]["graph"].add_edge("s", "C", 911)
data[41]["graph"].add_edge("s", "y", 1603)
data[41]["graph"].add_edge("t", "m", 100)
data[41]["graph"].add_edge("u", "C", 1145)
data[41]["graph"].add_edge("u", "F", 1188)
data[41]["graph"].add_edge("w", "v", 582)
data[41]["graph"].add_edge("x", "C", 241)
data[41]["graph"].add_edge("x", "q", 982)
data[41]["graph"].add_edge("y", "v", 416)
data[41]["graph"].add_edge("z", "g", 1193)
data[41]["graph"].add_edge("z", "o", 496)
data[41]["mst"] = Graph(is_directed=False)
data[41]["mst"].add_edge("A", "h", weight=616)
data[41]["mst"].add_edge("B", "q", weight=882)
data[41]["mst"].add_edge("F", "p", weight=392)
data[41]["mst"].add_edge("G", "p", weight=50)
data[41]["mst"].add_edge("H", "J", weight=838)
data[41]["mst"].add_edge("H", "o", weight=475)
data[41]["mst"].add_edge("J", "i", weight=1022)
data[41]["mst"].add_edge("K", "L", weight=1356)
data[41]["mst"].add_edge("K", "O", weight=103)
data[41]["mst"].add_edge("M", "I", weight=744)
data[41]["mst"].add_edge("M", "k", weight=3)
data[41]["mst"].add_edge("a", "c", weight=747)
data[41]["mst"].add_edge("a", "e", weight=429)
data[41]["mst"].add_edge("a", "j", weight=141)
data[41]["mst"].add_edge("b", "M", weight=482)
data[41]["mst"].add_edge("b", "N", weight=1125)
data[41]["mst"].add_edge("d", "E", weight=860)
data[41]["mst"].add_edge("d", "n", weight=907)
data[41]["mst"].add_edge("d", "z", weight=212)
data[41]["mst"].add_edge("e", "t", weight=1233)
data[41]["mst"].add_edge("f", "u", weight=997)
data[41]["mst"].add_edge("f", "w", weight=953)
data[41]["mst"].add_edge("g", "B", weight=244)
data[41]["mst"].add_edge("g", "J", weight=21)
data[41]["mst"].add_edge("h", "s", weight=863)
data[41]["mst"].add_edge("j", "A", weight=186)
data[41]["mst"].add_edge("j", "w", weight=561)
data[41]["mst"].add_edge("k", "y", weight=610)
data[41]["mst"].add_edge("l", "G", weight=325)
data[41]["mst"].add_edge("l", "K", weight=575)
data[41]["mst"].add_edge("n", "D", weight=63)
data[41]["mst"].add_edge("p", "I", weight=653)
data[41]["mst"].add_edge("r", "E", weight=315)
data[41]["mst"].add_edge("s", "C", weight=911)
data[41]["mst"].add_edge("t", "m", weight=100)
data[41]["mst"].add_edge("w", "v", weight=582)
data[41]["mst"].add_edge("x", "C", weight=241)
data[41]["mst"].add_edge("x", "q", weight=982)
data[41]["mst"].add_edge("y", "v", weight=416)
data[41]["mst"].add_edge("z", "o", weight=496)
data[41]["solutions"] = [
    { "edge": ("s", "y"), "weight": 1604, "expected": [('a', 'j'), ('a', 'e'), ('a', 'c'), ('j', 'A'), ('j', 'w'), ('e', 't'), ('b', 'M'), ('b', 'N'), ('r', 'E'), ('M', 'k'), ('M', 'I'), ('A', 'h'), ('h', 's'), ('d', 'z'), ('d', 'E'), ('d', 'n'), ('z', 'o'), ('n', 'D'), ('H', 'o'), ('H', 'J'), ('t', 'm'), ('f', 'w'), ('f', 'u'), ('w', 'v'), ('g', 'J'), ('g', 'B'), ('B', 'q'), ('J', 'i'), ('s', 'C'), ('F', 'p'), ('k', 'y'), ('y', 'v'), ('l', 'G'), ('l', 'K'), ('G', 'p'), ('K', 'O'), ('K', 'L'), ('x', 'C'), ('x', 'q'), ('p', 'I')] },
    { "edge": ("c", "h"), "weight": 615, "expected": [('a', 'j'), ('a', 'e'), ('j', 'A'), ('j', 'w'), ('c', 'h'), ('e', 't'), ('b', 'M'), ('b', 'N'), ('r', 'E'), ('M', 'k'), ('M', 'I'), ('A', 'h'), ('h', 's'), ('d', 'z'), ('d', 'E'), ('d', 'n'), ('z', 'o'), ('n', 'D'), ('H', 'o'), ('H', 'J'), ('t', 'm'), ('f', 'w'), ('f', 'u'), ('w', 'v'), ('g', 'J'), ('g', 'B'), ('B', 'q'), ('J', 'i'), ('s', 'C'), ('F', 'p'), ('k', 'y'), ('y', 'v'), ('l', 'G'), ('l', 'K'), ('G', 'p'), ('K', 'O'), ('K', 'L'), ('x', 'C'), ('x', 'q'), ('p', 'I')] },
    { "edge": ("d", "n"), "weight": 906, "expected": [('a', 'j'), ('a', 'e'), ('a', 'c'), ('j', 'A'), ('j', 'w'), ('e', 't'), ('b', 'M'), ('b', 'N'), ('r', 'E'), ('M', 'k'), ('M', 'I'), ('A', 'h'), ('h', 's'), ('d', 'z'), ('d', 'E'), ('d', 'n'), ('z', 'o'), ('n', 'D'), ('H', 'o'), ('H', 'J'), ('t', 'm'), ('f', 'w'), ('f', 'u'), ('w', 'v'), ('g', 'J'), ('g', 'B'), ('B', 'q'), ('J', 'i'), ('s', 'C'), ('F', 'p'), ('k', 'y'), ('y', 'v'), ('l', 'G'), ('l', 'K'), ('G', 'p'), ('K', 'O'), ('K', 'L'), ('x', 'C'), ('x', 'q'), ('p', 'I')] },
    { "edge": ("d", "E"), "weight": 1680, "expected": [('a', 'j'), ('a', 'e'), ('a', 'c'), ('j', 'A'), ('j', 'w'), ('e', 't'), ('b', 'M'), ('b', 'N'), ('r', 'E'), ('r', 'B'), ('M', 'k'), ('M', 'I'), ('A', 'h'), ('h', 's'), ('d', 'z'), ('d', 'n'), ('z', 'o'), ('n', 'D'), ('H', 'o'), ('H', 'J'), ('t', 'm'), ('f', 'w'), ('f', 'u'), ('w', 'v'), ('g', 'J'), ('g', 'B'), ('B', 'q'), ('J', 'i'), ('s', 'C'), ('F', 'p'), ('k', 'y'), ('y', 'v'), ('l', 'G'), ('l', 'K'), ('G', 'p'), ('K', 'O'), ('K', 'L'), ('x', 'C'), ('x', 'q'), ('p', 'I')] }
]